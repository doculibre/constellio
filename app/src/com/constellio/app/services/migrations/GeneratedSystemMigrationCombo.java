package com.constellio.app.services.migrations;

import com.constellio.app.entities.modules.MigrationResourcesProvider;
import com.constellio.app.entities.schemasDisplay.SchemaTypesDisplayConfig;
import com.constellio.app.entities.schemasDisplay.enums.MetadataInputType;
import com.constellio.app.modules.rm.model.calculators.TemporaryRecordDestructionDateCalculator;
import com.constellio.app.modules.rm.model.calculators.UserDocumentContentSizeCalculator;
import com.constellio.app.services.factories.AppLayerFactory;
import com.constellio.app.services.schemasDisplay.SchemaTypesDisplayTransactionBuilder;
import com.constellio.app.services.schemasDisplay.SchemasDisplayManager;
import com.constellio.app.ui.pages.search.criteria.CriterionFactory;
import com.constellio.app.ui.pages.search.criteria.FacetSelectionsFactory;
import com.constellio.model.entities.calculators.SavedSearchRestrictedCalculator;
import com.constellio.model.entities.enums.SearchPageLength;
import com.constellio.model.entities.records.calculators.UserDocumentTokensCalculator;
import com.constellio.model.entities.records.calculators.UserTitleCalculator;
import com.constellio.model.entities.records.wrappers.SavedSearch;
import com.constellio.model.entities.records.wrappers.structure.FacetOrderType;
import com.constellio.model.entities.records.wrappers.structure.FacetType;
import com.constellio.model.entities.records.wrappers.structure.ReportedMetadataFactory;
import com.constellio.model.entities.schemas.MetadataValueType;
import com.constellio.model.entities.schemas.RecordCacheType;
import com.constellio.model.entities.security.Role;
import com.constellio.model.entities.security.global.AgentStatus;
import com.constellio.model.entities.security.global.GlobalGroupStatus;
import com.constellio.model.entities.security.global.UserCredentialStatus;
import com.constellio.model.entities.structures.EmailAddressFactory;
import com.constellio.model.entities.structures.MapStringStringStructureFactory;
import com.constellio.model.services.contents.ContentFactory;
import com.constellio.model.services.schemas.builders.MetadataBuilder;
import com.constellio.model.services.schemas.builders.MetadataSchemaBuilder;
import com.constellio.model.services.schemas.builders.MetadataSchemaTypeBuilder;
import com.constellio.model.services.schemas.builders.MetadataSchemaTypesBuilder;
import com.constellio.model.services.schemas.calculators.AllReferencesCalculator;
import com.constellio.model.services.schemas.calculators.AllRemovedAuthsCalculator;
import com.constellio.model.services.schemas.calculators.AttachedAncestorsCalculator;
import com.constellio.model.services.schemas.calculators.AutocompleteFieldCalculator;
import com.constellio.model.services.schemas.calculators.DefaultTokensOfHierarchyCalculator;
import com.constellio.model.services.schemas.calculators.GroupAncestorsCalculator;
import com.constellio.model.services.schemas.calculators.PathCalculator;
import com.constellio.model.services.schemas.calculators.PathPartsCalculator;
import com.constellio.model.services.schemas.calculators.PrincipalPathCalculator;
import com.constellio.model.services.schemas.calculators.RolesCalculator;
import com.constellio.model.services.schemas.calculators.TokensCalculator2;
import com.constellio.model.services.schemas.calculators.TokensCalculator4;
import com.constellio.model.services.schemas.calculators.UserTokensCalculator2;
import com.constellio.model.services.schemas.validators.DecisionValidator;
import com.constellio.model.services.schemas.validators.EmailValidator;
import com.constellio.model.services.schemas.validators.JasperFilePrintableValidator;
import com.constellio.model.services.schemas.validators.ManualTokenValidator;
import com.constellio.model.services.schemas.validators.TemporaryRecordValidator;
import com.constellio.model.services.security.roles.RolesManager;

import java.util.ArrayList;

import static java.util.Arrays.asList;

public final class GeneratedSystemMigrationCombo {
  String collection;

  AppLayerFactory appLayerFactory;

  MigrationResourcesProvider resourcesProvider;

  GeneratedSystemMigrationCombo(String collection, AppLayerFactory appLayerFactory, MigrationResourcesProvider resourcesProvider) {
    this.collection = collection;
    this.appLayerFactory = appLayerFactory;
    this.resourcesProvider = resourcesProvider;
  }

  public void applyGeneratedSchemaAlteration(MetadataSchemaTypesBuilder typesBuilder) {
    MetadataSchemaTypeBuilder collectionSchemaType = typesBuilder.createNewSchemaType("collection",false).setSecurity(false);
    MetadataSchemaBuilder collectionSchema = collectionSchemaType.getDefaultSchema();
    MetadataSchemaTypeBuilder groupSchemaType = typesBuilder.createNewSchemaType("group",false).setSecurity(false);
    MetadataSchemaBuilder groupSchema = groupSchemaType.getDefaultSchema();
    MetadataSchemaTypeBuilder userSchemaType = typesBuilder.createNewSchemaType("user",false).setSecurity(false);
    MetadataSchemaBuilder userSchema = userSchemaType.getDefaultSchema();
    MetadataSchemaTypeBuilder authorizationDetailsSchemaType = typesBuilder.createNewSchemaType("authorizationDetails",false).setSecurity(false);
    MetadataSchemaBuilder authorizationDetailsSchema = authorizationDetailsSchemaType.getDefaultSchema();
    MetadataSchemaTypeBuilder capsuleSchemaType = typesBuilder.createNewSchemaType("capsule",false).setSecurity(false);
    MetadataSchemaBuilder capsuleSchema = capsuleSchemaType.getDefaultSchema();
    MetadataSchemaTypeBuilder emailToSendSchemaType = typesBuilder.createNewSchemaType("emailToSend",false).setSecurity(false).setRecordCacheType(RecordCacheType.NOT_CACHED);
    MetadataSchemaBuilder emailToSendSchema = emailToSendSchemaType.getDefaultSchema();
    MetadataSchemaTypeBuilder eventSchemaType = typesBuilder.createNewSchemaType("event",false).setSecurity(false).setRecordCacheType(RecordCacheType.NOT_CACHED);
    MetadataSchemaBuilder eventSchema = eventSchemaType.getDefaultSchema();
    MetadataSchemaTypeBuilder facetSchemaType = typesBuilder.createNewSchemaType("facet",false).setSecurity(false);
    MetadataSchemaBuilder facet_fieldSchema = facetSchemaType.createCustomSchema("field");
    MetadataSchemaBuilder facet_querySchema = facetSchemaType.createCustomSchema("query");
    MetadataSchemaBuilder facetSchema = facetSchemaType.getDefaultSchema();
    MetadataSchemaTypeBuilder globalGroupSchemaType = typesBuilder.createNewSchemaType("globalGroup",false).setSecurity(false);
    MetadataSchemaBuilder globalGroupSchema = globalGroupSchemaType.getDefaultSchema();
    MetadataSchemaTypeBuilder printableSchemaType = typesBuilder.createNewSchemaType("printable",false).setSecurity(false);
    MetadataSchemaBuilder printableSchema = printableSchemaType.getDefaultSchema();
    MetadataSchemaTypeBuilder reportSchemaType = typesBuilder.createNewSchemaType("report",false).setSecurity(false);
    MetadataSchemaBuilder reportSchema = reportSchemaType.getDefaultSchema();
    MetadataSchemaTypeBuilder savedSearchSchemaType = typesBuilder.createNewSchemaType("savedSearch",false).setSecurity(false).setRecordCacheType(RecordCacheType.NOT_CACHED);
    MetadataSchemaBuilder savedSearchSchema = savedSearchSchemaType.getDefaultSchema();
    MetadataSchemaTypeBuilder searchEventSchemaType = typesBuilder.createNewSchemaType("searchEvent",false).setSecurity(false).setRecordCacheType(RecordCacheType.NOT_CACHED).setDataStore("events");
    MetadataSchemaBuilder searchEventSchema = searchEventSchemaType.getDefaultSchema();
    MetadataSchemaTypeBuilder taskSchemaType = typesBuilder.createNewSchemaType("task",false).setSecurity(false);
    MetadataSchemaBuilder task_approvalSchema = taskSchemaType.createCustomSchema("approval");
    MetadataSchemaBuilder taskSchema = taskSchemaType.getDefaultSchema();
    MetadataSchemaTypeBuilder temporaryRecordSchemaType = typesBuilder.createNewSchemaType("temporaryRecord",false).setSecurity(false);
    MetadataSchemaBuilder temporaryRecord_batchProcessReportSchema = temporaryRecordSchemaType.createCustomSchema("batchProcessReport");
    MetadataSchemaBuilder temporaryRecord_exportAuditSchema = temporaryRecordSchemaType.createCustomSchema("exportAudit");
    MetadataSchemaBuilder temporaryRecord_importAuditSchema = temporaryRecordSchemaType.createCustomSchema("importAudit");
    MetadataSchemaBuilder temporaryRecord_scriptReportSchema = temporaryRecordSchemaType.createCustomSchema("scriptReport");
    MetadataSchemaBuilder temporaryRecordSchema = temporaryRecordSchemaType.getDefaultSchema();
    MetadataSchemaTypeBuilder thesaurusConfigSchemaType = typesBuilder.createNewSchemaType("thesaurusConfig",false).setSecurity(false);
    MetadataSchemaBuilder thesaurusConfigSchema = thesaurusConfigSchemaType.getDefaultSchema();
    MetadataSchemaTypeBuilder userCredentialSchemaType = typesBuilder.createNewSchemaType("userCredential",false).setSecurity(false);
    MetadataSchemaBuilder userCredentialSchema = userCredentialSchemaType.getDefaultSchema();
    MetadataSchemaTypeBuilder userDocumentSchemaType = typesBuilder.createNewSchemaType("userDocument",false).setSecurity(false).setRecordCacheType(RecordCacheType.SUMMARY_CACHED_WITH_VOLATILE);
    MetadataSchemaBuilder userDocumentSchema = userDocumentSchemaType.getDefaultSchema();
    MetadataSchemaTypeBuilder userFolderSchemaType = typesBuilder.createNewSchemaType("userFolder",false).setSecurity(false).setRecordCacheType(RecordCacheType.SUMMARY_CACHED_WITH_VOLATILE);
    MetadataSchemaBuilder userFolderSchema = userFolderSchemaType.getDefaultSchema();
    createCollectionSchemaTypeMetadatas(typesBuilder,collectionSchemaType, collectionSchema);
    createGroupSchemaTypeMetadatas(typesBuilder,groupSchemaType, groupSchema);
    createUserSchemaTypeMetadatas(typesBuilder,userSchemaType, userSchema);
    createAuthorizationDetailsSchemaTypeMetadatas(typesBuilder,authorizationDetailsSchemaType, authorizationDetailsSchema);
    createCapsuleSchemaTypeMetadatas(typesBuilder,capsuleSchemaType, capsuleSchema);
    createEmailToSendSchemaTypeMetadatas(typesBuilder,emailToSendSchemaType, emailToSendSchema);
    createEventSchemaTypeMetadatas(typesBuilder,eventSchemaType, eventSchema);
    createFacetSchemaTypeMetadatas(typesBuilder,facetSchemaType, facet_fieldSchema, facet_querySchema, facetSchema);
    createGlobalGroupSchemaTypeMetadatas(typesBuilder,globalGroupSchemaType, globalGroupSchema);
    createPrintableSchemaTypeMetadatas(typesBuilder,printableSchemaType, printableSchema);
    createReportSchemaTypeMetadatas(typesBuilder,reportSchemaType, reportSchema);
    createSavedSearchSchemaTypeMetadatas(typesBuilder,savedSearchSchemaType, savedSearchSchema);
    createSearchEventSchemaTypeMetadatas(typesBuilder,searchEventSchemaType, searchEventSchema);
    createTaskSchemaTypeMetadatas(typesBuilder,taskSchemaType, task_approvalSchema, taskSchema);
    createTemporaryRecordSchemaTypeMetadatas(typesBuilder,temporaryRecordSchemaType, temporaryRecord_batchProcessReportSchema, temporaryRecord_exportAuditSchema, temporaryRecord_importAuditSchema, temporaryRecord_scriptReportSchema, temporaryRecordSchema);
    createThesaurusConfigSchemaTypeMetadatas(typesBuilder,thesaurusConfigSchemaType, thesaurusConfigSchema);
    createUserCredentialSchemaTypeMetadatas(typesBuilder,userCredentialSchemaType, userCredentialSchema);
    createUserDocumentSchemaTypeMetadatas(typesBuilder,userDocumentSchemaType, userDocumentSchema);
    createUserFolderSchemaTypeMetadatas(typesBuilder,userFolderSchemaType, userFolderSchema);
    collectionSchema.get("allReferences").defineDataEntry().asCalculated(AllReferencesCalculator.class);
    collectionSchema.get("allRemovedAuths").defineDataEntry().asCalculated(AllRemovedAuthsCalculator.class);
    collectionSchema.get("attachedAncestors").defineDataEntry().asCalculated(AttachedAncestorsCalculator.class);
    collectionSchema.get("autocomplete").defineDataEntry().asCalculated(AutocompleteFieldCalculator.class);
    collectionSchema.get("path").defineDataEntry().asCalculated(PathCalculator.class);
    collectionSchema.get("pathParts").defineDataEntry().asCalculated(PathPartsCalculator.class);
    collectionSchema.get("principalpath").defineDataEntry().asCalculated(PrincipalPathCalculator.class);
    collectionSchema.get("tokens").defineDataEntry().asCalculated(TokensCalculator2.class);
    collectionSchema.get("tokensHierarchy").defineDataEntry().asCalculated(DefaultTokensOfHierarchyCalculator.class);
    groupSchema.get("allReferences").defineDataEntry().asCalculated(AllReferencesCalculator.class);
    groupSchema.get("allRemovedAuths").defineDataEntry().asCalculated(AllRemovedAuthsCalculator.class);
    groupSchema.get("ancestors").defineDataEntry().asCalculated(GroupAncestorsCalculator.class);
    groupSchema.get("attachedAncestors").defineDataEntry().asCalculated(AttachedAncestorsCalculator.class);
    groupSchema.get("autocomplete").defineDataEntry().asCalculated(AutocompleteFieldCalculator.class);
    groupSchema.get("path").defineDataEntry().asCalculated(PathCalculator.class);
    groupSchema.get("pathParts").defineDataEntry().asCalculated(PathPartsCalculator.class);
    groupSchema.get("principalpath").defineDataEntry().asCalculated(PrincipalPathCalculator.class);
    groupSchema.get("tokens").defineDataEntry().asCalculated(TokensCalculator2.class);
    groupSchema.get("tokensHierarchy").defineDataEntry().asCalculated(DefaultTokensOfHierarchyCalculator.class);
    userSchema.get("allReferences").defineDataEntry().asCalculated(AllReferencesCalculator.class);
    userSchema.get("allRemovedAuths").defineDataEntry().asCalculated(AllRemovedAuthsCalculator.class);
    userSchema.get("allroles").defineDataEntry().asCalculated(RolesCalculator.class);
    userSchema.get("attachedAncestors").defineDataEntry().asCalculated(AttachedAncestorsCalculator.class);
    userSchema.get("autocomplete").defineDataEntry().asCalculated(AutocompleteFieldCalculator.class);
    userSchema.get("path").defineDataEntry().asCalculated(PathCalculator.class);
    userSchema.get("pathParts").defineDataEntry().asCalculated(PathPartsCalculator.class);
    userSchema.get("principalpath").defineDataEntry().asCalculated(PrincipalPathCalculator.class);
    userSchema.get("title").defineDataEntry().asCalculated(UserTitleCalculator.class);
    userSchema.get("tokens").defineDataEntry().asCalculated(TokensCalculator2.class);
    userSchema.get("tokensHierarchy").defineDataEntry().asCalculated(DefaultTokensOfHierarchyCalculator.class);
    userSchema.get("userDocumentSizeSum").defineDataEntry().asSum(typesBuilder.getMetadata("userDocument_default_user"), typesBuilder.getMetadata("userDocument_default_contentSize"));
    userSchema.get("usertokens").defineDataEntry().asCalculated(UserTokensCalculator2.class);
    authorizationDetailsSchema.get("allReferences").defineDataEntry().asCalculated(AllReferencesCalculator.class);
    authorizationDetailsSchema.get("allRemovedAuths").defineDataEntry().asCalculated(AllRemovedAuthsCalculator.class);
    authorizationDetailsSchema.get("attachedAncestors").defineDataEntry().asCalculated(AttachedAncestorsCalculator.class);
    authorizationDetailsSchema.get("autocomplete").defineDataEntry().asCalculated(AutocompleteFieldCalculator.class);
    authorizationDetailsSchema.get("path").defineDataEntry().asCalculated(PathCalculator.class);
    authorizationDetailsSchema.get("pathParts").defineDataEntry().asCalculated(PathPartsCalculator.class);
    authorizationDetailsSchema.get("principalpath").defineDataEntry().asCalculated(PrincipalPathCalculator.class);
    authorizationDetailsSchema.get("tokens").defineDataEntry().asCalculated(TokensCalculator2.class);
    authorizationDetailsSchema.get("tokensHierarchy").defineDataEntry().asCalculated(DefaultTokensOfHierarchyCalculator.class);
    capsuleSchema.get("allReferences").defineDataEntry().asCalculated(AllReferencesCalculator.class);
    capsuleSchema.get("allRemovedAuths").defineDataEntry().asCalculated(AllRemovedAuthsCalculator.class);
    capsuleSchema.get("attachedAncestors").defineDataEntry().asCalculated(AttachedAncestorsCalculator.class);
    capsuleSchema.get("autocomplete").defineDataEntry().asCalculated(AutocompleteFieldCalculator.class);
    capsuleSchema.get("path").defineDataEntry().asCalculated(PathCalculator.class);
    capsuleSchema.get("pathParts").defineDataEntry().asCalculated(PathPartsCalculator.class);
    capsuleSchema.get("principalpath").defineDataEntry().asCalculated(PrincipalPathCalculator.class);
    capsuleSchema.get("tokens").defineDataEntry().asCalculated(TokensCalculator4.class);
    capsuleSchema.get("tokensHierarchy").defineDataEntry().asCalculated(DefaultTokensOfHierarchyCalculator.class);
    emailToSendSchema.get("allReferences").defineDataEntry().asCalculated(AllReferencesCalculator.class);
    emailToSendSchema.get("allRemovedAuths").defineDataEntry().asCalculated(AllRemovedAuthsCalculator.class);
    emailToSendSchema.get("attachedAncestors").defineDataEntry().asCalculated(AttachedAncestorsCalculator.class);
    emailToSendSchema.get("autocomplete").defineDataEntry().asCalculated(AutocompleteFieldCalculator.class);
    emailToSendSchema.get("path").defineDataEntry().asCalculated(PathCalculator.class);
    emailToSendSchema.get("pathParts").defineDataEntry().asCalculated(PathPartsCalculator.class);
    emailToSendSchema.get("principalpath").defineDataEntry().asCalculated(PrincipalPathCalculator.class);
    emailToSendSchema.get("tokens").defineDataEntry().asCalculated(TokensCalculator2.class);
    emailToSendSchema.get("tokensHierarchy").defineDataEntry().asCalculated(DefaultTokensOfHierarchyCalculator.class);
    eventSchema.get("allReferences").defineDataEntry().asCalculated(AllReferencesCalculator.class);
    eventSchema.get("allRemovedAuths").defineDataEntry().asCalculated(AllRemovedAuthsCalculator.class);
    eventSchema.get("attachedAncestors").defineDataEntry().asCalculated(AttachedAncestorsCalculator.class);
    eventSchema.get("autocomplete").defineDataEntry().asCalculated(AutocompleteFieldCalculator.class);
    eventSchema.get("path").defineDataEntry().asCalculated(PathCalculator.class);
    eventSchema.get("pathParts").defineDataEntry().asCalculated(PathPartsCalculator.class);
    eventSchema.get("principalpath").defineDataEntry().asCalculated(PrincipalPathCalculator.class);
    eventSchema.get("tokens").defineDataEntry().asCalculated(TokensCalculator2.class);
    eventSchema.get("tokensHierarchy").defineDataEntry().asCalculated(DefaultTokensOfHierarchyCalculator.class);
    facetSchema.get("allReferences").defineDataEntry().asCalculated(AllReferencesCalculator.class);
    facetSchema.get("allRemovedAuths").defineDataEntry().asCalculated(AllRemovedAuthsCalculator.class);
    facetSchema.get("attachedAncestors").defineDataEntry().asCalculated(AttachedAncestorsCalculator.class);
    facetSchema.get("autocomplete").defineDataEntry().asCalculated(AutocompleteFieldCalculator.class);
    facetSchema.get("path").defineDataEntry().asCalculated(PathCalculator.class);
    facetSchema.get("pathParts").defineDataEntry().asCalculated(PathPartsCalculator.class);
    facetSchema.get("principalpath").defineDataEntry().asCalculated(PrincipalPathCalculator.class);
    facetSchema.get("tokens").defineDataEntry().asCalculated(TokensCalculator2.class);
    facetSchema.get("tokensHierarchy").defineDataEntry().asCalculated(DefaultTokensOfHierarchyCalculator.class);
    globalGroupSchema.get("allReferences").defineDataEntry().asCalculated(AllReferencesCalculator.class);
    globalGroupSchema.get("allRemovedAuths").defineDataEntry().asCalculated(AllRemovedAuthsCalculator.class);
    globalGroupSchema.get("attachedAncestors").defineDataEntry().asCalculated(AttachedAncestorsCalculator.class);
    globalGroupSchema.get("autocomplete").defineDataEntry().asCalculated(AutocompleteFieldCalculator.class);
    globalGroupSchema.get("path").defineDataEntry().asCalculated(PathCalculator.class);
    globalGroupSchema.get("pathParts").defineDataEntry().asCalculated(PathPartsCalculator.class);
    globalGroupSchema.get("principalpath").defineDataEntry().asCalculated(PrincipalPathCalculator.class);
    globalGroupSchema.get("tokens").defineDataEntry().asCalculated(TokensCalculator2.class);
    globalGroupSchema.get("tokensHierarchy").defineDataEntry().asCalculated(DefaultTokensOfHierarchyCalculator.class);
    printableSchema.get("allReferences").defineDataEntry().asCalculated(AllReferencesCalculator.class);
    printableSchema.get("allRemovedAuths").defineDataEntry().asCalculated(AllRemovedAuthsCalculator.class);
    printableSchema.get("attachedAncestors").defineDataEntry().asCalculated(AttachedAncestorsCalculator.class);
    printableSchema.get("autocomplete").defineDataEntry().asCalculated(AutocompleteFieldCalculator.class);
    printableSchema.get("path").defineDataEntry().asCalculated(PathCalculator.class);
    printableSchema.get("pathParts").defineDataEntry().asCalculated(PathPartsCalculator.class);
    printableSchema.get("principalpath").defineDataEntry().asCalculated(PrincipalPathCalculator.class);
    printableSchema.get("tokens").defineDataEntry().asCalculated(TokensCalculator4.class);
    printableSchema.get("tokensHierarchy").defineDataEntry().asCalculated(DefaultTokensOfHierarchyCalculator.class);
    reportSchema.get("allReferences").defineDataEntry().asCalculated(AllReferencesCalculator.class);
    reportSchema.get("allRemovedAuths").defineDataEntry().asCalculated(AllRemovedAuthsCalculator.class);
    reportSchema.get("attachedAncestors").defineDataEntry().asCalculated(AttachedAncestorsCalculator.class);
    reportSchema.get("autocomplete").defineDataEntry().asCalculated(AutocompleteFieldCalculator.class);
    reportSchema.get("path").defineDataEntry().asCalculated(PathCalculator.class);
    reportSchema.get("pathParts").defineDataEntry().asCalculated(PathPartsCalculator.class);
    reportSchema.get("principalpath").defineDataEntry().asCalculated(PrincipalPathCalculator.class);
    reportSchema.get("tokens").defineDataEntry().asCalculated(TokensCalculator2.class);
    reportSchema.get("tokensHierarchy").defineDataEntry().asCalculated(DefaultTokensOfHierarchyCalculator.class);
    savedSearchSchema.get("allReferences").defineDataEntry().asCalculated(AllReferencesCalculator.class);
    savedSearchSchema.get("allRemovedAuths").defineDataEntry().asCalculated(AllRemovedAuthsCalculator.class);
    savedSearchSchema.get("attachedAncestors").defineDataEntry().asCalculated(AttachedAncestorsCalculator.class);
    savedSearchSchema.get("autocomplete").defineDataEntry().asCalculated(AutocompleteFieldCalculator.class);
    savedSearchSchema.get("path").defineDataEntry().asCalculated(PathCalculator.class);
    savedSearchSchema.get("pathParts").defineDataEntry().asCalculated(PathPartsCalculator.class);
    savedSearchSchema.get("principalpath").defineDataEntry().asCalculated(PrincipalPathCalculator.class);
    savedSearchSchema.get("restricted").defineDataEntry().asCalculated(SavedSearchRestrictedCalculator.class);
    savedSearchSchema.get("tokens").defineDataEntry().asCalculated(TokensCalculator2.class);
    savedSearchSchema.get("tokensHierarchy").defineDataEntry().asCalculated(DefaultTokensOfHierarchyCalculator.class);
    searchEventSchema.get("allReferences").defineDataEntry().asCalculated(AllReferencesCalculator.class);
    searchEventSchema.get("allRemovedAuths").defineDataEntry().asCalculated(AllRemovedAuthsCalculator.class);
    searchEventSchema.get("attachedAncestors").defineDataEntry().asCalculated(AttachedAncestorsCalculator.class);
    searchEventSchema.get("autocomplete").defineDataEntry().asCalculated(AutocompleteFieldCalculator.class);
    searchEventSchema.get("path").defineDataEntry().asCalculated(PathCalculator.class);
    searchEventSchema.get("pathParts").defineDataEntry().asCalculated(PathPartsCalculator.class);
    searchEventSchema.get("principalpath").defineDataEntry().asCalculated(PrincipalPathCalculator.class);
    searchEventSchema.get("tokens").defineDataEntry().asCalculated(TokensCalculator4.class);
    searchEventSchema.get("tokensHierarchy").defineDataEntry().asCalculated(DefaultTokensOfHierarchyCalculator.class);
    taskSchema.get("allReferences").defineDataEntry().asCalculated(AllReferencesCalculator.class);
    taskSchema.get("allRemovedAuths").defineDataEntry().asCalculated(AllRemovedAuthsCalculator.class);
    taskSchema.get("attachedAncestors").defineDataEntry().asCalculated(AttachedAncestorsCalculator.class);
    taskSchema.get("autocomplete").defineDataEntry().asCalculated(AutocompleteFieldCalculator.class);
    taskSchema.get("path").defineDataEntry().asCalculated(PathCalculator.class);
    taskSchema.get("pathParts").defineDataEntry().asCalculated(PathPartsCalculator.class);
    taskSchema.get("principalpath").defineDataEntry().asCalculated(PrincipalPathCalculator.class);
    taskSchema.get("tokens").defineDataEntry().asCalculated(TokensCalculator2.class);
    taskSchema.get("tokensHierarchy").defineDataEntry().asCalculated(DefaultTokensOfHierarchyCalculator.class);
    temporaryRecordSchema.get("allReferences").defineDataEntry().asCalculated(AllReferencesCalculator.class);
    temporaryRecordSchema.get("allRemovedAuths").defineDataEntry().asCalculated(AllRemovedAuthsCalculator.class);
    temporaryRecordSchema.get("attachedAncestors").defineDataEntry().asCalculated(AttachedAncestorsCalculator.class);
    temporaryRecordSchema.get("autocomplete").defineDataEntry().asCalculated(AutocompleteFieldCalculator.class);
    temporaryRecordSchema.get("destructionDate").defineDataEntry().asCalculated(TemporaryRecordDestructionDateCalculator.class);
    temporaryRecordSchema.get("path").defineDataEntry().asCalculated(PathCalculator.class);
    temporaryRecordSchema.get("pathParts").defineDataEntry().asCalculated(PathPartsCalculator.class);
    temporaryRecordSchema.get("principalpath").defineDataEntry().asCalculated(PrincipalPathCalculator.class);
    temporaryRecordSchema.get("tokens").defineDataEntry().asCalculated(TokensCalculator4.class);
    temporaryRecordSchema.get("tokensHierarchy").defineDataEntry().asCalculated(DefaultTokensOfHierarchyCalculator.class);
    thesaurusConfigSchema.get("allReferences").defineDataEntry().asCalculated(AllReferencesCalculator.class);
    thesaurusConfigSchema.get("allRemovedAuths").defineDataEntry().asCalculated(AllRemovedAuthsCalculator.class);
    thesaurusConfigSchema.get("attachedAncestors").defineDataEntry().asCalculated(AttachedAncestorsCalculator.class);
    thesaurusConfigSchema.get("autocomplete").defineDataEntry().asCalculated(AutocompleteFieldCalculator.class);
    thesaurusConfigSchema.get("path").defineDataEntry().asCalculated(PathCalculator.class);
    thesaurusConfigSchema.get("pathParts").defineDataEntry().asCalculated(PathPartsCalculator.class);
    thesaurusConfigSchema.get("principalpath").defineDataEntry().asCalculated(PrincipalPathCalculator.class);
    thesaurusConfigSchema.get("tokens").defineDataEntry().asCalculated(TokensCalculator4.class);
    thesaurusConfigSchema.get("tokensHierarchy").defineDataEntry().asCalculated(DefaultTokensOfHierarchyCalculator.class);
    userCredentialSchema.get("allReferences").defineDataEntry().asCalculated(AllReferencesCalculator.class);
    userCredentialSchema.get("allRemovedAuths").defineDataEntry().asCalculated(AllRemovedAuthsCalculator.class);
    userCredentialSchema.get("attachedAncestors").defineDataEntry().asCalculated(AttachedAncestorsCalculator.class);
    userCredentialSchema.get("autocomplete").defineDataEntry().asCalculated(AutocompleteFieldCalculator.class);
    userCredentialSchema.get("path").defineDataEntry().asCalculated(PathCalculator.class);
    userCredentialSchema.get("pathParts").defineDataEntry().asCalculated(PathPartsCalculator.class);
    userCredentialSchema.get("principalpath").defineDataEntry().asCalculated(PrincipalPathCalculator.class);
    userCredentialSchema.get("title").defineDataEntry().asCalculated(UserTitleCalculator.class);
    userCredentialSchema.get("tokens").defineDataEntry().asCalculated(TokensCalculator2.class);
    userCredentialSchema.get("tokensHierarchy").defineDataEntry().asCalculated(DefaultTokensOfHierarchyCalculator.class);
    userDocumentSchema.get("allReferences").defineDataEntry().asCalculated(AllReferencesCalculator.class);
    userDocumentSchema.get("allRemovedAuths").defineDataEntry().asCalculated(AllRemovedAuthsCalculator.class);
    userDocumentSchema.get("attachedAncestors").defineDataEntry().asCalculated(AttachedAncestorsCalculator.class);
    userDocumentSchema.get("autocomplete").defineDataEntry().asCalculated(AutocompleteFieldCalculator.class);
    userDocumentSchema.get("contentSize").defineDataEntry().asCalculated(UserDocumentContentSizeCalculator.class);
    userDocumentSchema.get("path").defineDataEntry().asCalculated(PathCalculator.class);
    userDocumentSchema.get("pathParts").defineDataEntry().asCalculated(PathPartsCalculator.class);
    userDocumentSchema.get("principalpath").defineDataEntry().asCalculated(PrincipalPathCalculator.class);
    userDocumentSchema.get("tokens").defineDataEntry().asCalculated(UserDocumentTokensCalculator.class);
    userDocumentSchema.get("tokensHierarchy").defineDataEntry().asCalculated(DefaultTokensOfHierarchyCalculator.class);
    userFolderSchema.get("allReferences").defineDataEntry().asCalculated(AllReferencesCalculator.class);
    userFolderSchema.get("allRemovedAuths").defineDataEntry().asCalculated(AllRemovedAuthsCalculator.class);
    userFolderSchema.get("attachedAncestors").defineDataEntry().asCalculated(AttachedAncestorsCalculator.class);
    userFolderSchema.get("autocomplete").defineDataEntry().asCalculated(AutocompleteFieldCalculator.class);
    userFolderSchema.get("path").defineDataEntry().asCalculated(PathCalculator.class);
    userFolderSchema.get("pathParts").defineDataEntry().asCalculated(PathPartsCalculator.class);
    userFolderSchema.get("principalpath").defineDataEntry().asCalculated(PrincipalPathCalculator.class);
    userFolderSchema.get("tokens").defineDataEntry().asCalculated(TokensCalculator4.class);
    userFolderSchema.get("tokensHierarchy").defineDataEntry().asCalculated(DefaultTokensOfHierarchyCalculator.class);
  }

  private void createCapsuleSchemaTypeMetadatas(MetadataSchemaTypesBuilder types, MetadataSchemaTypeBuilder capsuleSchemaType, MetadataSchemaBuilder capsuleSchema) {
    MetadataBuilder capsule_allReferences = capsuleSchema.create("allReferences").setType(MetadataValueType.STRING);
    capsule_allReferences.setMultivalue(true);
    capsule_allReferences.setSystemReserved(true);
    capsule_allReferences.setUndeletable(true);
    capsule_allReferences.setMultiLingual(false);
    MetadataBuilder capsule_allRemovedAuths = capsuleSchema.create("allRemovedAuths").setType(MetadataValueType.STRING);
    capsule_allRemovedAuths.setMultivalue(true);
    capsule_allRemovedAuths.setSystemReserved(true);
    capsule_allRemovedAuths.setUndeletable(true);
    capsule_allRemovedAuths.setEssential(true);
    capsule_allRemovedAuths.setMultiLingual(false);
    MetadataBuilder capsule_attachedAncestors = capsuleSchema.create("attachedAncestors").setType(MetadataValueType.STRING);
    capsule_attachedAncestors.setMultivalue(true);
    capsule_attachedAncestors.setSystemReserved(true);
    capsule_attachedAncestors.setUndeletable(true);
    capsule_attachedAncestors.setEssential(true);
    capsule_attachedAncestors.setMultiLingual(false);
    MetadataBuilder capsule_autocomplete = capsuleSchema.create("autocomplete").setType(MetadataValueType.STRING);
    capsule_autocomplete.setMultivalue(true);
    capsule_autocomplete.setSystemReserved(true);
    capsule_autocomplete.setUndeletable(true);
    capsule_autocomplete.setEssential(true);
    capsule_autocomplete.setMultiLingual(true);
    MetadataBuilder capsule_caption = capsuleSchema.create("caption").setType(MetadataValueType.STRING);
    capsule_caption.setSystemReserved(true);
    capsule_caption.setUndeletable(true);
    capsule_caption.setMultiLingual(false);
    capsule_caption.setSortable(true);
    MetadataBuilder capsule_code = capsuleSchema.create("code").setType(MetadataValueType.STRING);
    MetadataBuilder capsule_createdBy = capsuleSchema.create("createdBy").setType(MetadataValueType.REFERENCE);
    capsule_createdBy.setSystemReserved(true);
    capsule_createdBy.setUndeletable(true);
    capsule_createdBy.setMultiLingual(false);
    capsule_createdBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder capsule_createdOn = capsuleSchema.create("createdOn").setType(MetadataValueType.DATE_TIME);
    capsule_createdOn.setSystemReserved(true);
    capsule_createdOn.setUndeletable(true);
    capsule_createdOn.setMultiLingual(false);
    capsule_createdOn.setSortable(true);
    MetadataBuilder capsule_deleted = capsuleSchema.create("deleted").setType(MetadataValueType.BOOLEAN);
    capsule_deleted.setSystemReserved(true);
    capsule_deleted.setUndeletable(true);
    capsule_deleted.setMultiLingual(false);
    MetadataBuilder capsule_denyTokens = capsuleSchema.create("denyTokens").setType(MetadataValueType.STRING);
    capsule_denyTokens.setMultivalue(true);
    capsule_denyTokens.setSystemReserved(true);
    capsule_denyTokens.setUndeletable(true);
    capsule_denyTokens.setMultiLingual(false);
    capsule_denyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder capsule_detachedauthorizations = capsuleSchema.create("detachedauthorizations").setType(MetadataValueType.BOOLEAN);
    capsule_detachedauthorizations.setSystemReserved(true);
    capsule_detachedauthorizations.setUndeletable(true);
    capsule_detachedauthorizations.setMultiLingual(false);
    MetadataBuilder capsule_errorOnPhysicalDeletion = capsuleSchema.create("errorOnPhysicalDeletion").setType(MetadataValueType.BOOLEAN);
    capsule_errorOnPhysicalDeletion.setSystemReserved(true);
    capsule_errorOnPhysicalDeletion.setUndeletable(true);
    capsule_errorOnPhysicalDeletion.setMultiLingual(false);
    MetadataBuilder capsule_estimatedSize = capsuleSchema.create("estimatedSize").setType(MetadataValueType.INTEGER);
    capsule_estimatedSize.setSystemReserved(true);
    capsule_estimatedSize.setUndeletable(true);
    capsule_estimatedSize.setMultiLingual(false);
    MetadataBuilder capsule_hidden = capsuleSchema.create("hidden").setType(MetadataValueType.BOOLEAN);
    capsule_hidden.setSystemReserved(true);
    capsule_hidden.setUndeletable(true);
    capsule_hidden.setMultiLingual(false);
    MetadataBuilder capsule_html = capsuleSchema.create("html").setType(MetadataValueType.TEXT);
    MetadataBuilder capsule_id = capsuleSchema.create("id").setType(MetadataValueType.STRING);
    capsule_id.setDefaultRequirement(true);
    capsule_id.setSystemReserved(true);
    capsule_id.setUndeletable(true);
    capsule_id.setMultiLingual(false);
    capsule_id.setSearchable(true);
    capsule_id.setSortable(true);
    capsule_id.setUniqueValue(true);
    capsule_id.setUnmodifiable(true);
    MetadataBuilder capsule_keywords = capsuleSchema.create("keywords").setType(MetadataValueType.STRING);
    capsule_keywords.setMultivalue(true);
    MetadataBuilder capsule_legacyIdentifier = capsuleSchema.create("legacyIdentifier").setType(MetadataValueType.STRING);
    capsule_legacyIdentifier.setDefaultRequirement(true);
    capsule_legacyIdentifier.setSystemReserved(true);
    capsule_legacyIdentifier.setUndeletable(true);
    capsule_legacyIdentifier.setMultiLingual(false);
    capsule_legacyIdentifier.setSearchable(true);
    capsule_legacyIdentifier.setUniqueValue(true);
    capsule_legacyIdentifier.setUnmodifiable(true);
    MetadataBuilder capsule_logicallyDeletedOn = capsuleSchema.create("logicallyDeletedOn").setType(MetadataValueType.DATE_TIME);
    capsule_logicallyDeletedOn.setSystemReserved(true);
    capsule_logicallyDeletedOn.setUndeletable(true);
    capsule_logicallyDeletedOn.setMultiLingual(false);
    MetadataBuilder capsule_manualTokens = capsuleSchema.create("manualTokens").setType(MetadataValueType.STRING);
    capsule_manualTokens.setMultivalue(true);
    capsule_manualTokens.setSystemReserved(true);
    capsule_manualTokens.setUndeletable(true);
    capsule_manualTokens.setMultiLingual(false);
    capsule_manualTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder capsule_markedForParsing = capsuleSchema.create("markedForParsing").setType(MetadataValueType.BOOLEAN);
    capsule_markedForParsing.setSystemReserved(true);
    capsule_markedForParsing.setUndeletable(true);
    capsule_markedForParsing.setMultiLingual(false);
    MetadataBuilder capsule_markedForPreviewConversion = capsuleSchema.create("markedForPreviewConversion").setType(MetadataValueType.BOOLEAN);
    capsule_markedForPreviewConversion.setSystemReserved(true);
    capsule_markedForPreviewConversion.setUndeletable(true);
    capsule_markedForPreviewConversion.setMultiLingual(false);
    MetadataBuilder capsule_markedForReindexing = capsuleSchema.create("markedForReindexing").setType(MetadataValueType.BOOLEAN);
    capsule_markedForReindexing.setSystemReserved(true);
    capsule_markedForReindexing.setUndeletable(true);
    capsule_markedForReindexing.setMultiLingual(false);
    MetadataBuilder capsule_migrationDataVersion = capsuleSchema.create("migrationDataVersion").setType(MetadataValueType.NUMBER);
    capsule_migrationDataVersion.setSystemReserved(true);
    capsule_migrationDataVersion.setUndeletable(true);
    capsule_migrationDataVersion.setMultiLingual(false);
    capsule_migrationDataVersion.setEssentialInSummary(true);
    MetadataBuilder capsule_modifiedBy = capsuleSchema.create("modifiedBy").setType(MetadataValueType.REFERENCE);
    capsule_modifiedBy.setSystemReserved(true);
    capsule_modifiedBy.setUndeletable(true);
    capsule_modifiedBy.setMultiLingual(false);
    capsule_modifiedBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder capsule_modifiedOn = capsuleSchema.create("modifiedOn").setType(MetadataValueType.DATE_TIME);
    capsule_modifiedOn.setSystemReserved(true);
    capsule_modifiedOn.setUndeletable(true);
    capsule_modifiedOn.setMultiLingual(false);
    capsule_modifiedOn.setSortable(true);
    MetadataBuilder capsule_path = capsuleSchema.create("path").setType(MetadataValueType.STRING);
    capsule_path.setMultivalue(true);
    capsule_path.setSystemReserved(true);
    capsule_path.setUndeletable(true);
    capsule_path.setMultiLingual(false);
    MetadataBuilder capsule_pathParts = capsuleSchema.create("pathParts").setType(MetadataValueType.STRING);
    capsule_pathParts.setMultivalue(true);
    capsule_pathParts.setSystemReserved(true);
    capsule_pathParts.setUndeletable(true);
    capsule_pathParts.setMultiLingual(false);
    MetadataBuilder capsule_principalpath = capsuleSchema.create("principalpath").setType(MetadataValueType.STRING);
    capsule_principalpath.setSystemReserved(true);
    capsule_principalpath.setUndeletable(true);
    capsule_principalpath.setMultiLingual(false);
    MetadataBuilder capsule_removedauthorizations = capsuleSchema.create("removedauthorizations").setType(MetadataValueType.STRING);
    capsule_removedauthorizations.setMultivalue(true);
    capsule_removedauthorizations.setSystemReserved(true);
    capsule_removedauthorizations.setUndeletable(true);
    capsule_removedauthorizations.setMultiLingual(false);
    MetadataBuilder capsule_schema = capsuleSchema.create("schema").setType(MetadataValueType.STRING);
    capsule_schema.setDefaultRequirement(true);
    capsule_schema.setSystemReserved(true);
    capsule_schema.setUndeletable(true);
    capsule_schema.setMultiLingual(false);
    MetadataBuilder capsule_shareDenyTokens = capsuleSchema.create("shareDenyTokens").setType(MetadataValueType.STRING);
    capsule_shareDenyTokens.setMultivalue(true);
    capsule_shareDenyTokens.setSystemReserved(true);
    capsule_shareDenyTokens.setUndeletable(true);
    capsule_shareDenyTokens.setMultiLingual(false);
    capsule_shareDenyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder capsule_shareTokens = capsuleSchema.create("shareTokens").setType(MetadataValueType.STRING);
    capsule_shareTokens.setMultivalue(true);
    capsule_shareTokens.setSystemReserved(true);
    capsule_shareTokens.setUndeletable(true);
    capsule_shareTokens.setMultiLingual(false);
    capsule_shareTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder capsule_title = capsuleSchema.create("title").setType(MetadataValueType.STRING);
    capsule_title.setUndeletable(true);
    capsule_title.setMultiLingual(false);
    capsule_title.setSchemaAutocomplete(true);
    capsule_title.setSearchable(true);
    MetadataBuilder capsule_tokens = capsuleSchema.create("tokens").setType(MetadataValueType.STRING);
    capsule_tokens.setMultivalue(true);
    capsule_tokens.setSystemReserved(true);
    capsule_tokens.setUndeletable(true);
    capsule_tokens.setMultiLingual(false);
    MetadataBuilder capsule_tokensHierarchy = capsuleSchema.create("tokensHierarchy").setType(MetadataValueType.STRING);
    capsule_tokensHierarchy.setMultivalue(true);
    capsule_tokensHierarchy.setSystemReserved(true);
    capsule_tokensHierarchy.setUndeletable(true);
    capsule_tokensHierarchy.setMultiLingual(false);
    MetadataBuilder capsule_visibleInTrees = capsuleSchema.create("visibleInTrees").setType(MetadataValueType.BOOLEAN);
    capsule_visibleInTrees.setSystemReserved(true);
    capsule_visibleInTrees.setUndeletable(true);
    capsule_visibleInTrees.setMultiLingual(false);
  }

  private void createCollectionSchemaTypeMetadatas(MetadataSchemaTypesBuilder types, MetadataSchemaTypeBuilder collectionSchemaType, MetadataSchemaBuilder collectionSchema) {
    MetadataBuilder collection_allReferences = collectionSchema.create("allReferences").setType(MetadataValueType.STRING);
    collection_allReferences.setMultivalue(true);
    collection_allReferences.setSystemReserved(true);
    collection_allReferences.setUndeletable(true);
    collection_allReferences.setMultiLingual(false);
    MetadataBuilder collection_allRemovedAuths = collectionSchema.create("allRemovedAuths").setType(MetadataValueType.STRING);
    collection_allRemovedAuths.setMultivalue(true);
    collection_allRemovedAuths.setSystemReserved(true);
    collection_allRemovedAuths.setUndeletable(true);
    collection_allRemovedAuths.setEssential(true);
    collection_allRemovedAuths.setMultiLingual(false);
    MetadataBuilder collection_attachedAncestors = collectionSchema.create("attachedAncestors").setType(MetadataValueType.STRING);
    collection_attachedAncestors.setMultivalue(true);
    collection_attachedAncestors.setSystemReserved(true);
    collection_attachedAncestors.setUndeletable(true);
    collection_attachedAncestors.setEssential(true);
    collection_attachedAncestors.setMultiLingual(false);
    MetadataBuilder collection_autocomplete = collectionSchema.create("autocomplete").setType(MetadataValueType.STRING);
    collection_autocomplete.setMultivalue(true);
    collection_autocomplete.setSystemReserved(true);
    collection_autocomplete.setUndeletable(true);
    collection_autocomplete.setEssential(true);
    collection_autocomplete.setMultiLingual(true);
    MetadataBuilder collection_caption = collectionSchema.create("caption").setType(MetadataValueType.STRING);
    collection_caption.setSystemReserved(true);
    collection_caption.setUndeletable(true);
    collection_caption.setMultiLingual(false);
    collection_caption.setSortable(true);
    MetadataBuilder collection_code = collectionSchema.create("code").setType(MetadataValueType.STRING);
    collection_code.setUndeletable(true);
    collection_code.setUniqueValue(true);
    collection_code.setUnmodifiable(true);
    MetadataBuilder collection_conservationCalendarNumber = collectionSchema.create("conservationCalendarNumber").setType(MetadataValueType.STRING);
    collection_conservationCalendarNumber.setSystemReserved(true);
    collection_conservationCalendarNumber.setUndeletable(true);
    MetadataBuilder collection_createdOn = collectionSchema.create("createdOn").setType(MetadataValueType.DATE_TIME);
    collection_createdOn.setSystemReserved(true);
    collection_createdOn.setUndeletable(true);
    collection_createdOn.setMultiLingual(false);
    collection_createdOn.setSortable(true);
    MetadataBuilder collection_deleted = collectionSchema.create("deleted").setType(MetadataValueType.BOOLEAN);
    collection_deleted.setSystemReserved(true);
    collection_deleted.setUndeletable(true);
    collection_deleted.setMultiLingual(false);
    MetadataBuilder collection_denyTokens = collectionSchema.create("denyTokens").setType(MetadataValueType.STRING);
    collection_denyTokens.setMultivalue(true);
    collection_denyTokens.setSystemReserved(true);
    collection_denyTokens.setUndeletable(true);
    collection_denyTokens.setMultiLingual(false);
    collection_denyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder collection_detachedauthorizations = collectionSchema.create("detachedauthorizations").setType(MetadataValueType.BOOLEAN);
    collection_detachedauthorizations.setSystemReserved(true);
    collection_detachedauthorizations.setUndeletable(true);
    collection_detachedauthorizations.setMultiLingual(false);
    MetadataBuilder collection_errorOnPhysicalDeletion = collectionSchema.create("errorOnPhysicalDeletion").setType(MetadataValueType.BOOLEAN);
    collection_errorOnPhysicalDeletion.setSystemReserved(true);
    collection_errorOnPhysicalDeletion.setUndeletable(true);
    collection_errorOnPhysicalDeletion.setMultiLingual(false);
    MetadataBuilder collection_estimatedSize = collectionSchema.create("estimatedSize").setType(MetadataValueType.INTEGER);
    collection_estimatedSize.setSystemReserved(true);
    collection_estimatedSize.setUndeletable(true);
    collection_estimatedSize.setMultiLingual(false);
    MetadataBuilder collection_hidden = collectionSchema.create("hidden").setType(MetadataValueType.BOOLEAN);
    collection_hidden.setSystemReserved(true);
    collection_hidden.setUndeletable(true);
    collection_hidden.setMultiLingual(false);
    MetadataBuilder collection_id = collectionSchema.create("id").setType(MetadataValueType.STRING);
    collection_id.setDefaultRequirement(true);
    collection_id.setSystemReserved(true);
    collection_id.setUndeletable(true);
    collection_id.setMultiLingual(false);
    collection_id.setSearchable(true);
    collection_id.setSortable(true);
    collection_id.setUniqueValue(true);
    collection_id.setUnmodifiable(true);
    MetadataBuilder collection_languages = collectionSchema.create("languages").setType(MetadataValueType.STRING);
    collection_languages.setMultivalue(true);
    collection_languages.setUndeletable(true);
    collection_languages.setUnmodifiable(true);
    MetadataBuilder collection_legacyIdentifier = collectionSchema.create("legacyIdentifier").setType(MetadataValueType.STRING);
    collection_legacyIdentifier.setDefaultRequirement(true);
    collection_legacyIdentifier.setSystemReserved(true);
    collection_legacyIdentifier.setUndeletable(true);
    collection_legacyIdentifier.setMultiLingual(false);
    collection_legacyIdentifier.setSearchable(true);
    collection_legacyIdentifier.setUniqueValue(true);
    collection_legacyIdentifier.setUnmodifiable(true);
    MetadataBuilder collection_logicallyDeletedOn = collectionSchema.create("logicallyDeletedOn").setType(MetadataValueType.DATE_TIME);
    collection_logicallyDeletedOn.setSystemReserved(true);
    collection_logicallyDeletedOn.setUndeletable(true);
    collection_logicallyDeletedOn.setMultiLingual(false);
    MetadataBuilder collection_manualTokens = collectionSchema.create("manualTokens").setType(MetadataValueType.STRING);
    collection_manualTokens.setMultivalue(true);
    collection_manualTokens.setSystemReserved(true);
    collection_manualTokens.setUndeletable(true);
    collection_manualTokens.setMultiLingual(false);
    collection_manualTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder collection_markedForParsing = collectionSchema.create("markedForParsing").setType(MetadataValueType.BOOLEAN);
    collection_markedForParsing.setSystemReserved(true);
    collection_markedForParsing.setUndeletable(true);
    collection_markedForParsing.setMultiLingual(false);
    MetadataBuilder collection_markedForPreviewConversion = collectionSchema.create("markedForPreviewConversion").setType(MetadataValueType.BOOLEAN);
    collection_markedForPreviewConversion.setSystemReserved(true);
    collection_markedForPreviewConversion.setUndeletable(true);
    collection_markedForPreviewConversion.setMultiLingual(false);
    MetadataBuilder collection_markedForReindexing = collectionSchema.create("markedForReindexing").setType(MetadataValueType.BOOLEAN);
    collection_markedForReindexing.setSystemReserved(true);
    collection_markedForReindexing.setUndeletable(true);
    collection_markedForReindexing.setMultiLingual(false);
    MetadataBuilder collection_migrationDataVersion = collectionSchema.create("migrationDataVersion").setType(MetadataValueType.NUMBER);
    collection_migrationDataVersion.setSystemReserved(true);
    collection_migrationDataVersion.setUndeletable(true);
    collection_migrationDataVersion.setMultiLingual(false);
    collection_migrationDataVersion.setEssentialInSummary(true);
    MetadataBuilder collection_modifiedOn = collectionSchema.create("modifiedOn").setType(MetadataValueType.DATE_TIME);
    collection_modifiedOn.setSystemReserved(true);
    collection_modifiedOn.setUndeletable(true);
    collection_modifiedOn.setMultiLingual(false);
    collection_modifiedOn.setSortable(true);
    MetadataBuilder collection_name = collectionSchema.create("name").setType(MetadataValueType.STRING);
    collection_name.setUndeletable(true);
    MetadataBuilder collection_organizationNumber = collectionSchema.create("organizationNumber").setType(MetadataValueType.STRING);
    collection_organizationNumber.setSystemReserved(true);
    collection_organizationNumber.setUndeletable(true);
    MetadataBuilder collection_path = collectionSchema.create("path").setType(MetadataValueType.STRING);
    collection_path.setMultivalue(true);
    collection_path.setSystemReserved(true);
    collection_path.setUndeletable(true);
    collection_path.setMultiLingual(false);
    MetadataBuilder collection_pathParts = collectionSchema.create("pathParts").setType(MetadataValueType.STRING);
    collection_pathParts.setMultivalue(true);
    collection_pathParts.setSystemReserved(true);
    collection_pathParts.setUndeletable(true);
    collection_pathParts.setMultiLingual(false);
    MetadataBuilder collection_principalpath = collectionSchema.create("principalpath").setType(MetadataValueType.STRING);
    collection_principalpath.setSystemReserved(true);
    collection_principalpath.setUndeletable(true);
    collection_principalpath.setMultiLingual(false);
    MetadataBuilder collection_removedauthorizations = collectionSchema.create("removedauthorizations").setType(MetadataValueType.STRING);
    collection_removedauthorizations.setMultivalue(true);
    collection_removedauthorizations.setSystemReserved(true);
    collection_removedauthorizations.setUndeletable(true);
    collection_removedauthorizations.setMultiLingual(false);
    MetadataBuilder collection_schema = collectionSchema.create("schema").setType(MetadataValueType.STRING);
    collection_schema.setDefaultRequirement(true);
    collection_schema.setSystemReserved(true);
    collection_schema.setUndeletable(true);
    collection_schema.setMultiLingual(false);
    MetadataBuilder collection_shareDenyTokens = collectionSchema.create("shareDenyTokens").setType(MetadataValueType.STRING);
    collection_shareDenyTokens.setMultivalue(true);
    collection_shareDenyTokens.setSystemReserved(true);
    collection_shareDenyTokens.setUndeletable(true);
    collection_shareDenyTokens.setMultiLingual(false);
    collection_shareDenyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder collection_shareTokens = collectionSchema.create("shareTokens").setType(MetadataValueType.STRING);
    collection_shareTokens.setMultivalue(true);
    collection_shareTokens.setSystemReserved(true);
    collection_shareTokens.setUndeletable(true);
    collection_shareTokens.setMultiLingual(false);
    collection_shareTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder collection_title = collectionSchema.create("title").setType(MetadataValueType.STRING);
    collection_title.setUndeletable(true);
    collection_title.setMultiLingual(false);
    collection_title.setSchemaAutocomplete(true);
    collection_title.setSearchable(true);
    MetadataBuilder collection_tokens = collectionSchema.create("tokens").setType(MetadataValueType.STRING);
    collection_tokens.setMultivalue(true);
    collection_tokens.setSystemReserved(true);
    collection_tokens.setUndeletable(true);
    collection_tokens.setMultiLingual(false);
    MetadataBuilder collection_tokensHierarchy = collectionSchema.create("tokensHierarchy").setType(MetadataValueType.STRING);
    collection_tokensHierarchy.setMultivalue(true);
    collection_tokensHierarchy.setSystemReserved(true);
    collection_tokensHierarchy.setUndeletable(true);
    collection_tokensHierarchy.setMultiLingual(false);
    MetadataBuilder collection_visibleInTrees = collectionSchema.create("visibleInTrees").setType(MetadataValueType.BOOLEAN);
    collection_visibleInTrees.setSystemReserved(true);
    collection_visibleInTrees.setUndeletable(true);
    collection_visibleInTrees.setMultiLingual(false);
  }

  private void createPrintableSchemaTypeMetadatas(MetadataSchemaTypesBuilder types, MetadataSchemaTypeBuilder printableSchemaType, MetadataSchemaBuilder printableSchema) {
    MetadataBuilder printable_allReferences = printableSchema.create("allReferences").setType(MetadataValueType.STRING);
    printable_allReferences.setMultivalue(true);
    printable_allReferences.setSystemReserved(true);
    printable_allReferences.setUndeletable(true);
    printable_allReferences.setMultiLingual(false);
    MetadataBuilder printable_allRemovedAuths = printableSchema.create("allRemovedAuths").setType(MetadataValueType.STRING);
    printable_allRemovedAuths.setMultivalue(true);
    printable_allRemovedAuths.setSystemReserved(true);
    printable_allRemovedAuths.setUndeletable(true);
    printable_allRemovedAuths.setEssential(true);
    printable_allRemovedAuths.setMultiLingual(false);
    MetadataBuilder printable_attachedAncestors = printableSchema.create("attachedAncestors").setType(MetadataValueType.STRING);
    printable_attachedAncestors.setMultivalue(true);
    printable_attachedAncestors.setSystemReserved(true);
    printable_attachedAncestors.setUndeletable(true);
    printable_attachedAncestors.setEssential(true);
    printable_attachedAncestors.setMultiLingual(false);
    MetadataBuilder printable_autocomplete = printableSchema.create("autocomplete").setType(MetadataValueType.STRING);
    printable_autocomplete.setMultivalue(true);
    printable_autocomplete.setSystemReserved(true);
    printable_autocomplete.setUndeletable(true);
    printable_autocomplete.setEssential(true);
    printable_autocomplete.setMultiLingual(true);
    MetadataBuilder printable_caption = printableSchema.create("caption").setType(MetadataValueType.STRING);
    printable_caption.setSystemReserved(true);
    printable_caption.setUndeletable(true);
    printable_caption.setMultiLingual(false);
    printable_caption.setSortable(true);
    MetadataBuilder printable_createdBy = printableSchema.create("createdBy").setType(MetadataValueType.REFERENCE);
    printable_createdBy.setSystemReserved(true);
    printable_createdBy.setUndeletable(true);
    printable_createdBy.setMultiLingual(false);
    printable_createdBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder printable_createdOn = printableSchema.create("createdOn").setType(MetadataValueType.DATE_TIME);
    printable_createdOn.setSystemReserved(true);
    printable_createdOn.setUndeletable(true);
    printable_createdOn.setMultiLingual(false);
    printable_createdOn.setSortable(true);
    MetadataBuilder printable_deleted = printableSchema.create("deleted").setType(MetadataValueType.BOOLEAN);
    printable_deleted.setSystemReserved(true);
    printable_deleted.setUndeletable(true);
    printable_deleted.setMultiLingual(false);
    MetadataBuilder printable_denyTokens = printableSchema.create("denyTokens").setType(MetadataValueType.STRING);
    printable_denyTokens.setMultivalue(true);
    printable_denyTokens.setSystemReserved(true);
    printable_denyTokens.setUndeletable(true);
    printable_denyTokens.setMultiLingual(false);
    printable_denyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder printable_detachedauthorizations = printableSchema.create("detachedauthorizations").setType(MetadataValueType.BOOLEAN);
    printable_detachedauthorizations.setSystemReserved(true);
    printable_detachedauthorizations.setUndeletable(true);
    printable_detachedauthorizations.setMultiLingual(false);
    MetadataBuilder printable_errorOnPhysicalDeletion = printableSchema.create("errorOnPhysicalDeletion").setType(MetadataValueType.BOOLEAN);
    printable_errorOnPhysicalDeletion.setSystemReserved(true);
    printable_errorOnPhysicalDeletion.setUndeletable(true);
    printable_errorOnPhysicalDeletion.setMultiLingual(false);
    MetadataBuilder printable_estimatedSize = printableSchema.create("estimatedSize").setType(MetadataValueType.INTEGER);
    printable_estimatedSize.setSystemReserved(true);
    printable_estimatedSize.setUndeletable(true);
    printable_estimatedSize.setMultiLingual(false);
    MetadataBuilder printable_hidden = printableSchema.create("hidden").setType(MetadataValueType.BOOLEAN);
    printable_hidden.setSystemReserved(true);
    printable_hidden.setUndeletable(true);
    printable_hidden.setMultiLingual(false);
    MetadataBuilder printable_id = printableSchema.create("id").setType(MetadataValueType.STRING);
    printable_id.setDefaultRequirement(true);
    printable_id.setSystemReserved(true);
    printable_id.setUndeletable(true);
    printable_id.setMultiLingual(false);
    printable_id.setSearchable(true);
    printable_id.setSortable(true);
    printable_id.setUniqueValue(true);
    printable_id.setUnmodifiable(true);
    MetadataBuilder printable_isdeletable = printableSchema.create("isdeletable").setType(MetadataValueType.BOOLEAN);
    printable_isdeletable.setUndeletable(true);
    printable_isdeletable.setDefaultValue(true);
    MetadataBuilder printable_jasperfile = printableSchema.create("jasperfile").setType(MetadataValueType.CONTENT);
    printable_jasperfile.setDefaultRequirement(true);
    printable_jasperfile.setUndeletable(true);
    printable_jasperfile.setEssential(true);
    printable_jasperfile.defineStructureFactory(ContentFactory.class);
    printable_jasperfile.defineValidators().add(JasperFilePrintableValidator.class);
    MetadataBuilder printable_legacyIdentifier = printableSchema.create("legacyIdentifier").setType(MetadataValueType.STRING);
    printable_legacyIdentifier.setDefaultRequirement(true);
    printable_legacyIdentifier.setSystemReserved(true);
    printable_legacyIdentifier.setUndeletable(true);
    printable_legacyIdentifier.setMultiLingual(false);
    printable_legacyIdentifier.setSearchable(true);
    printable_legacyIdentifier.setUniqueValue(true);
    printable_legacyIdentifier.setUnmodifiable(true);
    MetadataBuilder printable_logicallyDeletedOn = printableSchema.create("logicallyDeletedOn").setType(MetadataValueType.DATE_TIME);
    printable_logicallyDeletedOn.setSystemReserved(true);
    printable_logicallyDeletedOn.setUndeletable(true);
    printable_logicallyDeletedOn.setMultiLingual(false);
    MetadataBuilder printable_manualTokens = printableSchema.create("manualTokens").setType(MetadataValueType.STRING);
    printable_manualTokens.setMultivalue(true);
    printable_manualTokens.setSystemReserved(true);
    printable_manualTokens.setUndeletable(true);
    printable_manualTokens.setMultiLingual(false);
    printable_manualTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder printable_markedForParsing = printableSchema.create("markedForParsing").setType(MetadataValueType.BOOLEAN);
    printable_markedForParsing.setSystemReserved(true);
    printable_markedForParsing.setUndeletable(true);
    printable_markedForParsing.setMultiLingual(false);
    MetadataBuilder printable_markedForPreviewConversion = printableSchema.create("markedForPreviewConversion").setType(MetadataValueType.BOOLEAN);
    printable_markedForPreviewConversion.setSystemReserved(true);
    printable_markedForPreviewConversion.setUndeletable(true);
    printable_markedForPreviewConversion.setMultiLingual(false);
    MetadataBuilder printable_markedForReindexing = printableSchema.create("markedForReindexing").setType(MetadataValueType.BOOLEAN);
    printable_markedForReindexing.setSystemReserved(true);
    printable_markedForReindexing.setUndeletable(true);
    printable_markedForReindexing.setMultiLingual(false);
    MetadataBuilder printable_migrationDataVersion = printableSchema.create("migrationDataVersion").setType(MetadataValueType.NUMBER);
    printable_migrationDataVersion.setSystemReserved(true);
    printable_migrationDataVersion.setUndeletable(true);
    printable_migrationDataVersion.setMultiLingual(false);
    printable_migrationDataVersion.setEssentialInSummary(true);
    MetadataBuilder printable_modifiedBy = printableSchema.create("modifiedBy").setType(MetadataValueType.REFERENCE);
    printable_modifiedBy.setSystemReserved(true);
    printable_modifiedBy.setUndeletable(true);
    printable_modifiedBy.setMultiLingual(false);
    printable_modifiedBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder printable_modifiedOn = printableSchema.create("modifiedOn").setType(MetadataValueType.DATE_TIME);
    printable_modifiedOn.setSystemReserved(true);
    printable_modifiedOn.setUndeletable(true);
    printable_modifiedOn.setMultiLingual(false);
    printable_modifiedOn.setSortable(true);
    MetadataBuilder printable_path = printableSchema.create("path").setType(MetadataValueType.STRING);
    printable_path.setMultivalue(true);
    printable_path.setSystemReserved(true);
    printable_path.setUndeletable(true);
    printable_path.setMultiLingual(false);
    MetadataBuilder printable_pathParts = printableSchema.create("pathParts").setType(MetadataValueType.STRING);
    printable_pathParts.setMultivalue(true);
    printable_pathParts.setSystemReserved(true);
    printable_pathParts.setUndeletable(true);
    printable_pathParts.setMultiLingual(false);
    MetadataBuilder printable_principalpath = printableSchema.create("principalpath").setType(MetadataValueType.STRING);
    printable_principalpath.setSystemReserved(true);
    printable_principalpath.setUndeletable(true);
    printable_principalpath.setMultiLingual(false);
    MetadataBuilder printable_removedauthorizations = printableSchema.create("removedauthorizations").setType(MetadataValueType.STRING);
    printable_removedauthorizations.setMultivalue(true);
    printable_removedauthorizations.setSystemReserved(true);
    printable_removedauthorizations.setUndeletable(true);
    printable_removedauthorizations.setMultiLingual(false);
    MetadataBuilder printable_schema = printableSchema.create("schema").setType(MetadataValueType.STRING);
    printable_schema.setDefaultRequirement(true);
    printable_schema.setSystemReserved(true);
    printable_schema.setUndeletable(true);
    printable_schema.setMultiLingual(false);
    MetadataBuilder printable_shareDenyTokens = printableSchema.create("shareDenyTokens").setType(MetadataValueType.STRING);
    printable_shareDenyTokens.setMultivalue(true);
    printable_shareDenyTokens.setSystemReserved(true);
    printable_shareDenyTokens.setUndeletable(true);
    printable_shareDenyTokens.setMultiLingual(false);
    printable_shareDenyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder printable_shareTokens = printableSchema.create("shareTokens").setType(MetadataValueType.STRING);
    printable_shareTokens.setMultivalue(true);
    printable_shareTokens.setSystemReserved(true);
    printable_shareTokens.setUndeletable(true);
    printable_shareTokens.setMultiLingual(false);
    printable_shareTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder printable_title = printableSchema.create("title").setType(MetadataValueType.STRING);
    printable_title.setDefaultRequirement(true);
    printable_title.setUndeletable(true);
    printable_title.setMultiLingual(true);
    printable_title.setSchemaAutocomplete(true);
    printable_title.setSearchable(true);
    MetadataBuilder printable_tokens = printableSchema.create("tokens").setType(MetadataValueType.STRING);
    printable_tokens.setMultivalue(true);
    printable_tokens.setSystemReserved(true);
    printable_tokens.setUndeletable(true);
    printable_tokens.setMultiLingual(false);
    MetadataBuilder printable_tokensHierarchy = printableSchema.create("tokensHierarchy").setType(MetadataValueType.STRING);
    printable_tokensHierarchy.setMultivalue(true);
    printable_tokensHierarchy.setSystemReserved(true);
    printable_tokensHierarchy.setUndeletable(true);
    printable_tokensHierarchy.setMultiLingual(false);
    MetadataBuilder printable_visibleInTrees = printableSchema.create("visibleInTrees").setType(MetadataValueType.BOOLEAN);
    printable_visibleInTrees.setSystemReserved(true);
    printable_visibleInTrees.setUndeletable(true);
    printable_visibleInTrees.setMultiLingual(false);
  }

  private void createThesaurusConfigSchemaTypeMetadatas(MetadataSchemaTypesBuilder types, MetadataSchemaTypeBuilder thesaurusConfigSchemaType, MetadataSchemaBuilder thesaurusConfigSchema) {
    MetadataBuilder thesaurusConfig_allReferences = thesaurusConfigSchema.create("allReferences").setType(MetadataValueType.STRING);
    thesaurusConfig_allReferences.setMultivalue(true);
    thesaurusConfig_allReferences.setSystemReserved(true);
    thesaurusConfig_allReferences.setUndeletable(true);
    thesaurusConfig_allReferences.setMultiLingual(false);
    MetadataBuilder thesaurusConfig_allRemovedAuths = thesaurusConfigSchema.create("allRemovedAuths").setType(MetadataValueType.STRING);
    thesaurusConfig_allRemovedAuths.setMultivalue(true);
    thesaurusConfig_allRemovedAuths.setSystemReserved(true);
    thesaurusConfig_allRemovedAuths.setUndeletable(true);
    thesaurusConfig_allRemovedAuths.setEssential(true);
    thesaurusConfig_allRemovedAuths.setMultiLingual(false);
    MetadataBuilder thesaurusConfig_attachedAncestors = thesaurusConfigSchema.create("attachedAncestors").setType(MetadataValueType.STRING);
    thesaurusConfig_attachedAncestors.setMultivalue(true);
    thesaurusConfig_attachedAncestors.setSystemReserved(true);
    thesaurusConfig_attachedAncestors.setUndeletable(true);
    thesaurusConfig_attachedAncestors.setEssential(true);
    thesaurusConfig_attachedAncestors.setMultiLingual(false);
    MetadataBuilder thesaurusConfig_autocomplete = thesaurusConfigSchema.create("autocomplete").setType(MetadataValueType.STRING);
    thesaurusConfig_autocomplete.setMultivalue(true);
    thesaurusConfig_autocomplete.setSystemReserved(true);
    thesaurusConfig_autocomplete.setUndeletable(true);
    thesaurusConfig_autocomplete.setEssential(true);
    thesaurusConfig_autocomplete.setMultiLingual(true);
    MetadataBuilder thesaurusConfig_caption = thesaurusConfigSchema.create("caption").setType(MetadataValueType.STRING);
    thesaurusConfig_caption.setSystemReserved(true);
    thesaurusConfig_caption.setUndeletable(true);
    thesaurusConfig_caption.setMultiLingual(false);
    thesaurusConfig_caption.setSortable(true);
    MetadataBuilder thesaurusConfig_content = thesaurusConfigSchema.create("content").setType(MetadataValueType.CONTENT);
    thesaurusConfig_content.setSystemReserved(true);
    thesaurusConfig_content.setUndeletable(true);
    thesaurusConfig_content.defineStructureFactory(ContentFactory.class);
    MetadataBuilder thesaurusConfig_createdBy = thesaurusConfigSchema.create("createdBy").setType(MetadataValueType.REFERENCE);
    thesaurusConfig_createdBy.setSystemReserved(true);
    thesaurusConfig_createdBy.setUndeletable(true);
    thesaurusConfig_createdBy.setMultiLingual(false);
    thesaurusConfig_createdBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder thesaurusConfig_createdOn = thesaurusConfigSchema.create("createdOn").setType(MetadataValueType.DATE_TIME);
    thesaurusConfig_createdOn.setSystemReserved(true);
    thesaurusConfig_createdOn.setUndeletable(true);
    thesaurusConfig_createdOn.setMultiLingual(false);
    thesaurusConfig_createdOn.setSortable(true);
    MetadataBuilder thesaurusConfig_deleted = thesaurusConfigSchema.create("deleted").setType(MetadataValueType.BOOLEAN);
    thesaurusConfig_deleted.setSystemReserved(true);
    thesaurusConfig_deleted.setUndeletable(true);
    thesaurusConfig_deleted.setMultiLingual(false);
    MetadataBuilder thesaurusConfig_deniedWord = thesaurusConfigSchema.create("deniedWord").setType(MetadataValueType.STRING);
    thesaurusConfig_deniedWord.setMultivalue(true);
    thesaurusConfig_deniedWord.setSystemReserved(true);
    thesaurusConfig_deniedWord.setUndeletable(true);
    MetadataBuilder thesaurusConfig_denyTokens = thesaurusConfigSchema.create("denyTokens").setType(MetadataValueType.STRING);
    thesaurusConfig_denyTokens.setMultivalue(true);
    thesaurusConfig_denyTokens.setSystemReserved(true);
    thesaurusConfig_denyTokens.setUndeletable(true);
    thesaurusConfig_denyTokens.setMultiLingual(false);
    thesaurusConfig_denyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder thesaurusConfig_detachedauthorizations = thesaurusConfigSchema.create("detachedauthorizations").setType(MetadataValueType.BOOLEAN);
    thesaurusConfig_detachedauthorizations.setSystemReserved(true);
    thesaurusConfig_detachedauthorizations.setUndeletable(true);
    thesaurusConfig_detachedauthorizations.setMultiLingual(false);
    MetadataBuilder thesaurusConfig_errorOnPhysicalDeletion = thesaurusConfigSchema.create("errorOnPhysicalDeletion").setType(MetadataValueType.BOOLEAN);
    thesaurusConfig_errorOnPhysicalDeletion.setSystemReserved(true);
    thesaurusConfig_errorOnPhysicalDeletion.setUndeletable(true);
    thesaurusConfig_errorOnPhysicalDeletion.setMultiLingual(false);
    MetadataBuilder thesaurusConfig_estimatedSize = thesaurusConfigSchema.create("estimatedSize").setType(MetadataValueType.INTEGER);
    thesaurusConfig_estimatedSize.setSystemReserved(true);
    thesaurusConfig_estimatedSize.setUndeletable(true);
    thesaurusConfig_estimatedSize.setMultiLingual(false);
    MetadataBuilder thesaurusConfig_hidden = thesaurusConfigSchema.create("hidden").setType(MetadataValueType.BOOLEAN);
    thesaurusConfig_hidden.setSystemReserved(true);
    thesaurusConfig_hidden.setUndeletable(true);
    thesaurusConfig_hidden.setMultiLingual(false);
    MetadataBuilder thesaurusConfig_id = thesaurusConfigSchema.create("id").setType(MetadataValueType.STRING);
    thesaurusConfig_id.setDefaultRequirement(true);
    thesaurusConfig_id.setSystemReserved(true);
    thesaurusConfig_id.setUndeletable(true);
    thesaurusConfig_id.setMultiLingual(false);
    thesaurusConfig_id.setSearchable(true);
    thesaurusConfig_id.setSortable(true);
    thesaurusConfig_id.setUniqueValue(true);
    thesaurusConfig_id.setUnmodifiable(true);
    MetadataBuilder thesaurusConfig_legacyIdentifier = thesaurusConfigSchema.create("legacyIdentifier").setType(MetadataValueType.STRING);
    thesaurusConfig_legacyIdentifier.setDefaultRequirement(true);
    thesaurusConfig_legacyIdentifier.setSystemReserved(true);
    thesaurusConfig_legacyIdentifier.setUndeletable(true);
    thesaurusConfig_legacyIdentifier.setMultiLingual(false);
    thesaurusConfig_legacyIdentifier.setSearchable(true);
    thesaurusConfig_legacyIdentifier.setUniqueValue(true);
    thesaurusConfig_legacyIdentifier.setUnmodifiable(true);
    MetadataBuilder thesaurusConfig_logicallyDeletedOn = thesaurusConfigSchema.create("logicallyDeletedOn").setType(MetadataValueType.DATE_TIME);
    thesaurusConfig_logicallyDeletedOn.setSystemReserved(true);
    thesaurusConfig_logicallyDeletedOn.setUndeletable(true);
    thesaurusConfig_logicallyDeletedOn.setMultiLingual(false);
    MetadataBuilder thesaurusConfig_manualTokens = thesaurusConfigSchema.create("manualTokens").setType(MetadataValueType.STRING);
    thesaurusConfig_manualTokens.setMultivalue(true);
    thesaurusConfig_manualTokens.setSystemReserved(true);
    thesaurusConfig_manualTokens.setUndeletable(true);
    thesaurusConfig_manualTokens.setMultiLingual(false);
    thesaurusConfig_manualTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder thesaurusConfig_markedForParsing = thesaurusConfigSchema.create("markedForParsing").setType(MetadataValueType.BOOLEAN);
    thesaurusConfig_markedForParsing.setSystemReserved(true);
    thesaurusConfig_markedForParsing.setUndeletable(true);
    thesaurusConfig_markedForParsing.setMultiLingual(false);
    MetadataBuilder thesaurusConfig_markedForPreviewConversion = thesaurusConfigSchema.create("markedForPreviewConversion").setType(MetadataValueType.BOOLEAN);
    thesaurusConfig_markedForPreviewConversion.setSystemReserved(true);
    thesaurusConfig_markedForPreviewConversion.setUndeletable(true);
    thesaurusConfig_markedForPreviewConversion.setMultiLingual(false);
    MetadataBuilder thesaurusConfig_markedForReindexing = thesaurusConfigSchema.create("markedForReindexing").setType(MetadataValueType.BOOLEAN);
    thesaurusConfig_markedForReindexing.setSystemReserved(true);
    thesaurusConfig_markedForReindexing.setUndeletable(true);
    thesaurusConfig_markedForReindexing.setMultiLingual(false);
    MetadataBuilder thesaurusConfig_migrationDataVersion = thesaurusConfigSchema.create("migrationDataVersion").setType(MetadataValueType.NUMBER);
    thesaurusConfig_migrationDataVersion.setSystemReserved(true);
    thesaurusConfig_migrationDataVersion.setUndeletable(true);
    thesaurusConfig_migrationDataVersion.setMultiLingual(false);
    thesaurusConfig_migrationDataVersion.setEssentialInSummary(true);
    MetadataBuilder thesaurusConfig_modifiedBy = thesaurusConfigSchema.create("modifiedBy").setType(MetadataValueType.REFERENCE);
    thesaurusConfig_modifiedBy.setSystemReserved(true);
    thesaurusConfig_modifiedBy.setUndeletable(true);
    thesaurusConfig_modifiedBy.setMultiLingual(false);
    thesaurusConfig_modifiedBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder thesaurusConfig_modifiedOn = thesaurusConfigSchema.create("modifiedOn").setType(MetadataValueType.DATE_TIME);
    thesaurusConfig_modifiedOn.setSystemReserved(true);
    thesaurusConfig_modifiedOn.setUndeletable(true);
    thesaurusConfig_modifiedOn.setMultiLingual(false);
    thesaurusConfig_modifiedOn.setSortable(true);
    MetadataBuilder thesaurusConfig_path = thesaurusConfigSchema.create("path").setType(MetadataValueType.STRING);
    thesaurusConfig_path.setMultivalue(true);
    thesaurusConfig_path.setSystemReserved(true);
    thesaurusConfig_path.setUndeletable(true);
    thesaurusConfig_path.setMultiLingual(false);
    MetadataBuilder thesaurusConfig_pathParts = thesaurusConfigSchema.create("pathParts").setType(MetadataValueType.STRING);
    thesaurusConfig_pathParts.setMultivalue(true);
    thesaurusConfig_pathParts.setSystemReserved(true);
    thesaurusConfig_pathParts.setUndeletable(true);
    thesaurusConfig_pathParts.setMultiLingual(false);
    MetadataBuilder thesaurusConfig_principalpath = thesaurusConfigSchema.create("principalpath").setType(MetadataValueType.STRING);
    thesaurusConfig_principalpath.setSystemReserved(true);
    thesaurusConfig_principalpath.setUndeletable(true);
    thesaurusConfig_principalpath.setMultiLingual(false);
    MetadataBuilder thesaurusConfig_removedauthorizations = thesaurusConfigSchema.create("removedauthorizations").setType(MetadataValueType.STRING);
    thesaurusConfig_removedauthorizations.setMultivalue(true);
    thesaurusConfig_removedauthorizations.setSystemReserved(true);
    thesaurusConfig_removedauthorizations.setUndeletable(true);
    thesaurusConfig_removedauthorizations.setMultiLingual(false);
    MetadataBuilder thesaurusConfig_schema = thesaurusConfigSchema.create("schema").setType(MetadataValueType.STRING);
    thesaurusConfig_schema.setDefaultRequirement(true);
    thesaurusConfig_schema.setSystemReserved(true);
    thesaurusConfig_schema.setUndeletable(true);
    thesaurusConfig_schema.setMultiLingual(false);
    MetadataBuilder thesaurusConfig_shareDenyTokens = thesaurusConfigSchema.create("shareDenyTokens").setType(MetadataValueType.STRING);
    thesaurusConfig_shareDenyTokens.setMultivalue(true);
    thesaurusConfig_shareDenyTokens.setSystemReserved(true);
    thesaurusConfig_shareDenyTokens.setUndeletable(true);
    thesaurusConfig_shareDenyTokens.setMultiLingual(false);
    thesaurusConfig_shareDenyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder thesaurusConfig_shareTokens = thesaurusConfigSchema.create("shareTokens").setType(MetadataValueType.STRING);
    thesaurusConfig_shareTokens.setMultivalue(true);
    thesaurusConfig_shareTokens.setSystemReserved(true);
    thesaurusConfig_shareTokens.setUndeletable(true);
    thesaurusConfig_shareTokens.setMultiLingual(false);
    thesaurusConfig_shareTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder thesaurusConfig_title = thesaurusConfigSchema.create("title").setType(MetadataValueType.STRING);
    thesaurusConfig_title.setUndeletable(true);
    thesaurusConfig_title.setMultiLingual(false);
    thesaurusConfig_title.setSchemaAutocomplete(true);
    thesaurusConfig_title.setSearchable(true);
    MetadataBuilder thesaurusConfig_tokens = thesaurusConfigSchema.create("tokens").setType(MetadataValueType.STRING);
    thesaurusConfig_tokens.setMultivalue(true);
    thesaurusConfig_tokens.setSystemReserved(true);
    thesaurusConfig_tokens.setUndeletable(true);
    thesaurusConfig_tokens.setMultiLingual(false);
    MetadataBuilder thesaurusConfig_tokensHierarchy = thesaurusConfigSchema.create("tokensHierarchy").setType(MetadataValueType.STRING);
    thesaurusConfig_tokensHierarchy.setMultivalue(true);
    thesaurusConfig_tokensHierarchy.setSystemReserved(true);
    thesaurusConfig_tokensHierarchy.setUndeletable(true);
    thesaurusConfig_tokensHierarchy.setMultiLingual(false);
    MetadataBuilder thesaurusConfig_visibleInTrees = thesaurusConfigSchema.create("visibleInTrees").setType(MetadataValueType.BOOLEAN);
    thesaurusConfig_visibleInTrees.setSystemReserved(true);
    thesaurusConfig_visibleInTrees.setUndeletable(true);
    thesaurusConfig_visibleInTrees.setMultiLingual(false);
  }

  private void createSavedSearchSchemaTypeMetadatas(MetadataSchemaTypesBuilder types, MetadataSchemaTypeBuilder savedSearchSchemaType, MetadataSchemaBuilder savedSearchSchema) {
    MetadataBuilder savedSearch_advancedSearch = savedSearchSchema.create("advancedSearch").setType(MetadataValueType.STRUCTURE);
    savedSearch_advancedSearch.setMultivalue(true);
    savedSearch_advancedSearch.setUndeletable(true);
    savedSearch_advancedSearch.defineStructureFactory(CriterionFactory.class);
    MetadataBuilder savedSearch_allReferences = savedSearchSchema.create("allReferences").setType(MetadataValueType.STRING);
    savedSearch_allReferences.setMultivalue(true);
    savedSearch_allReferences.setSystemReserved(true);
    savedSearch_allReferences.setUndeletable(true);
    savedSearch_allReferences.setMultiLingual(false);
    MetadataBuilder savedSearch_allRemovedAuths = savedSearchSchema.create("allRemovedAuths").setType(MetadataValueType.STRING);
    savedSearch_allRemovedAuths.setMultivalue(true);
    savedSearch_allRemovedAuths.setSystemReserved(true);
    savedSearch_allRemovedAuths.setUndeletable(true);
    savedSearch_allRemovedAuths.setEssential(true);
    savedSearch_allRemovedAuths.setMultiLingual(false);
    MetadataBuilder savedSearch_attachedAncestors = savedSearchSchema.create("attachedAncestors").setType(MetadataValueType.STRING);
    savedSearch_attachedAncestors.setMultivalue(true);
    savedSearch_attachedAncestors.setSystemReserved(true);
    savedSearch_attachedAncestors.setUndeletable(true);
    savedSearch_attachedAncestors.setEssential(true);
    savedSearch_attachedAncestors.setMultiLingual(false);
    MetadataBuilder savedSearch_autocomplete = savedSearchSchema.create("autocomplete").setType(MetadataValueType.STRING);
    savedSearch_autocomplete.setMultivalue(true);
    savedSearch_autocomplete.setSystemReserved(true);
    savedSearch_autocomplete.setUndeletable(true);
    savedSearch_autocomplete.setEssential(true);
    savedSearch_autocomplete.setMultiLingual(true);
    MetadataBuilder savedSearch_caption = savedSearchSchema.create("caption").setType(MetadataValueType.STRING);
    savedSearch_caption.setSystemReserved(true);
    savedSearch_caption.setUndeletable(true);
    savedSearch_caption.setMultiLingual(false);
    savedSearch_caption.setSortable(true);
    MetadataBuilder savedSearch_createdBy = savedSearchSchema.create("createdBy").setType(MetadataValueType.REFERENCE);
    savedSearch_createdBy.setSystemReserved(true);
    savedSearch_createdBy.setUndeletable(true);
    savedSearch_createdBy.setMultiLingual(false);
    savedSearch_createdBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder savedSearch_createdOn = savedSearchSchema.create("createdOn").setType(MetadataValueType.DATE_TIME);
    savedSearch_createdOn.setSystemReserved(true);
    savedSearch_createdOn.setUndeletable(true);
    savedSearch_createdOn.setMultiLingual(false);
    savedSearch_createdOn.setSortable(true);
    MetadataBuilder savedSearch_deleted = savedSearchSchema.create("deleted").setType(MetadataValueType.BOOLEAN);
    savedSearch_deleted.setSystemReserved(true);
    savedSearch_deleted.setUndeletable(true);
    savedSearch_deleted.setMultiLingual(false);
    MetadataBuilder savedSearch_denyTokens = savedSearchSchema.create("denyTokens").setType(MetadataValueType.STRING);
    savedSearch_denyTokens.setMultivalue(true);
    savedSearch_denyTokens.setSystemReserved(true);
    savedSearch_denyTokens.setUndeletable(true);
    savedSearch_denyTokens.setMultiLingual(false);
    savedSearch_denyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder savedSearch_detachedauthorizations = savedSearchSchema.create("detachedauthorizations").setType(MetadataValueType.BOOLEAN);
    savedSearch_detachedauthorizations.setSystemReserved(true);
    savedSearch_detachedauthorizations.setUndeletable(true);
    savedSearch_detachedauthorizations.setMultiLingual(false);
    MetadataBuilder savedSearch_errorOnPhysicalDeletion = savedSearchSchema.create("errorOnPhysicalDeletion").setType(MetadataValueType.BOOLEAN);
    savedSearch_errorOnPhysicalDeletion.setSystemReserved(true);
    savedSearch_errorOnPhysicalDeletion.setUndeletable(true);
    savedSearch_errorOnPhysicalDeletion.setMultiLingual(false);
    MetadataBuilder savedSearch_estimatedSize = savedSearchSchema.create("estimatedSize").setType(MetadataValueType.INTEGER);
    savedSearch_estimatedSize.setSystemReserved(true);
    savedSearch_estimatedSize.setUndeletable(true);
    savedSearch_estimatedSize.setMultiLingual(false);
    MetadataBuilder savedSearch_facetSelections = savedSearchSchema.create("facetSelections").setType(MetadataValueType.STRUCTURE);
    savedSearch_facetSelections.setMultivalue(true);
    savedSearch_facetSelections.setUndeletable(true);
    savedSearch_facetSelections.defineStructureFactory(FacetSelectionsFactory.class);
    MetadataBuilder savedSearch_freeTextSearch = savedSearchSchema.create("freeTextSearch").setType(MetadataValueType.STRING);
    savedSearch_freeTextSearch.setUndeletable(true);
    MetadataBuilder savedSearch_hidden = savedSearchSchema.create("hidden").setType(MetadataValueType.BOOLEAN);
    savedSearch_hidden.setSystemReserved(true);
    savedSearch_hidden.setUndeletable(true);
    savedSearch_hidden.setMultiLingual(false);
    MetadataBuilder savedSearch_id = savedSearchSchema.create("id").setType(MetadataValueType.STRING);
    savedSearch_id.setDefaultRequirement(true);
    savedSearch_id.setSystemReserved(true);
    savedSearch_id.setUndeletable(true);
    savedSearch_id.setMultiLingual(false);
    savedSearch_id.setSearchable(true);
    savedSearch_id.setSortable(true);
    savedSearch_id.setUniqueValue(true);
    savedSearch_id.setUnmodifiable(true);
    MetadataBuilder savedSearch_legacyIdentifier = savedSearchSchema.create("legacyIdentifier").setType(MetadataValueType.STRING);
    savedSearch_legacyIdentifier.setDefaultRequirement(true);
    savedSearch_legacyIdentifier.setSystemReserved(true);
    savedSearch_legacyIdentifier.setUndeletable(true);
    savedSearch_legacyIdentifier.setMultiLingual(false);
    savedSearch_legacyIdentifier.setSearchable(true);
    savedSearch_legacyIdentifier.setUniqueValue(true);
    savedSearch_legacyIdentifier.setUnmodifiable(true);
    MetadataBuilder savedSearch_logicallyDeletedOn = savedSearchSchema.create("logicallyDeletedOn").setType(MetadataValueType.DATE_TIME);
    savedSearch_logicallyDeletedOn.setSystemReserved(true);
    savedSearch_logicallyDeletedOn.setUndeletable(true);
    savedSearch_logicallyDeletedOn.setMultiLingual(false);
    MetadataBuilder savedSearch_manualTokens = savedSearchSchema.create("manualTokens").setType(MetadataValueType.STRING);
    savedSearch_manualTokens.setMultivalue(true);
    savedSearch_manualTokens.setSystemReserved(true);
    savedSearch_manualTokens.setUndeletable(true);
    savedSearch_manualTokens.setMultiLingual(false);
    savedSearch_manualTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder savedSearch_markedForParsing = savedSearchSchema.create("markedForParsing").setType(MetadataValueType.BOOLEAN);
    savedSearch_markedForParsing.setSystemReserved(true);
    savedSearch_markedForParsing.setUndeletable(true);
    savedSearch_markedForParsing.setMultiLingual(false);
    MetadataBuilder savedSearch_markedForPreviewConversion = savedSearchSchema.create("markedForPreviewConversion").setType(MetadataValueType.BOOLEAN);
    savedSearch_markedForPreviewConversion.setSystemReserved(true);
    savedSearch_markedForPreviewConversion.setUndeletable(true);
    savedSearch_markedForPreviewConversion.setMultiLingual(false);
    MetadataBuilder savedSearch_markedForReindexing = savedSearchSchema.create("markedForReindexing").setType(MetadataValueType.BOOLEAN);
    savedSearch_markedForReindexing.setSystemReserved(true);
    savedSearch_markedForReindexing.setUndeletable(true);
    savedSearch_markedForReindexing.setMultiLingual(false);
    MetadataBuilder savedSearch_migrationDataVersion = savedSearchSchema.create("migrationDataVersion").setType(MetadataValueType.NUMBER);
    savedSearch_migrationDataVersion.setSystemReserved(true);
    savedSearch_migrationDataVersion.setUndeletable(true);
    savedSearch_migrationDataVersion.setMultiLingual(false);
    savedSearch_migrationDataVersion.setEssentialInSummary(true);
    MetadataBuilder savedSearch_modifiedBy = savedSearchSchema.create("modifiedBy").setType(MetadataValueType.REFERENCE);
    savedSearch_modifiedBy.setSystemReserved(true);
    savedSearch_modifiedBy.setUndeletable(true);
    savedSearch_modifiedBy.setMultiLingual(false);
    savedSearch_modifiedBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder savedSearch_modifiedOn = savedSearchSchema.create("modifiedOn").setType(MetadataValueType.DATE_TIME);
    savedSearch_modifiedOn.setSystemReserved(true);
    savedSearch_modifiedOn.setUndeletable(true);
    savedSearch_modifiedOn.setMultiLingual(false);
    savedSearch_modifiedOn.setSortable(true);
    MetadataBuilder savedSearch_pageLength = savedSearchSchema.create("pageLength").setType(MetadataValueType.NUMBER);
    savedSearch_pageLength.setUndeletable(true);
    MetadataBuilder savedSearch_pageNumber = savedSearchSchema.create("pageNumber").setType(MetadataValueType.NUMBER);
    savedSearch_pageNumber.setUndeletable(true);
    MetadataBuilder savedSearch_path = savedSearchSchema.create("path").setType(MetadataValueType.STRING);
    savedSearch_path.setMultivalue(true);
    savedSearch_path.setSystemReserved(true);
    savedSearch_path.setUndeletable(true);
    savedSearch_path.setMultiLingual(false);
    MetadataBuilder savedSearch_pathParts = savedSearchSchema.create("pathParts").setType(MetadataValueType.STRING);
    savedSearch_pathParts.setMultivalue(true);
    savedSearch_pathParts.setSystemReserved(true);
    savedSearch_pathParts.setUndeletable(true);
    savedSearch_pathParts.setMultiLingual(false);
    MetadataBuilder savedSearch_principalpath = savedSearchSchema.create("principalpath").setType(MetadataValueType.STRING);
    savedSearch_principalpath.setSystemReserved(true);
    savedSearch_principalpath.setUndeletable(true);
    savedSearch_principalpath.setMultiLingual(false);
    MetadataBuilder savedSearch_public = savedSearchSchema.create("public").setType(MetadataValueType.BOOLEAN);
    savedSearch_public.setUndeletable(true);
    MetadataBuilder savedSearch_removedauthorizations = savedSearchSchema.create("removedauthorizations").setType(MetadataValueType.STRING);
    savedSearch_removedauthorizations.setMultivalue(true);
    savedSearch_removedauthorizations.setSystemReserved(true);
    savedSearch_removedauthorizations.setUndeletable(true);
    savedSearch_removedauthorizations.setMultiLingual(false);
    MetadataBuilder savedSearch_restricted = savedSearchSchema.create("restricted").setType(MetadataValueType.BOOLEAN);
    savedSearch_restricted.setUndeletable(true);
    MetadataBuilder savedSearch_resultsViewMode = savedSearchSchema.create("resultsViewMode").setType(MetadataValueType.STRING);
    savedSearch_resultsViewMode.setUndeletable(true);
    savedSearch_resultsViewMode.setDefaultValue("detailed");
    MetadataBuilder savedSearch_schema = savedSearchSchema.create("schema").setType(MetadataValueType.STRING);
    savedSearch_schema.setDefaultRequirement(true);
    savedSearch_schema.setSystemReserved(true);
    savedSearch_schema.setUndeletable(true);
    savedSearch_schema.setMultiLingual(false);
    MetadataBuilder savedSearch_schemaCodeFilter = savedSearchSchema.create("schemaCodeFilter").setType(MetadataValueType.STRING);
    savedSearch_schemaCodeFilter.setUndeletable(true);
    MetadataBuilder savedSearch_schemaFilter = savedSearchSchema.create("schemaFilter").setType(MetadataValueType.STRING);
    savedSearch_schemaFilter.setUndeletable(true);
    MetadataBuilder savedSearch_searchType = savedSearchSchema.create("searchType").setType(MetadataValueType.STRING);
    savedSearch_searchType.setUndeletable(true);
    MetadataBuilder savedSearch_shareDenyTokens = savedSearchSchema.create("shareDenyTokens").setType(MetadataValueType.STRING);
    savedSearch_shareDenyTokens.setMultivalue(true);
    savedSearch_shareDenyTokens.setSystemReserved(true);
    savedSearch_shareDenyTokens.setUndeletable(true);
    savedSearch_shareDenyTokens.setMultiLingual(false);
    savedSearch_shareDenyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder savedSearch_shareTokens = savedSearchSchema.create("shareTokens").setType(MetadataValueType.STRING);
    savedSearch_shareTokens.setMultivalue(true);
    savedSearch_shareTokens.setSystemReserved(true);
    savedSearch_shareTokens.setUndeletable(true);
    savedSearch_shareTokens.setMultiLingual(false);
    savedSearch_shareTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder savedSearch_sharedGroups = savedSearchSchema.create("sharedGroups").setType(MetadataValueType.STRING);
    savedSearch_sharedGroups.setMultivalue(true);
    savedSearch_sharedGroups.setUndeletable(true);
    MetadataBuilder savedSearch_sharedUsers = savedSearchSchema.create("sharedUsers").setType(MetadataValueType.STRING);
    savedSearch_sharedUsers.setMultivalue(true);
    savedSearch_sharedUsers.setUndeletable(true);
    MetadataBuilder savedSearch_sortField = savedSearchSchema.create("sortField").setType(MetadataValueType.STRING);
    savedSearch_sortField.setUndeletable(true);
    MetadataBuilder savedSearch_sortOrder = savedSearchSchema.create("sortOrder").setType(MetadataValueType.ENUM);
    savedSearch_sortOrder.setUndeletable(true);
    savedSearch_sortOrder.defineAsEnum(SavedSearch.SortOrder.class);
    MetadataBuilder savedSearch_temporary = savedSearchSchema.create("temporary").setType(MetadataValueType.BOOLEAN);
    savedSearch_temporary.setUndeletable(true);
    MetadataBuilder savedSearch_title = savedSearchSchema.create("title").setType(MetadataValueType.STRING);
    savedSearch_title.setUndeletable(true);
    savedSearch_title.setMultiLingual(false);
    savedSearch_title.setSchemaAutocomplete(true);
    savedSearch_title.setSearchable(true);
    MetadataBuilder savedSearch_tokens = savedSearchSchema.create("tokens").setType(MetadataValueType.STRING);
    savedSearch_tokens.setMultivalue(true);
    savedSearch_tokens.setSystemReserved(true);
    savedSearch_tokens.setUndeletable(true);
    savedSearch_tokens.setMultiLingual(false);
    MetadataBuilder savedSearch_tokensHierarchy = savedSearchSchema.create("tokensHierarchy").setType(MetadataValueType.STRING);
    savedSearch_tokensHierarchy.setMultivalue(true);
    savedSearch_tokensHierarchy.setSystemReserved(true);
    savedSearch_tokensHierarchy.setUndeletable(true);
    savedSearch_tokensHierarchy.setMultiLingual(false);
    MetadataBuilder savedSearch_user = savedSearchSchema.create("user").setType(MetadataValueType.REFERENCE);
    savedSearch_user.setUndeletable(true);
    savedSearch_user.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder savedSearch_visibleInTrees = savedSearchSchema.create("visibleInTrees").setType(MetadataValueType.BOOLEAN);
    savedSearch_visibleInTrees.setSystemReserved(true);
    savedSearch_visibleInTrees.setUndeletable(true);
    savedSearch_visibleInTrees.setMultiLingual(false);
  }

  private void createAuthorizationDetailsSchemaTypeMetadatas(MetadataSchemaTypesBuilder types, MetadataSchemaTypeBuilder authorizationDetailsSchemaType, MetadataSchemaBuilder authorizationDetailsSchema) {
    MetadataBuilder authorizationDetails_allReferences = authorizationDetailsSchema.create("allReferences").setType(MetadataValueType.STRING);
    authorizationDetails_allReferences.setMultivalue(true);
    authorizationDetails_allReferences.setSystemReserved(true);
    authorizationDetails_allReferences.setUndeletable(true);
    authorizationDetails_allReferences.setMultiLingual(false);
    MetadataBuilder authorizationDetails_allRemovedAuths = authorizationDetailsSchema.create("allRemovedAuths").setType(MetadataValueType.STRING);
    authorizationDetails_allRemovedAuths.setMultivalue(true);
    authorizationDetails_allRemovedAuths.setSystemReserved(true);
    authorizationDetails_allRemovedAuths.setUndeletable(true);
    authorizationDetails_allRemovedAuths.setEssential(true);
    authorizationDetails_allRemovedAuths.setMultiLingual(false);
    MetadataBuilder authorizationDetails_attachedAncestors = authorizationDetailsSchema.create("attachedAncestors").setType(MetadataValueType.STRING);
    authorizationDetails_attachedAncestors.setMultivalue(true);
    authorizationDetails_attachedAncestors.setSystemReserved(true);
    authorizationDetails_attachedAncestors.setUndeletable(true);
    authorizationDetails_attachedAncestors.setEssential(true);
    authorizationDetails_attachedAncestors.setMultiLingual(false);
    MetadataBuilder authorizationDetails_autocomplete = authorizationDetailsSchema.create("autocomplete").setType(MetadataValueType.STRING);
    authorizationDetails_autocomplete.setMultivalue(true);
    authorizationDetails_autocomplete.setSystemReserved(true);
    authorizationDetails_autocomplete.setUndeletable(true);
    authorizationDetails_autocomplete.setEssential(true);
    authorizationDetails_autocomplete.setMultiLingual(true);
    MetadataBuilder authorizationDetails_caption = authorizationDetailsSchema.create("caption").setType(MetadataValueType.STRING);
    authorizationDetails_caption.setSystemReserved(true);
    authorizationDetails_caption.setUndeletable(true);
    authorizationDetails_caption.setMultiLingual(false);
    authorizationDetails_caption.setSortable(true);
    MetadataBuilder authorizationDetails_createdBy = authorizationDetailsSchema.create("createdBy").setType(MetadataValueType.REFERENCE);
    authorizationDetails_createdBy.setSystemReserved(true);
    authorizationDetails_createdBy.setUndeletable(true);
    authorizationDetails_createdBy.setMultiLingual(false);
    authorizationDetails_createdBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder authorizationDetails_createdOn = authorizationDetailsSchema.create("createdOn").setType(MetadataValueType.DATE_TIME);
    authorizationDetails_createdOn.setSystemReserved(true);
    authorizationDetails_createdOn.setUndeletable(true);
    authorizationDetails_createdOn.setMultiLingual(false);
    authorizationDetails_createdOn.setSortable(true);
    MetadataBuilder authorizationDetails_deleted = authorizationDetailsSchema.create("deleted").setType(MetadataValueType.BOOLEAN);
    authorizationDetails_deleted.setSystemReserved(true);
    authorizationDetails_deleted.setUndeletable(true);
    authorizationDetails_deleted.setMultiLingual(false);
    MetadataBuilder authorizationDetails_denyTokens = authorizationDetailsSchema.create("denyTokens").setType(MetadataValueType.STRING);
    authorizationDetails_denyTokens.setMultivalue(true);
    authorizationDetails_denyTokens.setSystemReserved(true);
    authorizationDetails_denyTokens.setUndeletable(true);
    authorizationDetails_denyTokens.setMultiLingual(false);
    authorizationDetails_denyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder authorizationDetails_detachedauthorizations = authorizationDetailsSchema.create("detachedauthorizations").setType(MetadataValueType.BOOLEAN);
    authorizationDetails_detachedauthorizations.setSystemReserved(true);
    authorizationDetails_detachedauthorizations.setUndeletable(true);
    authorizationDetails_detachedauthorizations.setMultiLingual(false);
    MetadataBuilder authorizationDetails_endDate = authorizationDetailsSchema.create("endDate").setType(MetadataValueType.DATE);
    authorizationDetails_endDate.setUndeletable(true);
    MetadataBuilder authorizationDetails_errorOnPhysicalDeletion = authorizationDetailsSchema.create("errorOnPhysicalDeletion").setType(MetadataValueType.BOOLEAN);
    authorizationDetails_errorOnPhysicalDeletion.setSystemReserved(true);
    authorizationDetails_errorOnPhysicalDeletion.setUndeletable(true);
    authorizationDetails_errorOnPhysicalDeletion.setMultiLingual(false);
    MetadataBuilder authorizationDetails_estimatedSize = authorizationDetailsSchema.create("estimatedSize").setType(MetadataValueType.INTEGER);
    authorizationDetails_estimatedSize.setSystemReserved(true);
    authorizationDetails_estimatedSize.setUndeletable(true);
    authorizationDetails_estimatedSize.setMultiLingual(false);
    MetadataBuilder authorizationDetails_hidden = authorizationDetailsSchema.create("hidden").setType(MetadataValueType.BOOLEAN);
    authorizationDetails_hidden.setSystemReserved(true);
    authorizationDetails_hidden.setUndeletable(true);
    authorizationDetails_hidden.setMultiLingual(false);
    MetadataBuilder authorizationDetails_id = authorizationDetailsSchema.create("id").setType(MetadataValueType.STRING);
    authorizationDetails_id.setDefaultRequirement(true);
    authorizationDetails_id.setSystemReserved(true);
    authorizationDetails_id.setUndeletable(true);
    authorizationDetails_id.setMultiLingual(false);
    authorizationDetails_id.setSearchable(true);
    authorizationDetails_id.setSortable(true);
    authorizationDetails_id.setUniqueValue(true);
    authorizationDetails_id.setUnmodifiable(true);
    MetadataBuilder authorizationDetails_lastTokenRecalculate = authorizationDetailsSchema.create("lastTokenRecalculate").setType(MetadataValueType.DATE);
    authorizationDetails_lastTokenRecalculate.setUndeletable(true);
    MetadataBuilder authorizationDetails_legacyIdentifier = authorizationDetailsSchema.create("legacyIdentifier").setType(MetadataValueType.STRING);
    authorizationDetails_legacyIdentifier.setDefaultRequirement(true);
    authorizationDetails_legacyIdentifier.setSystemReserved(true);
    authorizationDetails_legacyIdentifier.setUndeletable(true);
    authorizationDetails_legacyIdentifier.setMultiLingual(false);
    authorizationDetails_legacyIdentifier.setSearchable(true);
    authorizationDetails_legacyIdentifier.setUniqueValue(true);
    authorizationDetails_legacyIdentifier.setUnmodifiable(true);
    MetadataBuilder authorizationDetails_logicallyDeletedOn = authorizationDetailsSchema.create("logicallyDeletedOn").setType(MetadataValueType.DATE_TIME);
    authorizationDetails_logicallyDeletedOn.setSystemReserved(true);
    authorizationDetails_logicallyDeletedOn.setUndeletable(true);
    authorizationDetails_logicallyDeletedOn.setMultiLingual(false);
    MetadataBuilder authorizationDetails_manualTokens = authorizationDetailsSchema.create("manualTokens").setType(MetadataValueType.STRING);
    authorizationDetails_manualTokens.setMultivalue(true);
    authorizationDetails_manualTokens.setSystemReserved(true);
    authorizationDetails_manualTokens.setUndeletable(true);
    authorizationDetails_manualTokens.setMultiLingual(false);
    authorizationDetails_manualTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder authorizationDetails_markedForParsing = authorizationDetailsSchema.create("markedForParsing").setType(MetadataValueType.BOOLEAN);
    authorizationDetails_markedForParsing.setSystemReserved(true);
    authorizationDetails_markedForParsing.setUndeletable(true);
    authorizationDetails_markedForParsing.setMultiLingual(false);
    MetadataBuilder authorizationDetails_markedForPreviewConversion = authorizationDetailsSchema.create("markedForPreviewConversion").setType(MetadataValueType.BOOLEAN);
    authorizationDetails_markedForPreviewConversion.setSystemReserved(true);
    authorizationDetails_markedForPreviewConversion.setUndeletable(true);
    authorizationDetails_markedForPreviewConversion.setMultiLingual(false);
    MetadataBuilder authorizationDetails_markedForReindexing = authorizationDetailsSchema.create("markedForReindexing").setType(MetadataValueType.BOOLEAN);
    authorizationDetails_markedForReindexing.setSystemReserved(true);
    authorizationDetails_markedForReindexing.setUndeletable(true);
    authorizationDetails_markedForReindexing.setMultiLingual(false);
    MetadataBuilder authorizationDetails_migrationDataVersion = authorizationDetailsSchema.create("migrationDataVersion").setType(MetadataValueType.NUMBER);
    authorizationDetails_migrationDataVersion.setSystemReserved(true);
    authorizationDetails_migrationDataVersion.setUndeletable(true);
    authorizationDetails_migrationDataVersion.setMultiLingual(false);
    authorizationDetails_migrationDataVersion.setEssentialInSummary(true);
    MetadataBuilder authorizationDetails_modifiedBy = authorizationDetailsSchema.create("modifiedBy").setType(MetadataValueType.REFERENCE);
    authorizationDetails_modifiedBy.setSystemReserved(true);
    authorizationDetails_modifiedBy.setUndeletable(true);
    authorizationDetails_modifiedBy.setMultiLingual(false);
    authorizationDetails_modifiedBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder authorizationDetails_modifiedOn = authorizationDetailsSchema.create("modifiedOn").setType(MetadataValueType.DATE_TIME);
    authorizationDetails_modifiedOn.setSystemReserved(true);
    authorizationDetails_modifiedOn.setUndeletable(true);
    authorizationDetails_modifiedOn.setMultiLingual(false);
    authorizationDetails_modifiedOn.setSortable(true);
    MetadataBuilder authorizationDetails_negative = authorizationDetailsSchema.create("negative").setType(MetadataValueType.BOOLEAN);
    MetadataBuilder authorizationDetails_overrideInherited = authorizationDetailsSchema.create("overrideInherited").setType(MetadataValueType.BOOLEAN);
    authorizationDetails_overrideInherited.setUndeletable(true);
    MetadataBuilder authorizationDetails_path = authorizationDetailsSchema.create("path").setType(MetadataValueType.STRING);
    authorizationDetails_path.setMultivalue(true);
    authorizationDetails_path.setSystemReserved(true);
    authorizationDetails_path.setUndeletable(true);
    authorizationDetails_path.setMultiLingual(false);
    MetadataBuilder authorizationDetails_pathParts = authorizationDetailsSchema.create("pathParts").setType(MetadataValueType.STRING);
    authorizationDetails_pathParts.setMultivalue(true);
    authorizationDetails_pathParts.setSystemReserved(true);
    authorizationDetails_pathParts.setUndeletable(true);
    authorizationDetails_pathParts.setMultiLingual(false);
    MetadataBuilder authorizationDetails_principalpath = authorizationDetailsSchema.create("principalpath").setType(MetadataValueType.STRING);
    authorizationDetails_principalpath.setSystemReserved(true);
    authorizationDetails_principalpath.setUndeletable(true);
    authorizationDetails_principalpath.setMultiLingual(false);
    MetadataBuilder authorizationDetails_principals = authorizationDetailsSchema.create("principals").setType(MetadataValueType.STRING);
    authorizationDetails_principals.setMultivalue(true);
    authorizationDetails_principals.setCacheIndex(true);
    MetadataBuilder authorizationDetails_removedauthorizations = authorizationDetailsSchema.create("removedauthorizations").setType(MetadataValueType.STRING);
    authorizationDetails_removedauthorizations.setMultivalue(true);
    authorizationDetails_removedauthorizations.setSystemReserved(true);
    authorizationDetails_removedauthorizations.setUndeletable(true);
    authorizationDetails_removedauthorizations.setMultiLingual(false);
    MetadataBuilder authorizationDetails_roles = authorizationDetailsSchema.create("roles").setType(MetadataValueType.STRING);
    authorizationDetails_roles.setMultivalue(true);
    authorizationDetails_roles.setDefaultRequirement(true);
    authorizationDetails_roles.setUndeletable(true);
    MetadataBuilder authorizationDetails_schema = authorizationDetailsSchema.create("schema").setType(MetadataValueType.STRING);
    authorizationDetails_schema.setDefaultRequirement(true);
    authorizationDetails_schema.setSystemReserved(true);
    authorizationDetails_schema.setUndeletable(true);
    authorizationDetails_schema.setMultiLingual(false);
    MetadataBuilder authorizationDetails_shareDenyTokens = authorizationDetailsSchema.create("shareDenyTokens").setType(MetadataValueType.STRING);
    authorizationDetails_shareDenyTokens.setMultivalue(true);
    authorizationDetails_shareDenyTokens.setSystemReserved(true);
    authorizationDetails_shareDenyTokens.setUndeletable(true);
    authorizationDetails_shareDenyTokens.setMultiLingual(false);
    authorizationDetails_shareDenyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder authorizationDetails_shareTokens = authorizationDetailsSchema.create("shareTokens").setType(MetadataValueType.STRING);
    authorizationDetails_shareTokens.setMultivalue(true);
    authorizationDetails_shareTokens.setSystemReserved(true);
    authorizationDetails_shareTokens.setUndeletable(true);
    authorizationDetails_shareTokens.setMultiLingual(false);
    authorizationDetails_shareTokens.defineValidators().add(ManualTokenValidator.class);
	  MetadataBuilder authorizationDetails_sharedBy = authorizationDetailsSchema.create("sharedBy").setType(MetadataValueType.STRING);
	  authorizationDetails_sharedBy.setCacheIndex(true);
    MetadataBuilder authorizationDetails_startDate = authorizationDetailsSchema.create("startDate").setType(MetadataValueType.DATE);
    authorizationDetails_startDate.setUndeletable(true);
    MetadataBuilder authorizationDetails_synced = authorizationDetailsSchema.create("synced").setType(MetadataValueType.BOOLEAN);
    authorizationDetails_synced.setUndeletable(true);
    MetadataBuilder authorizationDetails_target = authorizationDetailsSchema.create("target").setType(MetadataValueType.STRING);
    authorizationDetails_target.setCacheIndex(true);
    authorizationDetails_target.setDefaultRequirement(true);
    authorizationDetails_target.setUndeletable(true);
    MetadataBuilder authorizationDetails_targetSchemaType = authorizationDetailsSchema.create("targetSchemaType").setType(MetadataValueType.STRING);
    authorizationDetails_targetSchemaType.setUndeletable(true);
    MetadataBuilder authorizationDetails_title = authorizationDetailsSchema.create("title").setType(MetadataValueType.STRING);
    authorizationDetails_title.setUndeletable(true);
    authorizationDetails_title.setMultiLingual(false);
    authorizationDetails_title.setSchemaAutocomplete(true);
    authorizationDetails_title.setSearchable(true);
    MetadataBuilder authorizationDetails_tokens = authorizationDetailsSchema.create("tokens").setType(MetadataValueType.STRING);
    authorizationDetails_tokens.setMultivalue(true);
    authorizationDetails_tokens.setSystemReserved(true);
    authorizationDetails_tokens.setUndeletable(true);
    authorizationDetails_tokens.setMultiLingual(false);
    MetadataBuilder authorizationDetails_tokensHierarchy = authorizationDetailsSchema.create("tokensHierarchy").setType(MetadataValueType.STRING);
    authorizationDetails_tokensHierarchy.setMultivalue(true);
    authorizationDetails_tokensHierarchy.setSystemReserved(true);
    authorizationDetails_tokensHierarchy.setUndeletable(true);
    authorizationDetails_tokensHierarchy.setMultiLingual(false);
    MetadataBuilder authorizationDetails_visibleInTrees = authorizationDetailsSchema.create("visibleInTrees").setType(MetadataValueType.BOOLEAN);
    authorizationDetails_visibleInTrees.setSystemReserved(true);
    authorizationDetails_visibleInTrees.setUndeletable(true);
    authorizationDetails_visibleInTrees.setMultiLingual(false);
  }

  private void createUserDocumentSchemaTypeMetadatas(MetadataSchemaTypesBuilder types, MetadataSchemaTypeBuilder userDocumentSchemaType, MetadataSchemaBuilder userDocumentSchema) {
    MetadataBuilder userDocument_allReferences = userDocumentSchema.create("allReferences").setType(MetadataValueType.STRING);
    userDocument_allReferences.setMultivalue(true);
    userDocument_allReferences.setSystemReserved(true);
    userDocument_allReferences.setUndeletable(true);
    userDocument_allReferences.setMultiLingual(false);
    MetadataBuilder userDocument_allRemovedAuths = userDocumentSchema.create("allRemovedAuths").setType(MetadataValueType.STRING);
    userDocument_allRemovedAuths.setMultivalue(true);
    userDocument_allRemovedAuths.setSystemReserved(true);
    userDocument_allRemovedAuths.setUndeletable(true);
    userDocument_allRemovedAuths.setEssential(true);
    userDocument_allRemovedAuths.setMultiLingual(false);
    MetadataBuilder userDocument_attachedAncestors = userDocumentSchema.create("attachedAncestors").setType(MetadataValueType.STRING);
    userDocument_attachedAncestors.setMultivalue(true);
    userDocument_attachedAncestors.setSystemReserved(true);
    userDocument_attachedAncestors.setUndeletable(true);
    userDocument_attachedAncestors.setEssential(true);
    userDocument_attachedAncestors.setMultiLingual(false);
    MetadataBuilder userDocument_autocomplete = userDocumentSchema.create("autocomplete").setType(MetadataValueType.STRING);
    userDocument_autocomplete.setMultivalue(true);
    userDocument_autocomplete.setSystemReserved(true);
    userDocument_autocomplete.setUndeletable(true);
    userDocument_autocomplete.setEssential(true);
    userDocument_autocomplete.setMultiLingual(true);
    MetadataBuilder userDocument_caption = userDocumentSchema.create("caption").setType(MetadataValueType.STRING);
    userDocument_caption.setSystemReserved(true);
    userDocument_caption.setUndeletable(true);
    userDocument_caption.setMultiLingual(false);
    userDocument_caption.setSortable(true);
    MetadataBuilder userDocument_content = userDocumentSchema.create("content").setType(MetadataValueType.CONTENT);
    userDocument_content.setUndeletable(true);
    userDocument_content.setSearchable(true);
    userDocument_content.defineStructureFactory(ContentFactory.class);
    MetadataBuilder userDocument_contentSize = userDocumentSchema.create("contentSize").setType(MetadataValueType.NUMBER);
    userDocument_contentSize.setUndeletable(true);
    MetadataBuilder userDocument_createdBy = userDocumentSchema.create("createdBy").setType(MetadataValueType.REFERENCE);
    userDocument_createdBy.setSystemReserved(true);
    userDocument_createdBy.setUndeletable(true);
    userDocument_createdBy.setMultiLingual(false);
    userDocument_createdBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder userDocument_createdOn = userDocumentSchema.create("createdOn").setType(MetadataValueType.DATE_TIME);
    userDocument_createdOn.setSystemReserved(true);
    userDocument_createdOn.setUndeletable(true);
    userDocument_createdOn.setMultiLingual(false);
    userDocument_createdOn.setSortable(true);
    MetadataBuilder userDocument_deleted = userDocumentSchema.create("deleted").setType(MetadataValueType.BOOLEAN);
    userDocument_deleted.setSystemReserved(true);
    userDocument_deleted.setUndeletable(true);
    userDocument_deleted.setMultiLingual(false);
    MetadataBuilder userDocument_denyTokens = userDocumentSchema.create("denyTokens").setType(MetadataValueType.STRING);
    userDocument_denyTokens.setMultivalue(true);
    userDocument_denyTokens.setSystemReserved(true);
    userDocument_denyTokens.setUndeletable(true);
    userDocument_denyTokens.setMultiLingual(false);
    userDocument_denyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder userDocument_detachedauthorizations = userDocumentSchema.create("detachedauthorizations").setType(MetadataValueType.BOOLEAN);
    userDocument_detachedauthorizations.setSystemReserved(true);
    userDocument_detachedauthorizations.setUndeletable(true);
    userDocument_detachedauthorizations.setMultiLingual(false);
    MetadataBuilder userDocument_errorOnPhysicalDeletion = userDocumentSchema.create("errorOnPhysicalDeletion").setType(MetadataValueType.BOOLEAN);
    userDocument_errorOnPhysicalDeletion.setSystemReserved(true);
    userDocument_errorOnPhysicalDeletion.setUndeletable(true);
    userDocument_errorOnPhysicalDeletion.setMultiLingual(false);
    MetadataBuilder userDocument_estimatedSize = userDocumentSchema.create("estimatedSize").setType(MetadataValueType.INTEGER);
    userDocument_estimatedSize.setSystemReserved(true);
    userDocument_estimatedSize.setUndeletable(true);
    userDocument_estimatedSize.setMultiLingual(false);
    MetadataBuilder userDocument_formCreatedOn = userDocumentSchema.create("formCreatedOn").setType(MetadataValueType.DATE_TIME);
    MetadataBuilder userDocument_formModifiedOn = userDocumentSchema.create("formModifiedOn").setType(MetadataValueType.DATE_TIME);
    MetadataBuilder userDocument_hidden = userDocumentSchema.create("hidden").setType(MetadataValueType.BOOLEAN);
    userDocument_hidden.setSystemReserved(true);
    userDocument_hidden.setUndeletable(true);
    userDocument_hidden.setMultiLingual(false);
    MetadataBuilder userDocument_id = userDocumentSchema.create("id").setType(MetadataValueType.STRING);
    userDocument_id.setDefaultRequirement(true);
    userDocument_id.setSystemReserved(true);
    userDocument_id.setUndeletable(true);
    userDocument_id.setMultiLingual(false);
    userDocument_id.setSearchable(true);
    userDocument_id.setSortable(true);
    userDocument_id.setUniqueValue(true);
    userDocument_id.setUnmodifiable(true);
    MetadataBuilder userDocument_legacyIdentifier = userDocumentSchema.create("legacyIdentifier").setType(MetadataValueType.STRING);
    userDocument_legacyIdentifier.setDefaultRequirement(true);
    userDocument_legacyIdentifier.setSystemReserved(true);
    userDocument_legacyIdentifier.setUndeletable(true);
    userDocument_legacyIdentifier.setMultiLingual(false);
    userDocument_legacyIdentifier.setSearchable(true);
    userDocument_legacyIdentifier.setUniqueValue(true);
    userDocument_legacyIdentifier.setUnmodifiable(true);
    MetadataBuilder userDocument_logicallyDeletedOn = userDocumentSchema.create("logicallyDeletedOn").setType(MetadataValueType.DATE_TIME);
    userDocument_logicallyDeletedOn.setSystemReserved(true);
    userDocument_logicallyDeletedOn.setUndeletable(true);
    userDocument_logicallyDeletedOn.setMultiLingual(false);
    MetadataBuilder userDocument_manualTokens = userDocumentSchema.create("manualTokens").setType(MetadataValueType.STRING);
    userDocument_manualTokens.setMultivalue(true);
    userDocument_manualTokens.setSystemReserved(true);
    userDocument_manualTokens.setUndeletable(true);
    userDocument_manualTokens.setMultiLingual(false);
    userDocument_manualTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder userDocument_markedForParsing = userDocumentSchema.create("markedForParsing").setType(MetadataValueType.BOOLEAN);
    userDocument_markedForParsing.setSystemReserved(true);
    userDocument_markedForParsing.setUndeletable(true);
    userDocument_markedForParsing.setMultiLingual(false);
    MetadataBuilder userDocument_markedForPreviewConversion = userDocumentSchema.create("markedForPreviewConversion").setType(MetadataValueType.BOOLEAN);
    userDocument_markedForPreviewConversion.setSystemReserved(true);
    userDocument_markedForPreviewConversion.setUndeletable(true);
    userDocument_markedForPreviewConversion.setMultiLingual(false);
    MetadataBuilder userDocument_markedForReindexing = userDocumentSchema.create("markedForReindexing").setType(MetadataValueType.BOOLEAN);
    userDocument_markedForReindexing.setSystemReserved(true);
    userDocument_markedForReindexing.setUndeletable(true);
    userDocument_markedForReindexing.setMultiLingual(false);
    MetadataBuilder userDocument_migrationDataVersion = userDocumentSchema.create("migrationDataVersion").setType(MetadataValueType.NUMBER);
    userDocument_migrationDataVersion.setSystemReserved(true);
    userDocument_migrationDataVersion.setUndeletable(true);
    userDocument_migrationDataVersion.setMultiLingual(false);
    userDocument_migrationDataVersion.setEssentialInSummary(true);
    MetadataBuilder userDocument_modifiedBy = userDocumentSchema.create("modifiedBy").setType(MetadataValueType.REFERENCE);
    userDocument_modifiedBy.setSystemReserved(true);
    userDocument_modifiedBy.setUndeletable(true);
    userDocument_modifiedBy.setMultiLingual(false);
    userDocument_modifiedBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder userDocument_modifiedOn = userDocumentSchema.create("modifiedOn").setType(MetadataValueType.DATE_TIME);
    userDocument_modifiedOn.setSystemReserved(true);
    userDocument_modifiedOn.setUndeletable(true);
    userDocument_modifiedOn.setMultiLingual(false);
    userDocument_modifiedOn.setSortable(true);
    MetadataBuilder userDocument_path = userDocumentSchema.create("path").setType(MetadataValueType.STRING);
    userDocument_path.setMultivalue(true);
    userDocument_path.setSystemReserved(true);
    userDocument_path.setUndeletable(true);
    userDocument_path.setMultiLingual(false);
    MetadataBuilder userDocument_pathParts = userDocumentSchema.create("pathParts").setType(MetadataValueType.STRING);
    userDocument_pathParts.setMultivalue(true);
    userDocument_pathParts.setSystemReserved(true);
    userDocument_pathParts.setUndeletable(true);
    userDocument_pathParts.setMultiLingual(false);
    MetadataBuilder userDocument_principalpath = userDocumentSchema.create("principalpath").setType(MetadataValueType.STRING);
    userDocument_principalpath.setSystemReserved(true);
    userDocument_principalpath.setUndeletable(true);
    userDocument_principalpath.setMultiLingual(false);
    MetadataBuilder userDocument_removedauthorizations = userDocumentSchema.create("removedauthorizations").setType(MetadataValueType.STRING);
    userDocument_removedauthorizations.setMultivalue(true);
    userDocument_removedauthorizations.setSystemReserved(true);
    userDocument_removedauthorizations.setUndeletable(true);
    userDocument_removedauthorizations.setMultiLingual(false);
    MetadataBuilder userDocument_schema = userDocumentSchema.create("schema").setType(MetadataValueType.STRING);
    userDocument_schema.setDefaultRequirement(true);
    userDocument_schema.setSystemReserved(true);
    userDocument_schema.setUndeletable(true);
    userDocument_schema.setMultiLingual(false);
    MetadataBuilder userDocument_shareDenyTokens = userDocumentSchema.create("shareDenyTokens").setType(MetadataValueType.STRING);
    userDocument_shareDenyTokens.setMultivalue(true);
    userDocument_shareDenyTokens.setSystemReserved(true);
    userDocument_shareDenyTokens.setUndeletable(true);
    userDocument_shareDenyTokens.setMultiLingual(false);
    userDocument_shareDenyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder userDocument_shareTokens = userDocumentSchema.create("shareTokens").setType(MetadataValueType.STRING);
    userDocument_shareTokens.setMultivalue(true);
    userDocument_shareTokens.setSystemReserved(true);
    userDocument_shareTokens.setUndeletable(true);
    userDocument_shareTokens.setMultiLingual(false);
    userDocument_shareTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder userDocument_title = userDocumentSchema.create("title").setType(MetadataValueType.STRING);
    userDocument_title.setUndeletable(true);
    userDocument_title.setMultiLingual(false);
    userDocument_title.setSchemaAutocomplete(true);
    userDocument_title.setSearchable(true);
    MetadataBuilder userDocument_tokens = userDocumentSchema.create("tokens").setType(MetadataValueType.STRING);
    userDocument_tokens.setMultivalue(true);
    userDocument_tokens.setSystemReserved(true);
    userDocument_tokens.setUndeletable(true);
    userDocument_tokens.setMultiLingual(false);
    MetadataBuilder userDocument_tokensHierarchy = userDocumentSchema.create("tokensHierarchy").setType(MetadataValueType.STRING);
    userDocument_tokensHierarchy.setMultivalue(true);
    userDocument_tokensHierarchy.setSystemReserved(true);
    userDocument_tokensHierarchy.setUndeletable(true);
    userDocument_tokensHierarchy.setMultiLingual(false);
    MetadataBuilder userDocument_user = userDocumentSchema.create("user").setType(MetadataValueType.REFERENCE);
    userDocument_user.setUndeletable(true);
    userDocument_user.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder userDocument_userFolder = userDocumentSchema.create("userFolder").setType(MetadataValueType.REFERENCE);
    userDocument_userFolder.defineReferencesTo(types.getSchemaType("userFolder"));
    MetadataBuilder userDocument_visibleInTrees = userDocumentSchema.create("visibleInTrees").setType(MetadataValueType.BOOLEAN);
    userDocument_visibleInTrees.setSystemReserved(true);
    userDocument_visibleInTrees.setUndeletable(true);
    userDocument_visibleInTrees.setMultiLingual(false);
  }

  private void createTaskSchemaTypeMetadatas(MetadataSchemaTypesBuilder types, MetadataSchemaTypeBuilder taskSchemaType, MetadataSchemaBuilder task_approvalSchema, MetadataSchemaBuilder taskSchema) {
    MetadataBuilder task_approval_decision = task_approvalSchema.create("decision").setType(MetadataValueType.STRING);
    task_approval_decision.setUndeletable(true);
    task_approval_decision.defineValidators().add(DecisionValidator.class);
    MetadataBuilder task_allReferences = taskSchema.create("allReferences").setType(MetadataValueType.STRING);
    task_allReferences.setMultivalue(true);
    task_allReferences.setSystemReserved(true);
    task_allReferences.setUndeletable(true);
    task_allReferences.setMultiLingual(false);
    MetadataBuilder task_allRemovedAuths = taskSchema.create("allRemovedAuths").setType(MetadataValueType.STRING);
    task_allRemovedAuths.setMultivalue(true);
    task_allRemovedAuths.setSystemReserved(true);
    task_allRemovedAuths.setUndeletable(true);
    task_allRemovedAuths.setEssential(true);
    task_allRemovedAuths.setMultiLingual(false);
    MetadataBuilder task_assignCandidates = taskSchema.create("assignCandidates").setType(MetadataValueType.REFERENCE);
    task_assignCandidates.setMultivalue(true);
    task_assignCandidates.setUndeletable(true);
    task_assignCandidates.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder task_assignedOn = taskSchema.create("assignedOn").setType(MetadataValueType.DATE_TIME);
    task_assignedOn.setUndeletable(true);
    MetadataBuilder task_assignedTo = taskSchema.create("assignedTo").setType(MetadataValueType.REFERENCE);
    task_assignedTo.setUndeletable(true);
    task_assignedTo.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder task_attachedAncestors = taskSchema.create("attachedAncestors").setType(MetadataValueType.STRING);
    task_attachedAncestors.setMultivalue(true);
    task_attachedAncestors.setSystemReserved(true);
    task_attachedAncestors.setUndeletable(true);
    task_attachedAncestors.setEssential(true);
    task_attachedAncestors.setMultiLingual(false);
    MetadataBuilder task_autocomplete = taskSchema.create("autocomplete").setType(MetadataValueType.STRING);
    task_autocomplete.setMultivalue(true);
    task_autocomplete.setSystemReserved(true);
    task_autocomplete.setUndeletable(true);
    task_autocomplete.setEssential(true);
    task_autocomplete.setMultiLingual(true);
    MetadataBuilder task_caption = taskSchema.create("caption").setType(MetadataValueType.STRING);
    task_caption.setSystemReserved(true);
    task_caption.setUndeletable(true);
    task_caption.setMultiLingual(false);
    task_caption.setSortable(true);
    MetadataBuilder task_createdBy = taskSchema.create("createdBy").setType(MetadataValueType.REFERENCE);
    task_createdBy.setSystemReserved(true);
    task_createdBy.setUndeletable(true);
    task_createdBy.setMultiLingual(false);
    task_createdBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder task_createdOn = taskSchema.create("createdOn").setType(MetadataValueType.DATE_TIME);
    task_createdOn.setSystemReserved(true);
    task_createdOn.setUndeletable(true);
    task_createdOn.setMultiLingual(false);
    task_createdOn.setSortable(true);
    MetadataBuilder task_deleted = taskSchema.create("deleted").setType(MetadataValueType.BOOLEAN);
    task_deleted.setSystemReserved(true);
    task_deleted.setUndeletable(true);
    task_deleted.setMultiLingual(false);
    MetadataBuilder task_denyTokens = taskSchema.create("denyTokens").setType(MetadataValueType.STRING);
    task_denyTokens.setMultivalue(true);
    task_denyTokens.setSystemReserved(true);
    task_denyTokens.setUndeletable(true);
    task_denyTokens.setMultiLingual(false);
    task_denyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder task_detachedauthorizations = taskSchema.create("detachedauthorizations").setType(MetadataValueType.BOOLEAN);
    task_detachedauthorizations.setSystemReserved(true);
    task_detachedauthorizations.setUndeletable(true);
    task_detachedauthorizations.setMultiLingual(false);
    MetadataBuilder task_dueDate = taskSchema.create("dueDate").setType(MetadataValueType.DATE_TIME);
    task_dueDate.setUndeletable(true);
    MetadataBuilder task_errorOnPhysicalDeletion = taskSchema.create("errorOnPhysicalDeletion").setType(MetadataValueType.BOOLEAN);
    task_errorOnPhysicalDeletion.setSystemReserved(true);
    task_errorOnPhysicalDeletion.setUndeletable(true);
    task_errorOnPhysicalDeletion.setMultiLingual(false);
    MetadataBuilder task_estimatedSize = taskSchema.create("estimatedSize").setType(MetadataValueType.INTEGER);
    task_estimatedSize.setSystemReserved(true);
    task_estimatedSize.setUndeletable(true);
    task_estimatedSize.setMultiLingual(false);
    MetadataBuilder task_finishedBy = taskSchema.create("finishedBy").setType(MetadataValueType.REFERENCE);
    task_finishedBy.setUndeletable(true);
    task_finishedBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder task_finishedOn = taskSchema.create("finishedOn").setType(MetadataValueType.DATE_TIME);
    task_finishedOn.setUndeletable(true);
    MetadataBuilder task_hidden = taskSchema.create("hidden").setType(MetadataValueType.BOOLEAN);
    task_hidden.setSystemReserved(true);
    task_hidden.setUndeletable(true);
    task_hidden.setMultiLingual(false);
    MetadataBuilder task_id = taskSchema.create("id").setType(MetadataValueType.STRING);
    task_id.setDefaultRequirement(true);
    task_id.setSystemReserved(true);
    task_id.setUndeletable(true);
    task_id.setMultiLingual(false);
    task_id.setSearchable(true);
    task_id.setSortable(true);
    task_id.setUniqueValue(true);
    task_id.setUnmodifiable(true);
    MetadataBuilder task_legacyIdentifier = taskSchema.create("legacyIdentifier").setType(MetadataValueType.STRING);
    task_legacyIdentifier.setDefaultRequirement(true);
    task_legacyIdentifier.setSystemReserved(true);
    task_legacyIdentifier.setUndeletable(true);
    task_legacyIdentifier.setMultiLingual(false);
    task_legacyIdentifier.setSearchable(true);
    task_legacyIdentifier.setUniqueValue(true);
    task_legacyIdentifier.setUnmodifiable(true);
    MetadataBuilder task_logicallyDeletedOn = taskSchema.create("logicallyDeletedOn").setType(MetadataValueType.DATE_TIME);
    task_logicallyDeletedOn.setSystemReserved(true);
    task_logicallyDeletedOn.setUndeletable(true);
    task_logicallyDeletedOn.setMultiLingual(false);
    MetadataBuilder task_manualTokens = taskSchema.create("manualTokens").setType(MetadataValueType.STRING);
    task_manualTokens.setMultivalue(true);
    task_manualTokens.setSystemReserved(true);
    task_manualTokens.setUndeletable(true);
    task_manualTokens.setMultiLingual(false);
    task_manualTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder task_markedForParsing = taskSchema.create("markedForParsing").setType(MetadataValueType.BOOLEAN);
    task_markedForParsing.setSystemReserved(true);
    task_markedForParsing.setUndeletable(true);
    task_markedForParsing.setMultiLingual(false);
    MetadataBuilder task_markedForPreviewConversion = taskSchema.create("markedForPreviewConversion").setType(MetadataValueType.BOOLEAN);
    task_markedForPreviewConversion.setSystemReserved(true);
    task_markedForPreviewConversion.setUndeletable(true);
    task_markedForPreviewConversion.setMultiLingual(false);
    MetadataBuilder task_markedForReindexing = taskSchema.create("markedForReindexing").setType(MetadataValueType.BOOLEAN);
    task_markedForReindexing.setSystemReserved(true);
    task_markedForReindexing.setUndeletable(true);
    task_markedForReindexing.setMultiLingual(false);
    MetadataBuilder task_migrationDataVersion = taskSchema.create("migrationDataVersion").setType(MetadataValueType.NUMBER);
    task_migrationDataVersion.setSystemReserved(true);
    task_migrationDataVersion.setUndeletable(true);
    task_migrationDataVersion.setMultiLingual(false);
    task_migrationDataVersion.setEssentialInSummary(true);
    MetadataBuilder task_modifiedBy = taskSchema.create("modifiedBy").setType(MetadataValueType.REFERENCE);
    task_modifiedBy.setSystemReserved(true);
    task_modifiedBy.setUndeletable(true);
    task_modifiedBy.setMultiLingual(false);
    task_modifiedBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder task_modifiedOn = taskSchema.create("modifiedOn").setType(MetadataValueType.DATE_TIME);
    task_modifiedOn.setSystemReserved(true);
    task_modifiedOn.setUndeletable(true);
    task_modifiedOn.setMultiLingual(false);
    task_modifiedOn.setSortable(true);
    MetadataBuilder task_path = taskSchema.create("path").setType(MetadataValueType.STRING);
    task_path.setMultivalue(true);
    task_path.setSystemReserved(true);
    task_path.setUndeletable(true);
    task_path.setMultiLingual(false);
    MetadataBuilder task_pathParts = taskSchema.create("pathParts").setType(MetadataValueType.STRING);
    task_pathParts.setMultivalue(true);
    task_pathParts.setSystemReserved(true);
    task_pathParts.setUndeletable(true);
    task_pathParts.setMultiLingual(false);
    MetadataBuilder task_principalpath = taskSchema.create("principalpath").setType(MetadataValueType.STRING);
    task_principalpath.setSystemReserved(true);
    task_principalpath.setUndeletable(true);
    task_principalpath.setMultiLingual(false);
    MetadataBuilder task_removedauthorizations = taskSchema.create("removedauthorizations").setType(MetadataValueType.STRING);
    task_removedauthorizations.setMultivalue(true);
    task_removedauthorizations.setSystemReserved(true);
    task_removedauthorizations.setUndeletable(true);
    task_removedauthorizations.setMultiLingual(false);
    MetadataBuilder task_schema = taskSchema.create("schema").setType(MetadataValueType.STRING);
    task_schema.setDefaultRequirement(true);
    task_schema.setSystemReserved(true);
    task_schema.setUndeletable(true);
    task_schema.setMultiLingual(false);
    MetadataBuilder task_shareDenyTokens = taskSchema.create("shareDenyTokens").setType(MetadataValueType.STRING);
    task_shareDenyTokens.setMultivalue(true);
    task_shareDenyTokens.setSystemReserved(true);
    task_shareDenyTokens.setUndeletable(true);
    task_shareDenyTokens.setMultiLingual(false);
    task_shareDenyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder task_shareTokens = taskSchema.create("shareTokens").setType(MetadataValueType.STRING);
    task_shareTokens.setMultivalue(true);
    task_shareTokens.setSystemReserved(true);
    task_shareTokens.setUndeletable(true);
    task_shareTokens.setMultiLingual(false);
    task_shareTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder task_title = taskSchema.create("title").setType(MetadataValueType.STRING);
    task_title.setUndeletable(true);
    task_title.setMultiLingual(false);
    task_title.setSchemaAutocomplete(true);
    task_title.setSearchable(true);
    MetadataBuilder task_tokens = taskSchema.create("tokens").setType(MetadataValueType.STRING);
    task_tokens.setMultivalue(true);
    task_tokens.setSystemReserved(true);
    task_tokens.setUndeletable(true);
    task_tokens.setMultiLingual(false);
    MetadataBuilder task_tokensHierarchy = taskSchema.create("tokensHierarchy").setType(MetadataValueType.STRING);
    task_tokensHierarchy.setMultivalue(true);
    task_tokensHierarchy.setSystemReserved(true);
    task_tokensHierarchy.setUndeletable(true);
    task_tokensHierarchy.setMultiLingual(false);
    MetadataBuilder task_visibleInTrees = taskSchema.create("visibleInTrees").setType(MetadataValueType.BOOLEAN);
    task_visibleInTrees.setSystemReserved(true);
    task_visibleInTrees.setUndeletable(true);
    task_visibleInTrees.setMultiLingual(false);
    MetadataBuilder task_workflowIdentifier = taskSchema.create("workflowIdentifier").setType(MetadataValueType.STRING);
    task_workflowIdentifier.setUndeletable(true);
    MetadataBuilder task_workflowRecordIdentifiers = taskSchema.create("workflowRecordIdentifiers").setType(MetadataValueType.STRING);
    task_workflowRecordIdentifiers.setMultivalue(true);
    task_workflowRecordIdentifiers.setUndeletable(true);
    MetadataBuilder task_approval_allReferences = task_approvalSchema.get("allReferences");
    MetadataBuilder task_approval_allRemovedAuths = task_approvalSchema.get("allRemovedAuths");
    MetadataBuilder task_approval_assignCandidates = task_approvalSchema.get("assignCandidates");
    MetadataBuilder task_approval_assignedOn = task_approvalSchema.get("assignedOn");
    MetadataBuilder task_approval_assignedTo = task_approvalSchema.get("assignedTo");
    MetadataBuilder task_approval_attachedAncestors = task_approvalSchema.get("attachedAncestors");
    MetadataBuilder task_approval_autocomplete = task_approvalSchema.get("autocomplete");
    MetadataBuilder task_approval_caption = task_approvalSchema.get("caption");
    MetadataBuilder task_approval_createdBy = task_approvalSchema.get("createdBy");
    MetadataBuilder task_approval_createdOn = task_approvalSchema.get("createdOn");
    MetadataBuilder task_approval_deleted = task_approvalSchema.get("deleted");
    MetadataBuilder task_approval_denyTokens = task_approvalSchema.get("denyTokens");
    MetadataBuilder task_approval_detachedauthorizations = task_approvalSchema.get("detachedauthorizations");
    MetadataBuilder task_approval_dueDate = task_approvalSchema.get("dueDate");
    MetadataBuilder task_approval_errorOnPhysicalDeletion = task_approvalSchema.get("errorOnPhysicalDeletion");
    MetadataBuilder task_approval_estimatedSize = task_approvalSchema.get("estimatedSize");
    MetadataBuilder task_approval_finishedBy = task_approvalSchema.get("finishedBy");
    MetadataBuilder task_approval_finishedOn = task_approvalSchema.get("finishedOn");
    MetadataBuilder task_approval_hidden = task_approvalSchema.get("hidden");
    MetadataBuilder task_approval_id = task_approvalSchema.get("id");
    MetadataBuilder task_approval_legacyIdentifier = task_approvalSchema.get("legacyIdentifier");
    MetadataBuilder task_approval_logicallyDeletedOn = task_approvalSchema.get("logicallyDeletedOn");
    MetadataBuilder task_approval_manualTokens = task_approvalSchema.get("manualTokens");
    MetadataBuilder task_approval_markedForParsing = task_approvalSchema.get("markedForParsing");
    MetadataBuilder task_approval_markedForPreviewConversion = task_approvalSchema.get("markedForPreviewConversion");
    MetadataBuilder task_approval_markedForReindexing = task_approvalSchema.get("markedForReindexing");
    MetadataBuilder task_approval_migrationDataVersion = task_approvalSchema.get("migrationDataVersion");
    MetadataBuilder task_approval_modifiedBy = task_approvalSchema.get("modifiedBy");
    MetadataBuilder task_approval_modifiedOn = task_approvalSchema.get("modifiedOn");
    MetadataBuilder task_approval_path = task_approvalSchema.get("path");
    MetadataBuilder task_approval_pathParts = task_approvalSchema.get("pathParts");
    MetadataBuilder task_approval_principalpath = task_approvalSchema.get("principalpath");
    MetadataBuilder task_approval_removedauthorizations = task_approvalSchema.get("removedauthorizations");
    MetadataBuilder task_approval_schema = task_approvalSchema.get("schema");
    MetadataBuilder task_approval_shareDenyTokens = task_approvalSchema.get("shareDenyTokens");
    MetadataBuilder task_approval_shareTokens = task_approvalSchema.get("shareTokens");
    MetadataBuilder task_approval_title = task_approvalSchema.get("title");
    MetadataBuilder task_approval_tokens = task_approvalSchema.get("tokens");
    MetadataBuilder task_approval_tokensHierarchy = task_approvalSchema.get("tokensHierarchy");
    MetadataBuilder task_approval_visibleInTrees = task_approvalSchema.get("visibleInTrees");
    MetadataBuilder task_approval_workflowIdentifier = task_approvalSchema.get("workflowIdentifier");
    MetadataBuilder task_approval_workflowRecordIdentifiers = task_approvalSchema.get("workflowRecordIdentifiers");
  }

  private void createUserFolderSchemaTypeMetadatas(MetadataSchemaTypesBuilder types, MetadataSchemaTypeBuilder userFolderSchemaType, MetadataSchemaBuilder userFolderSchema) {
    MetadataBuilder userFolder_allReferences = userFolderSchema.create("allReferences").setType(MetadataValueType.STRING);
    userFolder_allReferences.setMultivalue(true);
    userFolder_allReferences.setSystemReserved(true);
    userFolder_allReferences.setUndeletable(true);
    userFolder_allReferences.setMultiLingual(false);
    MetadataBuilder userFolder_allRemovedAuths = userFolderSchema.create("allRemovedAuths").setType(MetadataValueType.STRING);
    userFolder_allRemovedAuths.setMultivalue(true);
    userFolder_allRemovedAuths.setSystemReserved(true);
    userFolder_allRemovedAuths.setUndeletable(true);
    userFolder_allRemovedAuths.setEssential(true);
    userFolder_allRemovedAuths.setMultiLingual(false);
    MetadataBuilder userFolder_attachedAncestors = userFolderSchema.create("attachedAncestors").setType(MetadataValueType.STRING);
    userFolder_attachedAncestors.setMultivalue(true);
    userFolder_attachedAncestors.setSystemReserved(true);
    userFolder_attachedAncestors.setUndeletable(true);
    userFolder_attachedAncestors.setEssential(true);
    userFolder_attachedAncestors.setMultiLingual(false);
    MetadataBuilder userFolder_autocomplete = userFolderSchema.create("autocomplete").setType(MetadataValueType.STRING);
    userFolder_autocomplete.setMultivalue(true);
    userFolder_autocomplete.setSystemReserved(true);
    userFolder_autocomplete.setUndeletable(true);
    userFolder_autocomplete.setEssential(true);
    userFolder_autocomplete.setMultiLingual(true);
    MetadataBuilder userFolder_caption = userFolderSchema.create("caption").setType(MetadataValueType.STRING);
    userFolder_caption.setSystemReserved(true);
    userFolder_caption.setUndeletable(true);
    userFolder_caption.setMultiLingual(false);
    userFolder_caption.setSortable(true);
    MetadataBuilder userFolder_createdBy = userFolderSchema.create("createdBy").setType(MetadataValueType.REFERENCE);
    userFolder_createdBy.setSystemReserved(true);
    userFolder_createdBy.setUndeletable(true);
    userFolder_createdBy.setMultiLingual(false);
    userFolder_createdBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder userFolder_createdOn = userFolderSchema.create("createdOn").setType(MetadataValueType.DATE_TIME);
    userFolder_createdOn.setSystemReserved(true);
    userFolder_createdOn.setUndeletable(true);
    userFolder_createdOn.setMultiLingual(false);
    userFolder_createdOn.setSortable(true);
    MetadataBuilder userFolder_deleted = userFolderSchema.create("deleted").setType(MetadataValueType.BOOLEAN);
    userFolder_deleted.setSystemReserved(true);
    userFolder_deleted.setUndeletable(true);
    userFolder_deleted.setMultiLingual(false);
    MetadataBuilder userFolder_denyTokens = userFolderSchema.create("denyTokens").setType(MetadataValueType.STRING);
    userFolder_denyTokens.setMultivalue(true);
    userFolder_denyTokens.setSystemReserved(true);
    userFolder_denyTokens.setUndeletable(true);
    userFolder_denyTokens.setMultiLingual(false);
    userFolder_denyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder userFolder_detachedauthorizations = userFolderSchema.create("detachedauthorizations").setType(MetadataValueType.BOOLEAN);
    userFolder_detachedauthorizations.setSystemReserved(true);
    userFolder_detachedauthorizations.setUndeletable(true);
    userFolder_detachedauthorizations.setMultiLingual(false);
    MetadataBuilder userFolder_errorOnPhysicalDeletion = userFolderSchema.create("errorOnPhysicalDeletion").setType(MetadataValueType.BOOLEAN);
    userFolder_errorOnPhysicalDeletion.setSystemReserved(true);
    userFolder_errorOnPhysicalDeletion.setUndeletable(true);
    userFolder_errorOnPhysicalDeletion.setMultiLingual(false);
    MetadataBuilder userFolder_estimatedSize = userFolderSchema.create("estimatedSize").setType(MetadataValueType.INTEGER);
    userFolder_estimatedSize.setSystemReserved(true);
    userFolder_estimatedSize.setUndeletable(true);
    userFolder_estimatedSize.setMultiLingual(false);
    MetadataBuilder userFolder_formCreatedOn = userFolderSchema.create("formCreatedOn").setType(MetadataValueType.DATE_TIME);
    MetadataBuilder userFolder_formModifiedOn = userFolderSchema.create("formModifiedOn").setType(MetadataValueType.DATE_TIME);
    MetadataBuilder userFolder_hidden = userFolderSchema.create("hidden").setType(MetadataValueType.BOOLEAN);
    userFolder_hidden.setSystemReserved(true);
    userFolder_hidden.setUndeletable(true);
    userFolder_hidden.setMultiLingual(false);
    MetadataBuilder userFolder_id = userFolderSchema.create("id").setType(MetadataValueType.STRING);
    userFolder_id.setDefaultRequirement(true);
    userFolder_id.setSystemReserved(true);
    userFolder_id.setUndeletable(true);
    userFolder_id.setMultiLingual(false);
    userFolder_id.setSearchable(true);
    userFolder_id.setSortable(true);
    userFolder_id.setUniqueValue(true);
    userFolder_id.setUnmodifiable(true);
    MetadataBuilder userFolder_legacyIdentifier = userFolderSchema.create("legacyIdentifier").setType(MetadataValueType.STRING);
    userFolder_legacyIdentifier.setDefaultRequirement(true);
    userFolder_legacyIdentifier.setSystemReserved(true);
    userFolder_legacyIdentifier.setUndeletable(true);
    userFolder_legacyIdentifier.setMultiLingual(false);
    userFolder_legacyIdentifier.setSearchable(true);
    userFolder_legacyIdentifier.setUniqueValue(true);
    userFolder_legacyIdentifier.setUnmodifiable(true);
    MetadataBuilder userFolder_logicallyDeletedOn = userFolderSchema.create("logicallyDeletedOn").setType(MetadataValueType.DATE_TIME);
    userFolder_logicallyDeletedOn.setSystemReserved(true);
    userFolder_logicallyDeletedOn.setUndeletable(true);
    userFolder_logicallyDeletedOn.setMultiLingual(false);
    MetadataBuilder userFolder_manualTokens = userFolderSchema.create("manualTokens").setType(MetadataValueType.STRING);
    userFolder_manualTokens.setMultivalue(true);
    userFolder_manualTokens.setSystemReserved(true);
    userFolder_manualTokens.setUndeletable(true);
    userFolder_manualTokens.setMultiLingual(false);
    userFolder_manualTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder userFolder_markedForParsing = userFolderSchema.create("markedForParsing").setType(MetadataValueType.BOOLEAN);
    userFolder_markedForParsing.setSystemReserved(true);
    userFolder_markedForParsing.setUndeletable(true);
    userFolder_markedForParsing.setMultiLingual(false);
    MetadataBuilder userFolder_markedForPreviewConversion = userFolderSchema.create("markedForPreviewConversion").setType(MetadataValueType.BOOLEAN);
    userFolder_markedForPreviewConversion.setSystemReserved(true);
    userFolder_markedForPreviewConversion.setUndeletable(true);
    userFolder_markedForPreviewConversion.setMultiLingual(false);
    MetadataBuilder userFolder_markedForReindexing = userFolderSchema.create("markedForReindexing").setType(MetadataValueType.BOOLEAN);
    userFolder_markedForReindexing.setSystemReserved(true);
    userFolder_markedForReindexing.setUndeletable(true);
    userFolder_markedForReindexing.setMultiLingual(false);
    MetadataBuilder userFolder_migrationDataVersion = userFolderSchema.create("migrationDataVersion").setType(MetadataValueType.NUMBER);
    userFolder_migrationDataVersion.setSystemReserved(true);
    userFolder_migrationDataVersion.setUndeletable(true);
    userFolder_migrationDataVersion.setMultiLingual(false);
    userFolder_migrationDataVersion.setEssentialInSummary(true);
    MetadataBuilder userFolder_modifiedBy = userFolderSchema.create("modifiedBy").setType(MetadataValueType.REFERENCE);
    userFolder_modifiedBy.setSystemReserved(true);
    userFolder_modifiedBy.setUndeletable(true);
    userFolder_modifiedBy.setMultiLingual(false);
    userFolder_modifiedBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder userFolder_modifiedOn = userFolderSchema.create("modifiedOn").setType(MetadataValueType.DATE_TIME);
    userFolder_modifiedOn.setSystemReserved(true);
    userFolder_modifiedOn.setUndeletable(true);
    userFolder_modifiedOn.setMultiLingual(false);
    userFolder_modifiedOn.setSortable(true);
    MetadataBuilder userFolder_parentUserFolder = userFolderSchema.create("parentUserFolder").setType(MetadataValueType.REFERENCE);
    userFolder_parentUserFolder.defineReferencesTo(types.getSchemaType("userFolder"));
    MetadataBuilder userFolder_path = userFolderSchema.create("path").setType(MetadataValueType.STRING);
    userFolder_path.setMultivalue(true);
    userFolder_path.setSystemReserved(true);
    userFolder_path.setUndeletable(true);
    userFolder_path.setMultiLingual(false);
    MetadataBuilder userFolder_pathParts = userFolderSchema.create("pathParts").setType(MetadataValueType.STRING);
    userFolder_pathParts.setMultivalue(true);
    userFolder_pathParts.setSystemReserved(true);
    userFolder_pathParts.setUndeletable(true);
    userFolder_pathParts.setMultiLingual(false);
    MetadataBuilder userFolder_principalpath = userFolderSchema.create("principalpath").setType(MetadataValueType.STRING);
    userFolder_principalpath.setSystemReserved(true);
    userFolder_principalpath.setUndeletable(true);
    userFolder_principalpath.setMultiLingual(false);
    MetadataBuilder userFolder_removedauthorizations = userFolderSchema.create("removedauthorizations").setType(MetadataValueType.STRING);
    userFolder_removedauthorizations.setMultivalue(true);
    userFolder_removedauthorizations.setSystemReserved(true);
    userFolder_removedauthorizations.setUndeletable(true);
    userFolder_removedauthorizations.setMultiLingual(false);
    MetadataBuilder userFolder_schema = userFolderSchema.create("schema").setType(MetadataValueType.STRING);
    userFolder_schema.setDefaultRequirement(true);
    userFolder_schema.setSystemReserved(true);
    userFolder_schema.setUndeletable(true);
    userFolder_schema.setMultiLingual(false);
    MetadataBuilder userFolder_shareDenyTokens = userFolderSchema.create("shareDenyTokens").setType(MetadataValueType.STRING);
    userFolder_shareDenyTokens.setMultivalue(true);
    userFolder_shareDenyTokens.setSystemReserved(true);
    userFolder_shareDenyTokens.setUndeletable(true);
    userFolder_shareDenyTokens.setMultiLingual(false);
    userFolder_shareDenyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder userFolder_shareTokens = userFolderSchema.create("shareTokens").setType(MetadataValueType.STRING);
    userFolder_shareTokens.setMultivalue(true);
    userFolder_shareTokens.setSystemReserved(true);
    userFolder_shareTokens.setUndeletable(true);
    userFolder_shareTokens.setMultiLingual(false);
    userFolder_shareTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder userFolder_title = userFolderSchema.create("title").setType(MetadataValueType.STRING);
    userFolder_title.setUndeletable(true);
    userFolder_title.setMultiLingual(false);
    userFolder_title.setSchemaAutocomplete(true);
    userFolder_title.setSearchable(true);
    MetadataBuilder userFolder_tokens = userFolderSchema.create("tokens").setType(MetadataValueType.STRING);
    userFolder_tokens.setMultivalue(true);
    userFolder_tokens.setSystemReserved(true);
    userFolder_tokens.setUndeletable(true);
    userFolder_tokens.setMultiLingual(false);
    MetadataBuilder userFolder_tokensHierarchy = userFolderSchema.create("tokensHierarchy").setType(MetadataValueType.STRING);
    userFolder_tokensHierarchy.setMultivalue(true);
    userFolder_tokensHierarchy.setSystemReserved(true);
    userFolder_tokensHierarchy.setUndeletable(true);
    userFolder_tokensHierarchy.setMultiLingual(false);
    MetadataBuilder userFolder_user = userFolderSchema.create("user").setType(MetadataValueType.REFERENCE);
    userFolder_user.setUndeletable(true);
    userFolder_user.setEssential(true);
    userFolder_user.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder userFolder_visibleInTrees = userFolderSchema.create("visibleInTrees").setType(MetadataValueType.BOOLEAN);
    userFolder_visibleInTrees.setSystemReserved(true);
    userFolder_visibleInTrees.setUndeletable(true);
    userFolder_visibleInTrees.setMultiLingual(false);
  }

  private void createGlobalGroupSchemaTypeMetadatas(MetadataSchemaTypesBuilder types, MetadataSchemaTypeBuilder globalGroupSchemaType, MetadataSchemaBuilder globalGroupSchema) {
    MetadataBuilder globalGroup_allReferences = globalGroupSchema.create("allReferences").setType(MetadataValueType.STRING);
    globalGroup_allReferences.setMultivalue(true);
    globalGroup_allReferences.setSystemReserved(true);
    globalGroup_allReferences.setUndeletable(true);
    globalGroup_allReferences.setMultiLingual(false);
    MetadataBuilder globalGroup_allRemovedAuths = globalGroupSchema.create("allRemovedAuths").setType(MetadataValueType.STRING);
    globalGroup_allRemovedAuths.setMultivalue(true);
    globalGroup_allRemovedAuths.setSystemReserved(true);
    globalGroup_allRemovedAuths.setUndeletable(true);
    globalGroup_allRemovedAuths.setEssential(true);
    globalGroup_allRemovedAuths.setMultiLingual(false);
    MetadataBuilder globalGroup_attachedAncestors = globalGroupSchema.create("attachedAncestors").setType(MetadataValueType.STRING);
    globalGroup_attachedAncestors.setMultivalue(true);
    globalGroup_attachedAncestors.setSystemReserved(true);
    globalGroup_attachedAncestors.setUndeletable(true);
    globalGroup_attachedAncestors.setEssential(true);
    globalGroup_attachedAncestors.setMultiLingual(false);
    MetadataBuilder globalGroup_autocomplete = globalGroupSchema.create("autocomplete").setType(MetadataValueType.STRING);
    globalGroup_autocomplete.setMultivalue(true);
    globalGroup_autocomplete.setSystemReserved(true);
    globalGroup_autocomplete.setUndeletable(true);
    globalGroup_autocomplete.setEssential(true);
    globalGroup_autocomplete.setMultiLingual(true);
    MetadataBuilder globalGroup_caption = globalGroupSchema.create("caption").setType(MetadataValueType.STRING);
    globalGroup_caption.setSystemReserved(true);
    globalGroup_caption.setUndeletable(true);
    globalGroup_caption.setMultiLingual(false);
    globalGroup_caption.setSortable(true);
    MetadataBuilder globalGroup_code = globalGroupSchema.create("code").setType(MetadataValueType.STRING);
    globalGroup_code.setCacheIndex(true);
    globalGroup_code.setDefaultRequirement(true);
    globalGroup_code.setUndeletable(true);
    globalGroup_code.setEssential(true);
    globalGroup_code.setUniqueValue(true);
    MetadataBuilder globalGroup_collections = globalGroupSchema.create("collections").setType(MetadataValueType.STRING);
    globalGroup_collections.setMultivalue(true);
    globalGroup_collections.setUndeletable(true);
    MetadataBuilder globalGroup_createdBy = globalGroupSchema.create("createdBy").setType(MetadataValueType.REFERENCE);
    globalGroup_createdBy.setSystemReserved(true);
    globalGroup_createdBy.setUndeletable(true);
    globalGroup_createdBy.setMultiLingual(false);
    globalGroup_createdBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder globalGroup_createdOn = globalGroupSchema.create("createdOn").setType(MetadataValueType.DATE_TIME);
    globalGroup_createdOn.setSystemReserved(true);
    globalGroup_createdOn.setUndeletable(true);
    globalGroup_createdOn.setMultiLingual(false);
    globalGroup_createdOn.setSortable(true);
    MetadataBuilder globalGroup_deleted = globalGroupSchema.create("deleted").setType(MetadataValueType.BOOLEAN);
    globalGroup_deleted.setSystemReserved(true);
    globalGroup_deleted.setUndeletable(true);
    globalGroup_deleted.setMultiLingual(false);
    MetadataBuilder globalGroup_denyTokens = globalGroupSchema.create("denyTokens").setType(MetadataValueType.STRING);
    globalGroup_denyTokens.setMultivalue(true);
    globalGroup_denyTokens.setSystemReserved(true);
    globalGroup_denyTokens.setUndeletable(true);
    globalGroup_denyTokens.setMultiLingual(false);
    globalGroup_denyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder globalGroup_detachedauthorizations = globalGroupSchema.create("detachedauthorizations").setType(MetadataValueType.BOOLEAN);
    globalGroup_detachedauthorizations.setSystemReserved(true);
    globalGroup_detachedauthorizations.setUndeletable(true);
    globalGroup_detachedauthorizations.setMultiLingual(false);
    MetadataBuilder globalGroup_errorOnPhysicalDeletion = globalGroupSchema.create("errorOnPhysicalDeletion").setType(MetadataValueType.BOOLEAN);
    globalGroup_errorOnPhysicalDeletion.setSystemReserved(true);
    globalGroup_errorOnPhysicalDeletion.setUndeletable(true);
    globalGroup_errorOnPhysicalDeletion.setMultiLingual(false);
    MetadataBuilder globalGroup_estimatedSize = globalGroupSchema.create("estimatedSize").setType(MetadataValueType.INTEGER);
    globalGroup_estimatedSize.setSystemReserved(true);
    globalGroup_estimatedSize.setUndeletable(true);
    globalGroup_estimatedSize.setMultiLingual(false);
    MetadataBuilder globalGroup_hidden = globalGroupSchema.create("hidden").setType(MetadataValueType.BOOLEAN);
    globalGroup_hidden.setSystemReserved(true);
    globalGroup_hidden.setUndeletable(true);
    globalGroup_hidden.setMultiLingual(false);
    MetadataBuilder globalGroup_hierarchy = globalGroupSchema.create("hierarchy").setType(MetadataValueType.STRING);
    globalGroup_hierarchy.setUndeletable(true);
    MetadataBuilder globalGroup_id = globalGroupSchema.create("id").setType(MetadataValueType.STRING);
    globalGroup_id.setDefaultRequirement(true);
    globalGroup_id.setSystemReserved(true);
    globalGroup_id.setUndeletable(true);
    globalGroup_id.setMultiLingual(false);
    globalGroup_id.setSearchable(true);
    globalGroup_id.setSortable(true);
    globalGroup_id.setUniqueValue(true);
    globalGroup_id.setUnmodifiable(true);
    MetadataBuilder globalGroup_legacyIdentifier = globalGroupSchema.create("legacyIdentifier").setType(MetadataValueType.STRING);
    globalGroup_legacyIdentifier.setDefaultRequirement(true);
    globalGroup_legacyIdentifier.setSystemReserved(true);
    globalGroup_legacyIdentifier.setUndeletable(true);
    globalGroup_legacyIdentifier.setMultiLingual(false);
    globalGroup_legacyIdentifier.setSearchable(true);
    globalGroup_legacyIdentifier.setUniqueValue(true);
    globalGroup_legacyIdentifier.setUnmodifiable(true);
    MetadataBuilder globalGroup_locallyCreated = globalGroupSchema.create("locallyCreated").setType(MetadataValueType.BOOLEAN);
    globalGroup_locallyCreated.setUndeletable(true);
    MetadataBuilder globalGroup_logicallyDeletedOn = globalGroupSchema.create("logicallyDeletedOn").setType(MetadataValueType.DATE_TIME);
    globalGroup_logicallyDeletedOn.setSystemReserved(true);
    globalGroup_logicallyDeletedOn.setUndeletable(true);
    globalGroup_logicallyDeletedOn.setMultiLingual(false);
    MetadataBuilder globalGroup_manualTokens = globalGroupSchema.create("manualTokens").setType(MetadataValueType.STRING);
    globalGroup_manualTokens.setMultivalue(true);
    globalGroup_manualTokens.setSystemReserved(true);
    globalGroup_manualTokens.setUndeletable(true);
    globalGroup_manualTokens.setMultiLingual(false);
    globalGroup_manualTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder globalGroup_markedForParsing = globalGroupSchema.create("markedForParsing").setType(MetadataValueType.BOOLEAN);
    globalGroup_markedForParsing.setSystemReserved(true);
    globalGroup_markedForParsing.setUndeletable(true);
    globalGroup_markedForParsing.setMultiLingual(false);
    MetadataBuilder globalGroup_markedForPreviewConversion = globalGroupSchema.create("markedForPreviewConversion").setType(MetadataValueType.BOOLEAN);
    globalGroup_markedForPreviewConversion.setSystemReserved(true);
    globalGroup_markedForPreviewConversion.setUndeletable(true);
    globalGroup_markedForPreviewConversion.setMultiLingual(false);
    MetadataBuilder globalGroup_markedForReindexing = globalGroupSchema.create("markedForReindexing").setType(MetadataValueType.BOOLEAN);
    globalGroup_markedForReindexing.setSystemReserved(true);
    globalGroup_markedForReindexing.setUndeletable(true);
    globalGroup_markedForReindexing.setMultiLingual(false);
    MetadataBuilder globalGroup_migrationDataVersion = globalGroupSchema.create("migrationDataVersion").setType(MetadataValueType.NUMBER);
    globalGroup_migrationDataVersion.setSystemReserved(true);
    globalGroup_migrationDataVersion.setUndeletable(true);
    globalGroup_migrationDataVersion.setMultiLingual(false);
    globalGroup_migrationDataVersion.setEssentialInSummary(true);
    MetadataBuilder globalGroup_modifiedBy = globalGroupSchema.create("modifiedBy").setType(MetadataValueType.REFERENCE);
    globalGroup_modifiedBy.setSystemReserved(true);
    globalGroup_modifiedBy.setUndeletable(true);
    globalGroup_modifiedBy.setMultiLingual(false);
    globalGroup_modifiedBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder globalGroup_modifiedOn = globalGroupSchema.create("modifiedOn").setType(MetadataValueType.DATE_TIME);
    globalGroup_modifiedOn.setSystemReserved(true);
    globalGroup_modifiedOn.setUndeletable(true);
    globalGroup_modifiedOn.setMultiLingual(false);
    globalGroup_modifiedOn.setSortable(true);
    MetadataBuilder globalGroup_name = globalGroupSchema.create("name").setType(MetadataValueType.STRING);
    globalGroup_name.setDefaultRequirement(true);
    globalGroup_name.setUndeletable(true);
    MetadataBuilder globalGroup_parent = globalGroupSchema.create("parent").setType(MetadataValueType.STRING);
    globalGroup_parent.setCacheIndex(true);
    globalGroup_parent.setUndeletable(true);
    MetadataBuilder globalGroup_path = globalGroupSchema.create("path").setType(MetadataValueType.STRING);
    globalGroup_path.setMultivalue(true);
    globalGroup_path.setSystemReserved(true);
    globalGroup_path.setUndeletable(true);
    globalGroup_path.setMultiLingual(false);
    MetadataBuilder globalGroup_pathParts = globalGroupSchema.create("pathParts").setType(MetadataValueType.STRING);
    globalGroup_pathParts.setMultivalue(true);
    globalGroup_pathParts.setSystemReserved(true);
    globalGroup_pathParts.setUndeletable(true);
    globalGroup_pathParts.setMultiLingual(false);
    MetadataBuilder globalGroup_principalpath = globalGroupSchema.create("principalpath").setType(MetadataValueType.STRING);
    globalGroup_principalpath.setSystemReserved(true);
    globalGroup_principalpath.setUndeletable(true);
    globalGroup_principalpath.setMultiLingual(false);
    MetadataBuilder globalGroup_removedauthorizations = globalGroupSchema.create("removedauthorizations").setType(MetadataValueType.STRING);
    globalGroup_removedauthorizations.setMultivalue(true);
    globalGroup_removedauthorizations.setSystemReserved(true);
    globalGroup_removedauthorizations.setUndeletable(true);
    globalGroup_removedauthorizations.setMultiLingual(false);
    MetadataBuilder globalGroup_schema = globalGroupSchema.create("schema").setType(MetadataValueType.STRING);
    globalGroup_schema.setDefaultRequirement(true);
    globalGroup_schema.setSystemReserved(true);
    globalGroup_schema.setUndeletable(true);
    globalGroup_schema.setMultiLingual(false);
    MetadataBuilder globalGroup_shareDenyTokens = globalGroupSchema.create("shareDenyTokens").setType(MetadataValueType.STRING);
    globalGroup_shareDenyTokens.setMultivalue(true);
    globalGroup_shareDenyTokens.setSystemReserved(true);
    globalGroup_shareDenyTokens.setUndeletable(true);
    globalGroup_shareDenyTokens.setMultiLingual(false);
    globalGroup_shareDenyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder globalGroup_shareTokens = globalGroupSchema.create("shareTokens").setType(MetadataValueType.STRING);
    globalGroup_shareTokens.setMultivalue(true);
    globalGroup_shareTokens.setSystemReserved(true);
    globalGroup_shareTokens.setUndeletable(true);
    globalGroup_shareTokens.setMultiLingual(false);
    globalGroup_shareTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder globalGroup_status = globalGroupSchema.create("status").setType(MetadataValueType.ENUM);
    globalGroup_status.setDefaultRequirement(true);
    globalGroup_status.setUndeletable(true);
    globalGroup_status.defineAsEnum(GlobalGroupStatus.class);
    MetadataBuilder globalGroup_title = globalGroupSchema.create("title").setType(MetadataValueType.STRING);
    globalGroup_title.setUndeletable(true);
    globalGroup_title.setMultiLingual(false);
    globalGroup_title.setSchemaAutocomplete(true);
    globalGroup_title.setSearchable(true);
    MetadataBuilder globalGroup_tokens = globalGroupSchema.create("tokens").setType(MetadataValueType.STRING);
    globalGroup_tokens.setMultivalue(true);
    globalGroup_tokens.setSystemReserved(true);
    globalGroup_tokens.setUndeletable(true);
    globalGroup_tokens.setMultiLingual(false);
    MetadataBuilder globalGroup_tokensHierarchy = globalGroupSchema.create("tokensHierarchy").setType(MetadataValueType.STRING);
    globalGroup_tokensHierarchy.setMultivalue(true);
    globalGroup_tokensHierarchy.setSystemReserved(true);
    globalGroup_tokensHierarchy.setUndeletable(true);
    globalGroup_tokensHierarchy.setMultiLingual(false);
    MetadataBuilder globalGroup_visibleInTrees = globalGroupSchema.create("visibleInTrees").setType(MetadataValueType.BOOLEAN);
    globalGroup_visibleInTrees.setSystemReserved(true);
    globalGroup_visibleInTrees.setUndeletable(true);
    globalGroup_visibleInTrees.setMultiLingual(false);
  }

  private void createReportSchemaTypeMetadatas(MetadataSchemaTypesBuilder types, MetadataSchemaTypeBuilder reportSchemaType, MetadataSchemaBuilder reportSchema) {
    MetadataBuilder report_allReferences = reportSchema.create("allReferences").setType(MetadataValueType.STRING);
    report_allReferences.setMultivalue(true);
    report_allReferences.setSystemReserved(true);
    report_allReferences.setUndeletable(true);
    report_allReferences.setMultiLingual(false);
    MetadataBuilder report_allRemovedAuths = reportSchema.create("allRemovedAuths").setType(MetadataValueType.STRING);
    report_allRemovedAuths.setMultivalue(true);
    report_allRemovedAuths.setSystemReserved(true);
    report_allRemovedAuths.setUndeletable(true);
    report_allRemovedAuths.setEssential(true);
    report_allRemovedAuths.setMultiLingual(false);
    MetadataBuilder report_attachedAncestors = reportSchema.create("attachedAncestors").setType(MetadataValueType.STRING);
    report_attachedAncestors.setMultivalue(true);
    report_attachedAncestors.setSystemReserved(true);
    report_attachedAncestors.setUndeletable(true);
    report_attachedAncestors.setEssential(true);
    report_attachedAncestors.setMultiLingual(false);
    MetadataBuilder report_autocomplete = reportSchema.create("autocomplete").setType(MetadataValueType.STRING);
    report_autocomplete.setMultivalue(true);
    report_autocomplete.setSystemReserved(true);
    report_autocomplete.setUndeletable(true);
    report_autocomplete.setEssential(true);
    report_autocomplete.setMultiLingual(true);
    MetadataBuilder report_caption = reportSchema.create("caption").setType(MetadataValueType.STRING);
    report_caption.setSystemReserved(true);
    report_caption.setUndeletable(true);
    report_caption.setMultiLingual(false);
    report_caption.setSortable(true);
    MetadataBuilder report_columnsCount = reportSchema.create("columnsCount").setType(MetadataValueType.NUMBER);
    report_columnsCount.setUndeletable(true);
    MetadataBuilder report_createdBy = reportSchema.create("createdBy").setType(MetadataValueType.REFERENCE);
    report_createdBy.setSystemReserved(true);
    report_createdBy.setUndeletable(true);
    report_createdBy.setMultiLingual(false);
    report_createdBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder report_createdOn = reportSchema.create("createdOn").setType(MetadataValueType.DATE_TIME);
    report_createdOn.setSystemReserved(true);
    report_createdOn.setUndeletable(true);
    report_createdOn.setMultiLingual(false);
    report_createdOn.setSortable(true);
    MetadataBuilder report_deleted = reportSchema.create("deleted").setType(MetadataValueType.BOOLEAN);
    report_deleted.setSystemReserved(true);
    report_deleted.setUndeletable(true);
    report_deleted.setMultiLingual(false);
    MetadataBuilder report_denyTokens = reportSchema.create("denyTokens").setType(MetadataValueType.STRING);
    report_denyTokens.setMultivalue(true);
    report_denyTokens.setSystemReserved(true);
    report_denyTokens.setUndeletable(true);
    report_denyTokens.setMultiLingual(false);
    report_denyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder report_detachedauthorizations = reportSchema.create("detachedauthorizations").setType(MetadataValueType.BOOLEAN);
    report_detachedauthorizations.setSystemReserved(true);
    report_detachedauthorizations.setUndeletable(true);
    report_detachedauthorizations.setMultiLingual(false);
    MetadataBuilder report_errorOnPhysicalDeletion = reportSchema.create("errorOnPhysicalDeletion").setType(MetadataValueType.BOOLEAN);
    report_errorOnPhysicalDeletion.setSystemReserved(true);
    report_errorOnPhysicalDeletion.setUndeletable(true);
    report_errorOnPhysicalDeletion.setMultiLingual(false);
    MetadataBuilder report_estimatedSize = reportSchema.create("estimatedSize").setType(MetadataValueType.INTEGER);
    report_estimatedSize.setSystemReserved(true);
    report_estimatedSize.setUndeletable(true);
    report_estimatedSize.setMultiLingual(false);
    MetadataBuilder report_hidden = reportSchema.create("hidden").setType(MetadataValueType.BOOLEAN);
    report_hidden.setSystemReserved(true);
    report_hidden.setUndeletable(true);
    report_hidden.setMultiLingual(false);
    MetadataBuilder report_id = reportSchema.create("id").setType(MetadataValueType.STRING);
    report_id.setDefaultRequirement(true);
    report_id.setSystemReserved(true);
    report_id.setUndeletable(true);
    report_id.setMultiLingual(false);
    report_id.setSearchable(true);
    report_id.setSortable(true);
    report_id.setUniqueValue(true);
    report_id.setUnmodifiable(true);
    MetadataBuilder report_legacyIdentifier = reportSchema.create("legacyIdentifier").setType(MetadataValueType.STRING);
    report_legacyIdentifier.setDefaultRequirement(true);
    report_legacyIdentifier.setSystemReserved(true);
    report_legacyIdentifier.setUndeletable(true);
    report_legacyIdentifier.setMultiLingual(false);
    report_legacyIdentifier.setSearchable(true);
    report_legacyIdentifier.setUniqueValue(true);
    report_legacyIdentifier.setUnmodifiable(true);
    MetadataBuilder report_linesCount = reportSchema.create("linesCount").setType(MetadataValueType.NUMBER);
    report_linesCount.setDefaultRequirement(true);
    report_linesCount.setUndeletable(true);
    MetadataBuilder report_logicallyDeletedOn = reportSchema.create("logicallyDeletedOn").setType(MetadataValueType.DATE_TIME);
    report_logicallyDeletedOn.setSystemReserved(true);
    report_logicallyDeletedOn.setUndeletable(true);
    report_logicallyDeletedOn.setMultiLingual(false);
    MetadataBuilder report_manualTokens = reportSchema.create("manualTokens").setType(MetadataValueType.STRING);
    report_manualTokens.setMultivalue(true);
    report_manualTokens.setSystemReserved(true);
    report_manualTokens.setUndeletable(true);
    report_manualTokens.setMultiLingual(false);
    report_manualTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder report_markedForParsing = reportSchema.create("markedForParsing").setType(MetadataValueType.BOOLEAN);
    report_markedForParsing.setSystemReserved(true);
    report_markedForParsing.setUndeletable(true);
    report_markedForParsing.setMultiLingual(false);
    MetadataBuilder report_markedForPreviewConversion = reportSchema.create("markedForPreviewConversion").setType(MetadataValueType.BOOLEAN);
    report_markedForPreviewConversion.setSystemReserved(true);
    report_markedForPreviewConversion.setUndeletable(true);
    report_markedForPreviewConversion.setMultiLingual(false);
    MetadataBuilder report_markedForReindexing = reportSchema.create("markedForReindexing").setType(MetadataValueType.BOOLEAN);
    report_markedForReindexing.setSystemReserved(true);
    report_markedForReindexing.setUndeletable(true);
    report_markedForReindexing.setMultiLingual(false);
    MetadataBuilder report_migrationDataVersion = reportSchema.create("migrationDataVersion").setType(MetadataValueType.NUMBER);
    report_migrationDataVersion.setSystemReserved(true);
    report_migrationDataVersion.setUndeletable(true);
    report_migrationDataVersion.setMultiLingual(false);
    report_migrationDataVersion.setEssentialInSummary(true);
    MetadataBuilder report_modifiedBy = reportSchema.create("modifiedBy").setType(MetadataValueType.REFERENCE);
    report_modifiedBy.setSystemReserved(true);
    report_modifiedBy.setUndeletable(true);
    report_modifiedBy.setMultiLingual(false);
    report_modifiedBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder report_modifiedOn = reportSchema.create("modifiedOn").setType(MetadataValueType.DATE_TIME);
    report_modifiedOn.setSystemReserved(true);
    report_modifiedOn.setUndeletable(true);
    report_modifiedOn.setMultiLingual(false);
    report_modifiedOn.setSortable(true);
    MetadataBuilder report_path = reportSchema.create("path").setType(MetadataValueType.STRING);
    report_path.setMultivalue(true);
    report_path.setSystemReserved(true);
    report_path.setUndeletable(true);
    report_path.setMultiLingual(false);
    MetadataBuilder report_pathParts = reportSchema.create("pathParts").setType(MetadataValueType.STRING);
    report_pathParts.setMultivalue(true);
    report_pathParts.setSystemReserved(true);
    report_pathParts.setUndeletable(true);
    report_pathParts.setMultiLingual(false);
    MetadataBuilder report_principalpath = reportSchema.create("principalpath").setType(MetadataValueType.STRING);
    report_principalpath.setSystemReserved(true);
    report_principalpath.setUndeletable(true);
    report_principalpath.setMultiLingual(false);
    MetadataBuilder report_removedauthorizations = reportSchema.create("removedauthorizations").setType(MetadataValueType.STRING);
    report_removedauthorizations.setMultivalue(true);
    report_removedauthorizations.setSystemReserved(true);
    report_removedauthorizations.setUndeletable(true);
    report_removedauthorizations.setMultiLingual(false);
    MetadataBuilder report_reportedMetadata = reportSchema.create("reportedMetadata").setType(MetadataValueType.STRUCTURE);
    report_reportedMetadata.setMultivalue(true);
    report_reportedMetadata.setUndeletable(true);
    report_reportedMetadata.defineStructureFactory(ReportedMetadataFactory.class);
    MetadataBuilder report_schema = reportSchema.create("schema").setType(MetadataValueType.STRING);
    report_schema.setDefaultRequirement(true);
    report_schema.setSystemReserved(true);
    report_schema.setUndeletable(true);
    report_schema.setMultiLingual(false);
    MetadataBuilder report_schemaTypeCode = reportSchema.create("schemaTypeCode").setType(MetadataValueType.STRING);
    report_schemaTypeCode.setDefaultRequirement(true);
    report_schemaTypeCode.setUndeletable(true);
    MetadataBuilder report_separator = reportSchema.create("separator").setType(MetadataValueType.STRING);
    report_separator.setUndeletable(true);
    MetadataBuilder report_shareDenyTokens = reportSchema.create("shareDenyTokens").setType(MetadataValueType.STRING);
    report_shareDenyTokens.setMultivalue(true);
    report_shareDenyTokens.setSystemReserved(true);
    report_shareDenyTokens.setUndeletable(true);
    report_shareDenyTokens.setMultiLingual(false);
    report_shareDenyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder report_shareTokens = reportSchema.create("shareTokens").setType(MetadataValueType.STRING);
    report_shareTokens.setMultivalue(true);
    report_shareTokens.setSystemReserved(true);
    report_shareTokens.setUndeletable(true);
    report_shareTokens.setMultiLingual(false);
    report_shareTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder report_title = reportSchema.create("title").setType(MetadataValueType.STRING);
    report_title.setUndeletable(true);
    report_title.setMultiLingual(true);
    report_title.setSchemaAutocomplete(true);
    report_title.setSearchable(true);
    MetadataBuilder report_tokens = reportSchema.create("tokens").setType(MetadataValueType.STRING);
    report_tokens.setMultivalue(true);
    report_tokens.setSystemReserved(true);
    report_tokens.setUndeletable(true);
    report_tokens.setMultiLingual(false);
    MetadataBuilder report_tokensHierarchy = reportSchema.create("tokensHierarchy").setType(MetadataValueType.STRING);
    report_tokensHierarchy.setMultivalue(true);
    report_tokensHierarchy.setSystemReserved(true);
    report_tokensHierarchy.setUndeletable(true);
    report_tokensHierarchy.setMultiLingual(false);
    MetadataBuilder report_username = reportSchema.create("username").setType(MetadataValueType.STRING);
    report_username.setUndeletable(true);
    MetadataBuilder report_visibleInTrees = reportSchema.create("visibleInTrees").setType(MetadataValueType.BOOLEAN);
    report_visibleInTrees.setSystemReserved(true);
    report_visibleInTrees.setUndeletable(true);
    report_visibleInTrees.setMultiLingual(false);
  }

  private void createEmailToSendSchemaTypeMetadatas(MetadataSchemaTypesBuilder types, MetadataSchemaTypeBuilder emailToSendSchemaType, MetadataSchemaBuilder emailToSendSchema) {
    MetadataBuilder emailToSend_BCC = emailToSendSchema.create("BCC").setType(MetadataValueType.STRUCTURE);
    emailToSend_BCC.setMultivalue(true);
    emailToSend_BCC.setUndeletable(true);
    emailToSend_BCC.defineStructureFactory(EmailAddressFactory.class);
    MetadataBuilder emailToSend_CC = emailToSendSchema.create("CC").setType(MetadataValueType.STRUCTURE);
    emailToSend_CC.setMultivalue(true);
    emailToSend_CC.setUndeletable(true);
    emailToSend_CC.defineStructureFactory(EmailAddressFactory.class);
    MetadataBuilder emailToSend_allReferences = emailToSendSchema.create("allReferences").setType(MetadataValueType.STRING);
    emailToSend_allReferences.setMultivalue(true);
    emailToSend_allReferences.setSystemReserved(true);
    emailToSend_allReferences.setUndeletable(true);
    emailToSend_allReferences.setMultiLingual(false);
    MetadataBuilder emailToSend_allRemovedAuths = emailToSendSchema.create("allRemovedAuths").setType(MetadataValueType.STRING);
    emailToSend_allRemovedAuths.setMultivalue(true);
    emailToSend_allRemovedAuths.setSystemReserved(true);
    emailToSend_allRemovedAuths.setUndeletable(true);
    emailToSend_allRemovedAuths.setEssential(true);
    emailToSend_allRemovedAuths.setMultiLingual(false);
    MetadataBuilder emailToSend_attachedAncestors = emailToSendSchema.create("attachedAncestors").setType(MetadataValueType.STRING);
    emailToSend_attachedAncestors.setMultivalue(true);
    emailToSend_attachedAncestors.setSystemReserved(true);
    emailToSend_attachedAncestors.setUndeletable(true);
    emailToSend_attachedAncestors.setEssential(true);
    emailToSend_attachedAncestors.setMultiLingual(false);
    MetadataBuilder emailToSend_autocomplete = emailToSendSchema.create("autocomplete").setType(MetadataValueType.STRING);
    emailToSend_autocomplete.setMultivalue(true);
    emailToSend_autocomplete.setSystemReserved(true);
    emailToSend_autocomplete.setUndeletable(true);
    emailToSend_autocomplete.setEssential(true);
    emailToSend_autocomplete.setMultiLingual(true);
    MetadataBuilder emailToSend_body = emailToSendSchema.create("body").setType(MetadataValueType.TEXT);
    emailToSend_body.setUndeletable(true);
    MetadataBuilder emailToSend_caption = emailToSendSchema.create("caption").setType(MetadataValueType.STRING);
    emailToSend_caption.setSystemReserved(true);
    emailToSend_caption.setUndeletable(true);
    emailToSend_caption.setMultiLingual(false);
    emailToSend_caption.setSortable(true);
    MetadataBuilder emailToSend_createdBy = emailToSendSchema.create("createdBy").setType(MetadataValueType.REFERENCE);
    emailToSend_createdBy.setSystemReserved(true);
    emailToSend_createdBy.setUndeletable(true);
    emailToSend_createdBy.setMultiLingual(false);
    emailToSend_createdBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder emailToSend_createdOn = emailToSendSchema.create("createdOn").setType(MetadataValueType.DATE_TIME);
    emailToSend_createdOn.setSystemReserved(true);
    emailToSend_createdOn.setUndeletable(true);
    emailToSend_createdOn.setMultiLingual(false);
    emailToSend_createdOn.setSortable(true);
    MetadataBuilder emailToSend_deleted = emailToSendSchema.create("deleted").setType(MetadataValueType.BOOLEAN);
    emailToSend_deleted.setSystemReserved(true);
    emailToSend_deleted.setUndeletable(true);
    emailToSend_deleted.setMultiLingual(false);
    MetadataBuilder emailToSend_denyTokens = emailToSendSchema.create("denyTokens").setType(MetadataValueType.STRING);
    emailToSend_denyTokens.setMultivalue(true);
    emailToSend_denyTokens.setSystemReserved(true);
    emailToSend_denyTokens.setUndeletable(true);
    emailToSend_denyTokens.setMultiLingual(false);
    emailToSend_denyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder emailToSend_detachedauthorizations = emailToSendSchema.create("detachedauthorizations").setType(MetadataValueType.BOOLEAN);
    emailToSend_detachedauthorizations.setSystemReserved(true);
    emailToSend_detachedauthorizations.setUndeletable(true);
    emailToSend_detachedauthorizations.setMultiLingual(false);
    MetadataBuilder emailToSend_error = emailToSendSchema.create("error").setType(MetadataValueType.STRING);
    emailToSend_error.setUndeletable(true);
    MetadataBuilder emailToSend_errorOnPhysicalDeletion = emailToSendSchema.create("errorOnPhysicalDeletion").setType(MetadataValueType.BOOLEAN);
    emailToSend_errorOnPhysicalDeletion.setSystemReserved(true);
    emailToSend_errorOnPhysicalDeletion.setUndeletable(true);
    emailToSend_errorOnPhysicalDeletion.setMultiLingual(false);
    MetadataBuilder emailToSend_estimatedSize = emailToSendSchema.create("estimatedSize").setType(MetadataValueType.INTEGER);
    emailToSend_estimatedSize.setSystemReserved(true);
    emailToSend_estimatedSize.setUndeletable(true);
    emailToSend_estimatedSize.setMultiLingual(false);
    MetadataBuilder emailToSend_from = emailToSendSchema.create("from").setType(MetadataValueType.STRUCTURE);
    emailToSend_from.setUndeletable(true);
    emailToSend_from.defineStructureFactory(EmailAddressFactory.class);
    MetadataBuilder emailToSend_hidden = emailToSendSchema.create("hidden").setType(MetadataValueType.BOOLEAN);
    emailToSend_hidden.setSystemReserved(true);
    emailToSend_hidden.setUndeletable(true);
    emailToSend_hidden.setMultiLingual(false);
    MetadataBuilder emailToSend_id = emailToSendSchema.create("id").setType(MetadataValueType.STRING);
    emailToSend_id.setDefaultRequirement(true);
    emailToSend_id.setSystemReserved(true);
    emailToSend_id.setUndeletable(true);
    emailToSend_id.setMultiLingual(false);
    emailToSend_id.setSearchable(true);
    emailToSend_id.setSortable(true);
    emailToSend_id.setUniqueValue(true);
    emailToSend_id.setUnmodifiable(true);
    MetadataBuilder emailToSend_legacyIdentifier = emailToSendSchema.create("legacyIdentifier").setType(MetadataValueType.STRING);
    emailToSend_legacyIdentifier.setDefaultRequirement(true);
    emailToSend_legacyIdentifier.setSystemReserved(true);
    emailToSend_legacyIdentifier.setUndeletable(true);
    emailToSend_legacyIdentifier.setMultiLingual(false);
    emailToSend_legacyIdentifier.setSearchable(true);
    emailToSend_legacyIdentifier.setUniqueValue(true);
    emailToSend_legacyIdentifier.setUnmodifiable(true);
    MetadataBuilder emailToSend_linkedFiles = emailToSendSchema.create("linkedFiles").setType(MetadataValueType.CONTENT);
    emailToSend_linkedFiles.setMultivalue(true);
    emailToSend_linkedFiles.setUndeletable(true);
    emailToSend_linkedFiles.defineStructureFactory(ContentFactory.class);
    MetadataBuilder emailToSend_logicallyDeletedOn = emailToSendSchema.create("logicallyDeletedOn").setType(MetadataValueType.DATE_TIME);
    emailToSend_logicallyDeletedOn.setSystemReserved(true);
    emailToSend_logicallyDeletedOn.setUndeletable(true);
    emailToSend_logicallyDeletedOn.setMultiLingual(false);
    MetadataBuilder emailToSend_manualTokens = emailToSendSchema.create("manualTokens").setType(MetadataValueType.STRING);
    emailToSend_manualTokens.setMultivalue(true);
    emailToSend_manualTokens.setSystemReserved(true);
    emailToSend_manualTokens.setUndeletable(true);
    emailToSend_manualTokens.setMultiLingual(false);
    emailToSend_manualTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder emailToSend_markedForParsing = emailToSendSchema.create("markedForParsing").setType(MetadataValueType.BOOLEAN);
    emailToSend_markedForParsing.setSystemReserved(true);
    emailToSend_markedForParsing.setUndeletable(true);
    emailToSend_markedForParsing.setMultiLingual(false);
    MetadataBuilder emailToSend_markedForPreviewConversion = emailToSendSchema.create("markedForPreviewConversion").setType(MetadataValueType.BOOLEAN);
    emailToSend_markedForPreviewConversion.setSystemReserved(true);
    emailToSend_markedForPreviewConversion.setUndeletable(true);
    emailToSend_markedForPreviewConversion.setMultiLingual(false);
    MetadataBuilder emailToSend_markedForReindexing = emailToSendSchema.create("markedForReindexing").setType(MetadataValueType.BOOLEAN);
    emailToSend_markedForReindexing.setSystemReserved(true);
    emailToSend_markedForReindexing.setUndeletable(true);
    emailToSend_markedForReindexing.setMultiLingual(false);
    MetadataBuilder emailToSend_migrationDataVersion = emailToSendSchema.create("migrationDataVersion").setType(MetadataValueType.NUMBER);
    emailToSend_migrationDataVersion.setSystemReserved(true);
    emailToSend_migrationDataVersion.setUndeletable(true);
    emailToSend_migrationDataVersion.setMultiLingual(false);
    emailToSend_migrationDataVersion.setEssentialInSummary(true);
    MetadataBuilder emailToSend_modifiedBy = emailToSendSchema.create("modifiedBy").setType(MetadataValueType.REFERENCE);
    emailToSend_modifiedBy.setSystemReserved(true);
    emailToSend_modifiedBy.setUndeletable(true);
    emailToSend_modifiedBy.setMultiLingual(false);
    emailToSend_modifiedBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder emailToSend_modifiedOn = emailToSendSchema.create("modifiedOn").setType(MetadataValueType.DATE_TIME);
    emailToSend_modifiedOn.setSystemReserved(true);
    emailToSend_modifiedOn.setUndeletable(true);
    emailToSend_modifiedOn.setMultiLingual(false);
    emailToSend_modifiedOn.setSortable(true);
    MetadataBuilder emailToSend_parameters = emailToSendSchema.create("parameters").setType(MetadataValueType.STRING);
    emailToSend_parameters.setMultivalue(true);
    emailToSend_parameters.setUndeletable(true);
    MetadataBuilder emailToSend_path = emailToSendSchema.create("path").setType(MetadataValueType.STRING);
    emailToSend_path.setMultivalue(true);
    emailToSend_path.setSystemReserved(true);
    emailToSend_path.setUndeletable(true);
    emailToSend_path.setMultiLingual(false);
    MetadataBuilder emailToSend_pathParts = emailToSendSchema.create("pathParts").setType(MetadataValueType.STRING);
    emailToSend_pathParts.setMultivalue(true);
    emailToSend_pathParts.setSystemReserved(true);
    emailToSend_pathParts.setUndeletable(true);
    emailToSend_pathParts.setMultiLingual(false);
    MetadataBuilder emailToSend_principalpath = emailToSendSchema.create("principalpath").setType(MetadataValueType.STRING);
    emailToSend_principalpath.setSystemReserved(true);
    emailToSend_principalpath.setUndeletable(true);
    emailToSend_principalpath.setMultiLingual(false);
    MetadataBuilder emailToSend_removedauthorizations = emailToSendSchema.create("removedauthorizations").setType(MetadataValueType.STRING);
    emailToSend_removedauthorizations.setMultivalue(true);
    emailToSend_removedauthorizations.setSystemReserved(true);
    emailToSend_removedauthorizations.setUndeletable(true);
    emailToSend_removedauthorizations.setMultiLingual(false);
    MetadataBuilder emailToSend_schema = emailToSendSchema.create("schema").setType(MetadataValueType.STRING);
    emailToSend_schema.setDefaultRequirement(true);
    emailToSend_schema.setSystemReserved(true);
    emailToSend_schema.setUndeletable(true);
    emailToSend_schema.setMultiLingual(false);
    MetadataBuilder emailToSend_sendOn = emailToSendSchema.create("sendOn").setType(MetadataValueType.DATE_TIME);
    emailToSend_sendOn.setUndeletable(true);
    MetadataBuilder emailToSend_shareDenyTokens = emailToSendSchema.create("shareDenyTokens").setType(MetadataValueType.STRING);
    emailToSend_shareDenyTokens.setMultivalue(true);
    emailToSend_shareDenyTokens.setSystemReserved(true);
    emailToSend_shareDenyTokens.setUndeletable(true);
    emailToSend_shareDenyTokens.setMultiLingual(false);
    emailToSend_shareDenyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder emailToSend_shareTokens = emailToSendSchema.create("shareTokens").setType(MetadataValueType.STRING);
    emailToSend_shareTokens.setMultivalue(true);
    emailToSend_shareTokens.setSystemReserved(true);
    emailToSend_shareTokens.setUndeletable(true);
    emailToSend_shareTokens.setMultiLingual(false);
    emailToSend_shareTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder emailToSend_subject = emailToSendSchema.create("subject").setType(MetadataValueType.STRING);
    emailToSend_subject.setUndeletable(true);
    MetadataBuilder emailToSend_template = emailToSendSchema.create("template").setType(MetadataValueType.STRING);
    emailToSend_template.setUndeletable(true);
    MetadataBuilder emailToSend_title = emailToSendSchema.create("title").setType(MetadataValueType.STRING);
    emailToSend_title.setUndeletable(true);
    emailToSend_title.setMultiLingual(false);
    emailToSend_title.setSchemaAutocomplete(true);
    emailToSend_title.setSearchable(true);
    MetadataBuilder emailToSend_to = emailToSendSchema.create("to").setType(MetadataValueType.STRUCTURE);
    emailToSend_to.setMultivalue(true);
    emailToSend_to.setUndeletable(true);
    emailToSend_to.defineStructureFactory(EmailAddressFactory.class);
    MetadataBuilder emailToSend_tokens = emailToSendSchema.create("tokens").setType(MetadataValueType.STRING);
    emailToSend_tokens.setMultivalue(true);
    emailToSend_tokens.setSystemReserved(true);
    emailToSend_tokens.setUndeletable(true);
    emailToSend_tokens.setMultiLingual(false);
    MetadataBuilder emailToSend_tokensHierarchy = emailToSendSchema.create("tokensHierarchy").setType(MetadataValueType.STRING);
    emailToSend_tokensHierarchy.setMultivalue(true);
    emailToSend_tokensHierarchy.setSystemReserved(true);
    emailToSend_tokensHierarchy.setUndeletable(true);
    emailToSend_tokensHierarchy.setMultiLingual(false);
    MetadataBuilder emailToSend_tryingCount = emailToSendSchema.create("tryingCount").setType(MetadataValueType.NUMBER);
    emailToSend_tryingCount.setDefaultRequirement(true);
    emailToSend_tryingCount.setUndeletable(true);
    emailToSend_tryingCount.setDefaultValue(0.0);
    MetadataBuilder emailToSend_visibleInTrees = emailToSendSchema.create("visibleInTrees").setType(MetadataValueType.BOOLEAN);
    emailToSend_visibleInTrees.setSystemReserved(true);
    emailToSend_visibleInTrees.setUndeletable(true);
    emailToSend_visibleInTrees.setMultiLingual(false);
  }

  private void createEventSchemaTypeMetadatas(MetadataSchemaTypesBuilder types, MetadataSchemaTypeBuilder eventSchemaType, MetadataSchemaBuilder eventSchema) {
    MetadataBuilder event_allReferences = eventSchema.create("allReferences").setType(MetadataValueType.STRING);
    event_allReferences.setMultivalue(true);
    event_allReferences.setSystemReserved(true);
    event_allReferences.setUndeletable(true);
    event_allReferences.setMultiLingual(false);
    MetadataBuilder event_allRemovedAuths = eventSchema.create("allRemovedAuths").setType(MetadataValueType.STRING);
    event_allRemovedAuths.setMultivalue(true);
    event_allRemovedAuths.setSystemReserved(true);
    event_allRemovedAuths.setUndeletable(true);
    event_allRemovedAuths.setEssential(true);
    event_allRemovedAuths.setMultiLingual(false);
    MetadataBuilder event_attachedAncestors = eventSchema.create("attachedAncestors").setType(MetadataValueType.STRING);
    event_attachedAncestors.setMultivalue(true);
    event_attachedAncestors.setSystemReserved(true);
    event_attachedAncestors.setUndeletable(true);
    event_attachedAncestors.setEssential(true);
    event_attachedAncestors.setMultiLingual(false);
    MetadataBuilder event_autocomplete = eventSchema.create("autocomplete").setType(MetadataValueType.STRING);
    event_autocomplete.setMultivalue(true);
    event_autocomplete.setSystemReserved(true);
    event_autocomplete.setUndeletable(true);
    event_autocomplete.setEssential(true);
    event_autocomplete.setMultiLingual(true);
	  MetadataBuilder event_batchProcessIdentifier = eventSchema.create("batchProcessIdentifier").setType(MetadataValueType.TEXT);
	  event_batchProcessIdentifier.setUndeletable(true);
    MetadataBuilder event_caption = eventSchema.create("caption").setType(MetadataValueType.STRING);
    event_caption.setSystemReserved(true);
    event_caption.setUndeletable(true);
    event_caption.setMultiLingual(false);
    event_caption.setSortable(true);
	  MetadataBuilder event_content = eventSchema.create("content").setType(MetadataValueType.CONTENT);
	  event_content.setUndeletable(true);
	  event_content.defineStructureFactory(ContentFactory.class);
    MetadataBuilder event_createdBy = eventSchema.create("createdBy").setType(MetadataValueType.REFERENCE);
    event_createdBy.setSystemReserved(true);
    event_createdBy.setUndeletable(true);
    event_createdBy.setMultiLingual(false);
    event_createdBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder event_createdOn = eventSchema.create("createdOn").setType(MetadataValueType.DATE_TIME);
    event_createdOn.setSystemReserved(true);
    event_createdOn.setUndeletable(true);
    event_createdOn.setMultiLingual(false);
    event_createdOn.setSortable(true);
    MetadataBuilder event_deleted = eventSchema.create("deleted").setType(MetadataValueType.BOOLEAN);
    event_deleted.setSystemReserved(true);
    event_deleted.setUndeletable(true);
    event_deleted.setMultiLingual(false);
    MetadataBuilder event_delta = eventSchema.create("delta").setType(MetadataValueType.STRING);
    event_delta.setUndeletable(true);
    MetadataBuilder event_denyTokens = eventSchema.create("denyTokens").setType(MetadataValueType.STRING);
    event_denyTokens.setMultivalue(true);
    event_denyTokens.setSystemReserved(true);
    event_denyTokens.setUndeletable(true);
    event_denyTokens.setMultiLingual(false);
    event_denyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder event_detachedauthorizations = eventSchema.create("detachedauthorizations").setType(MetadataValueType.BOOLEAN);
    event_detachedauthorizations.setSystemReserved(true);
    event_detachedauthorizations.setUndeletable(true);
    event_detachedauthorizations.setMultiLingual(false);
    MetadataBuilder event_errorOnPhysicalDeletion = eventSchema.create("errorOnPhysicalDeletion").setType(MetadataValueType.BOOLEAN);
    event_errorOnPhysicalDeletion.setSystemReserved(true);
    event_errorOnPhysicalDeletion.setUndeletable(true);
    event_errorOnPhysicalDeletion.setMultiLingual(false);
    MetadataBuilder event_estimatedSize = eventSchema.create("estimatedSize").setType(MetadataValueType.INTEGER);
    event_estimatedSize.setSystemReserved(true);
    event_estimatedSize.setUndeletable(true);
    event_estimatedSize.setMultiLingual(false);
    MetadataBuilder event_eventPrincipalPath = eventSchema.create("eventPrincipalPath").setType(MetadataValueType.STRING);
    event_eventPrincipalPath.setUndeletable(true);
    MetadataBuilder event_hidden = eventSchema.create("hidden").setType(MetadataValueType.BOOLEAN);
    event_hidden.setSystemReserved(true);
    event_hidden.setUndeletable(true);
    event_hidden.setMultiLingual(false);
    MetadataBuilder event_id = eventSchema.create("id").setType(MetadataValueType.STRING);
    event_id.setDefaultRequirement(true);
    event_id.setSystemReserved(true);
    event_id.setUndeletable(true);
    event_id.setMultiLingual(false);
    event_id.setSearchable(true);
    event_id.setSortable(true);
    event_id.setUniqueValue(true);
    event_id.setUnmodifiable(true);
    MetadataBuilder event_ip = eventSchema.create("ip").setType(MetadataValueType.STRING);
    event_ip.setUndeletable(true);
    MetadataBuilder event_legacyIdentifier = eventSchema.create("legacyIdentifier").setType(MetadataValueType.STRING);
    event_legacyIdentifier.setDefaultRequirement(true);
    event_legacyIdentifier.setSystemReserved(true);
    event_legacyIdentifier.setUndeletable(true);
    event_legacyIdentifier.setMultiLingual(false);
    event_legacyIdentifier.setSearchable(true);
    event_legacyIdentifier.setUniqueValue(true);
    event_legacyIdentifier.setUnmodifiable(true);
    MetadataBuilder event_logicallyDeletedOn = eventSchema.create("logicallyDeletedOn").setType(MetadataValueType.DATE_TIME);
    event_logicallyDeletedOn.setSystemReserved(true);
    event_logicallyDeletedOn.setUndeletable(true);
    event_logicallyDeletedOn.setMultiLingual(false);
    MetadataBuilder event_manualTokens = eventSchema.create("manualTokens").setType(MetadataValueType.STRING);
    event_manualTokens.setMultivalue(true);
    event_manualTokens.setSystemReserved(true);
    event_manualTokens.setUndeletable(true);
    event_manualTokens.setMultiLingual(false);
    event_manualTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder event_markedForParsing = eventSchema.create("markedForParsing").setType(MetadataValueType.BOOLEAN);
    event_markedForParsing.setSystemReserved(true);
    event_markedForParsing.setUndeletable(true);
    event_markedForParsing.setMultiLingual(false);
    MetadataBuilder event_markedForPreviewConversion = eventSchema.create("markedForPreviewConversion").setType(MetadataValueType.BOOLEAN);
    event_markedForPreviewConversion.setSystemReserved(true);
    event_markedForPreviewConversion.setUndeletable(true);
    event_markedForPreviewConversion.setMultiLingual(false);
    MetadataBuilder event_markedForReindexing = eventSchema.create("markedForReindexing").setType(MetadataValueType.BOOLEAN);
    event_markedForReindexing.setSystemReserved(true);
    event_markedForReindexing.setUndeletable(true);
    event_markedForReindexing.setMultiLingual(false);
    MetadataBuilder event_migrationDataVersion = eventSchema.create("migrationDataVersion").setType(MetadataValueType.NUMBER);
    event_migrationDataVersion.setSystemReserved(true);
    event_migrationDataVersion.setUndeletable(true);
    event_migrationDataVersion.setMultiLingual(false);
    event_migrationDataVersion.setEssentialInSummary(true);
    MetadataBuilder event_modifiedBy = eventSchema.create("modifiedBy").setType(MetadataValueType.REFERENCE);
    event_modifiedBy.setSystemReserved(true);
    event_modifiedBy.setUndeletable(true);
    event_modifiedBy.setMultiLingual(false);
    event_modifiedBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder event_modifiedOn = eventSchema.create("modifiedOn").setType(MetadataValueType.DATE_TIME);
    event_modifiedOn.setSystemReserved(true);
    event_modifiedOn.setUndeletable(true);
    event_modifiedOn.setMultiLingual(false);
    event_modifiedOn.setSortable(true);
    MetadataBuilder event_negative = eventSchema.create("negative").setType(MetadataValueType.BOOLEAN);
    event_negative.setUndeletable(true);
    MetadataBuilder event_path = eventSchema.create("path").setType(MetadataValueType.STRING);
    event_path.setMultivalue(true);
    event_path.setSystemReserved(true);
    event_path.setUndeletable(true);
    event_path.setMultiLingual(false);
    MetadataBuilder event_pathParts = eventSchema.create("pathParts").setType(MetadataValueType.STRING);
    event_pathParts.setMultivalue(true);
    event_pathParts.setSystemReserved(true);
    event_pathParts.setUndeletable(true);
    event_pathParts.setMultiLingual(false);
    MetadataBuilder event_permissionDateRange = eventSchema.create("permissionDateRange").setType(MetadataValueType.STRING);
    event_permissionDateRange.setUndeletable(true);
    MetadataBuilder event_permissionRoles = eventSchema.create("permissionRoles").setType(MetadataValueType.STRING);
    event_permissionRoles.setUndeletable(true);
    MetadataBuilder event_permissionUsers = eventSchema.create("permissionUsers").setType(MetadataValueType.STRING);
    event_permissionUsers.setUndeletable(true);
    MetadataBuilder event_principalpath = eventSchema.create("principalpath").setType(MetadataValueType.STRING);
    event_principalpath.setSystemReserved(true);
    event_principalpath.setUndeletable(true);
    event_principalpath.setMultiLingual(false);
    MetadataBuilder event_reason = eventSchema.create("reason").setType(MetadataValueType.STRING);
    event_reason.setUndeletable(true);
    MetadataBuilder event_recordIdentifier = eventSchema.create("recordIdentifier").setType(MetadataValueType.STRING);
    event_recordIdentifier.setUndeletable(true);
    MetadataBuilder event_recordVersion = eventSchema.create("recordVersion").setType(MetadataValueType.STRING);
    MetadataBuilder event_removedauthorizations = eventSchema.create("removedauthorizations").setType(MetadataValueType.STRING);
    event_removedauthorizations.setMultivalue(true);
    event_removedauthorizations.setSystemReserved(true);
    event_removedauthorizations.setUndeletable(true);
    event_removedauthorizations.setMultiLingual(false);
    MetadataBuilder event_schema = eventSchema.create("schema").setType(MetadataValueType.STRING);
    event_schema.setDefaultRequirement(true);
    event_schema.setSystemReserved(true);
    event_schema.setUndeletable(true);
    event_schema.setMultiLingual(false);
    MetadataBuilder event_shareDenyTokens = eventSchema.create("shareDenyTokens").setType(MetadataValueType.STRING);
    event_shareDenyTokens.setMultivalue(true);
    event_shareDenyTokens.setSystemReserved(true);
    event_shareDenyTokens.setUndeletable(true);
    event_shareDenyTokens.setMultiLingual(false);
    event_shareDenyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder event_shareTokens = eventSchema.create("shareTokens").setType(MetadataValueType.STRING);
    event_shareTokens.setMultivalue(true);
    event_shareTokens.setSystemReserved(true);
    event_shareTokens.setUndeletable(true);
    event_shareTokens.setMultiLingual(false);
    event_shareTokens.defineValidators().add(ManualTokenValidator.class);
	  MetadataBuilder event_sharedBy = eventSchema.create("sharedBy").setType(MetadataValueType.STRING);
    MetadataBuilder event_title = eventSchema.create("title").setType(MetadataValueType.STRING);
    event_title.setUndeletable(true);
    event_title.setMultiLingual(false);
    event_title.setSchemaAutocomplete(true);
    event_title.setSearchable(true);
    MetadataBuilder event_tokens = eventSchema.create("tokens").setType(MetadataValueType.STRING);
    event_tokens.setMultivalue(true);
    event_tokens.setSystemReserved(true);
    event_tokens.setUndeletable(true);
    event_tokens.setMultiLingual(false);
    MetadataBuilder event_tokensHierarchy = eventSchema.create("tokensHierarchy").setType(MetadataValueType.STRING);
    event_tokensHierarchy.setMultivalue(true);
    event_tokensHierarchy.setSystemReserved(true);
    event_tokensHierarchy.setUndeletable(true);
    event_tokensHierarchy.setMultiLingual(false);
	  MetadataBuilder event_totalModifiedRecord = eventSchema.create("totalModifiedRecord").setType(MetadataValueType.NUMBER);
	  event_totalModifiedRecord.setUndeletable(true);
    MetadataBuilder event_type = eventSchema.create("type").setType(MetadataValueType.STRING);
    event_type.setUndeletable(true);
    MetadataBuilder event_userRoles = eventSchema.create("userRoles").setType(MetadataValueType.STRING);
    event_userRoles.setUndeletable(true);
    MetadataBuilder event_username = eventSchema.create("username").setType(MetadataValueType.STRING);
    event_username.setUndeletable(true);
    MetadataBuilder event_visibleInTrees = eventSchema.create("visibleInTrees").setType(MetadataValueType.BOOLEAN);
    event_visibleInTrees.setSystemReserved(true);
    event_visibleInTrees.setUndeletable(true);
    event_visibleInTrees.setMultiLingual(false);
  }

  private void createSearchEventSchemaTypeMetadatas(MetadataSchemaTypesBuilder types, MetadataSchemaTypeBuilder searchEventSchemaType, MetadataSchemaBuilder searchEventSchema) {
    MetadataBuilder searchEvent_allReferences = searchEventSchema.create("allReferences").setType(MetadataValueType.STRING);
    searchEvent_allReferences.setMultivalue(true);
    searchEvent_allReferences.setSystemReserved(true);
    searchEvent_allReferences.setUndeletable(true);
    searchEvent_allReferences.setMultiLingual(false);
    MetadataBuilder searchEvent_allRemovedAuths = searchEventSchema.create("allRemovedAuths").setType(MetadataValueType.STRING);
    searchEvent_allRemovedAuths.setMultivalue(true);
    searchEvent_allRemovedAuths.setSystemReserved(true);
    searchEvent_allRemovedAuths.setUndeletable(true);
    searchEvent_allRemovedAuths.setEssential(true);
    searchEvent_allRemovedAuths.setMultiLingual(false);
    MetadataBuilder searchEvent_attachedAncestors = searchEventSchema.create("attachedAncestors").setType(MetadataValueType.STRING);
    searchEvent_attachedAncestors.setMultivalue(true);
    searchEvent_attachedAncestors.setSystemReserved(true);
    searchEvent_attachedAncestors.setUndeletable(true);
    searchEvent_attachedAncestors.setEssential(true);
    searchEvent_attachedAncestors.setMultiLingual(false);
    MetadataBuilder searchEvent_autocomplete = searchEventSchema.create("autocomplete").setType(MetadataValueType.STRING);
    searchEvent_autocomplete.setMultivalue(true);
    searchEvent_autocomplete.setSystemReserved(true);
    searchEvent_autocomplete.setUndeletable(true);
    searchEvent_autocomplete.setEssential(true);
    searchEvent_autocomplete.setMultiLingual(true);
    MetadataBuilder searchEvent_capsule = searchEventSchema.create("capsule").setType(MetadataValueType.REFERENCE);
    searchEvent_capsule.setMultivalue(true);
    searchEvent_capsule.defineReferencesTo(types.getSchemaType("capsule"));
    MetadataBuilder searchEvent_caption = searchEventSchema.create("caption").setType(MetadataValueType.STRING);
    searchEvent_caption.setSystemReserved(true);
    searchEvent_caption.setUndeletable(true);
    searchEvent_caption.setMultiLingual(false);
    searchEvent_caption.setSortable(true);
    MetadataBuilder searchEvent_clickCount = searchEventSchema.create("clickCount").setType(MetadataValueType.NUMBER);
    MetadataBuilder searchEvent_clicks = searchEventSchema.create("clicks").setType(MetadataValueType.STRING);
    searchEvent_clicks.setMultivalue(true);
    MetadataBuilder searchEvent_createdBy = searchEventSchema.create("createdBy").setType(MetadataValueType.REFERENCE);
    searchEvent_createdBy.setSystemReserved(true);
    searchEvent_createdBy.setUndeletable(true);
    searchEvent_createdBy.setMultiLingual(false);
    searchEvent_createdBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder searchEvent_createdOn = searchEventSchema.create("createdOn").setType(MetadataValueType.DATE_TIME);
    searchEvent_createdOn.setSystemReserved(true);
    searchEvent_createdOn.setUndeletable(true);
    searchEvent_createdOn.setMultiLingual(false);
    searchEvent_createdOn.setSortable(true);
    MetadataBuilder searchEvent_deleted = searchEventSchema.create("deleted").setType(MetadataValueType.BOOLEAN);
    searchEvent_deleted.setSystemReserved(true);
    searchEvent_deleted.setUndeletable(true);
    searchEvent_deleted.setMultiLingual(false);
    MetadataBuilder searchEvent_denyTokens = searchEventSchema.create("denyTokens").setType(MetadataValueType.STRING);
    searchEvent_denyTokens.setMultivalue(true);
    searchEvent_denyTokens.setSystemReserved(true);
    searchEvent_denyTokens.setUndeletable(true);
    searchEvent_denyTokens.setMultiLingual(false);
    searchEvent_denyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder searchEvent_detachedauthorizations = searchEventSchema.create("detachedauthorizations").setType(MetadataValueType.BOOLEAN);
    searchEvent_detachedauthorizations.setSystemReserved(true);
    searchEvent_detachedauthorizations.setUndeletable(true);
    searchEvent_detachedauthorizations.setMultiLingual(false);
    MetadataBuilder searchEvent_dwellTime = searchEventSchema.create("dwellTime").setType(MetadataValueType.NUMBER);
    searchEvent_dwellTime.setDefaultValue(0);
    MetadataBuilder searchEvent_errorOnPhysicalDeletion = searchEventSchema.create("errorOnPhysicalDeletion").setType(MetadataValueType.BOOLEAN);
    searchEvent_errorOnPhysicalDeletion.setSystemReserved(true);
    searchEvent_errorOnPhysicalDeletion.setUndeletable(true);
    searchEvent_errorOnPhysicalDeletion.setMultiLingual(false);
    MetadataBuilder searchEvent_estimatedSize = searchEventSchema.create("estimatedSize").setType(MetadataValueType.INTEGER);
    searchEvent_estimatedSize.setSystemReserved(true);
    searchEvent_estimatedSize.setUndeletable(true);
    searchEvent_estimatedSize.setMultiLingual(false);
    MetadataBuilder searchEvent_hidden = searchEventSchema.create("hidden").setType(MetadataValueType.BOOLEAN);
    searchEvent_hidden.setSystemReserved(true);
    searchEvent_hidden.setUndeletable(true);
    searchEvent_hidden.setMultiLingual(false);
    MetadataBuilder searchEvent_id = searchEventSchema.create("id").setType(MetadataValueType.STRING);
    searchEvent_id.setDefaultRequirement(true);
    searchEvent_id.setSystemReserved(true);
    searchEvent_id.setUndeletable(true);
    searchEvent_id.setMultiLingual(false);
    searchEvent_id.setSearchable(true);
    searchEvent_id.setSortable(true);
    searchEvent_id.setUniqueValue(true);
    searchEvent_id.setUnmodifiable(true);
    MetadataBuilder searchEvent_lastPageNavigation = searchEventSchema.create("lastPageNavigation").setType(MetadataValueType.NUMBER);
    MetadataBuilder searchEvent_legacyIdentifier = searchEventSchema.create("legacyIdentifier").setType(MetadataValueType.STRING);
    searchEvent_legacyIdentifier.setDefaultRequirement(true);
    searchEvent_legacyIdentifier.setSystemReserved(true);
    searchEvent_legacyIdentifier.setUndeletable(true);
    searchEvent_legacyIdentifier.setMultiLingual(false);
    searchEvent_legacyIdentifier.setSearchable(true);
    searchEvent_legacyIdentifier.setUniqueValue(true);
    searchEvent_legacyIdentifier.setUnmodifiable(true);
    MetadataBuilder searchEvent_logicallyDeletedOn = searchEventSchema.create("logicallyDeletedOn").setType(MetadataValueType.DATE_TIME);
    searchEvent_logicallyDeletedOn.setSystemReserved(true);
    searchEvent_logicallyDeletedOn.setUndeletable(true);
    searchEvent_logicallyDeletedOn.setMultiLingual(false);
    MetadataBuilder searchEvent_manualTokens = searchEventSchema.create("manualTokens").setType(MetadataValueType.STRING);
    searchEvent_manualTokens.setMultivalue(true);
    searchEvent_manualTokens.setSystemReserved(true);
    searchEvent_manualTokens.setUndeletable(true);
    searchEvent_manualTokens.setMultiLingual(false);
    searchEvent_manualTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder searchEvent_markedForParsing = searchEventSchema.create("markedForParsing").setType(MetadataValueType.BOOLEAN);
    searchEvent_markedForParsing.setSystemReserved(true);
    searchEvent_markedForParsing.setUndeletable(true);
    searchEvent_markedForParsing.setMultiLingual(false);
    MetadataBuilder searchEvent_markedForPreviewConversion = searchEventSchema.create("markedForPreviewConversion").setType(MetadataValueType.BOOLEAN);
    searchEvent_markedForPreviewConversion.setSystemReserved(true);
    searchEvent_markedForPreviewConversion.setUndeletable(true);
    searchEvent_markedForPreviewConversion.setMultiLingual(false);
    MetadataBuilder searchEvent_markedForReindexing = searchEventSchema.create("markedForReindexing").setType(MetadataValueType.BOOLEAN);
    searchEvent_markedForReindexing.setSystemReserved(true);
    searchEvent_markedForReindexing.setUndeletable(true);
    searchEvent_markedForReindexing.setMultiLingual(false);
    MetadataBuilder searchEvent_migrationDataVersion = searchEventSchema.create("migrationDataVersion").setType(MetadataValueType.NUMBER);
    searchEvent_migrationDataVersion.setSystemReserved(true);
    searchEvent_migrationDataVersion.setUndeletable(true);
    searchEvent_migrationDataVersion.setMultiLingual(false);
    searchEvent_migrationDataVersion.setEssentialInSummary(true);
    MetadataBuilder searchEvent_modifiedBy = searchEventSchema.create("modifiedBy").setType(MetadataValueType.REFERENCE);
    searchEvent_modifiedBy.setSystemReserved(true);
    searchEvent_modifiedBy.setUndeletable(true);
    searchEvent_modifiedBy.setMultiLingual(false);
    searchEvent_modifiedBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder searchEvent_modifiedOn = searchEventSchema.create("modifiedOn").setType(MetadataValueType.DATE_TIME);
    searchEvent_modifiedOn.setSystemReserved(true);
    searchEvent_modifiedOn.setUndeletable(true);
    searchEvent_modifiedOn.setMultiLingual(false);
    searchEvent_modifiedOn.setSortable(true);
    MetadataBuilder searchEvent_numFound = searchEventSchema.create("numFound").setType(MetadataValueType.NUMBER);
    MetadataBuilder searchEvent_originalQuery = searchEventSchema.create("originalQuery").setType(MetadataValueType.STRING);
    MetadataBuilder searchEvent_pageNavigationCount = searchEventSchema.create("pageNavigationCount").setType(MetadataValueType.NUMBER);
    MetadataBuilder searchEvent_params = searchEventSchema.create("params").setType(MetadataValueType.STRING);
    searchEvent_params.setMultivalue(true);
    MetadataBuilder searchEvent_path = searchEventSchema.create("path").setType(MetadataValueType.STRING);
    searchEvent_path.setMultivalue(true);
    searchEvent_path.setSystemReserved(true);
    searchEvent_path.setUndeletable(true);
    searchEvent_path.setMultiLingual(false);
    MetadataBuilder searchEvent_pathParts = searchEventSchema.create("pathParts").setType(MetadataValueType.STRING);
    searchEvent_pathParts.setMultivalue(true);
    searchEvent_pathParts.setSystemReserved(true);
    searchEvent_pathParts.setUndeletable(true);
    searchEvent_pathParts.setMultiLingual(false);
    MetadataBuilder searchEvent_principalpath = searchEventSchema.create("principalpath").setType(MetadataValueType.STRING);
    searchEvent_principalpath.setSystemReserved(true);
    searchEvent_principalpath.setUndeletable(true);
    searchEvent_principalpath.setMultiLingual(false);
    MetadataBuilder searchEvent_qTime = searchEventSchema.create("qTime").setType(MetadataValueType.NUMBER);
    MetadataBuilder searchEvent_query = searchEventSchema.create("query").setType(MetadataValueType.STRING);
    MetadataBuilder searchEvent_removedauthorizations = searchEventSchema.create("removedauthorizations").setType(MetadataValueType.STRING);
    searchEvent_removedauthorizations.setMultivalue(true);
    searchEvent_removedauthorizations.setSystemReserved(true);
    searchEvent_removedauthorizations.setUndeletable(true);
    searchEvent_removedauthorizations.setMultiLingual(false);
    MetadataBuilder searchEvent_schema = searchEventSchema.create("schema").setType(MetadataValueType.STRING);
    searchEvent_schema.setDefaultRequirement(true);
    searchEvent_schema.setSystemReserved(true);
    searchEvent_schema.setUndeletable(true);
    searchEvent_schema.setMultiLingual(false);
    MetadataBuilder searchEvent_shareDenyTokens = searchEventSchema.create("shareDenyTokens").setType(MetadataValueType.STRING);
    searchEvent_shareDenyTokens.setMultivalue(true);
    searchEvent_shareDenyTokens.setSystemReserved(true);
    searchEvent_shareDenyTokens.setUndeletable(true);
    searchEvent_shareDenyTokens.setMultiLingual(false);
    searchEvent_shareDenyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder searchEvent_shareTokens = searchEventSchema.create("shareTokens").setType(MetadataValueType.STRING);
    searchEvent_shareTokens.setMultivalue(true);
    searchEvent_shareTokens.setSystemReserved(true);
    searchEvent_shareTokens.setUndeletable(true);
    searchEvent_shareTokens.setMultiLingual(false);
    searchEvent_shareTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder searchEvent_title = searchEventSchema.create("title").setType(MetadataValueType.STRING);
    searchEvent_title.setUndeletable(true);
    searchEvent_title.setMultiLingual(false);
    searchEvent_title.setSchemaAutocomplete(true);
    searchEvent_title.setSearchable(true);
    MetadataBuilder searchEvent_tokens = searchEventSchema.create("tokens").setType(MetadataValueType.STRING);
    searchEvent_tokens.setMultivalue(true);
    searchEvent_tokens.setSystemReserved(true);
    searchEvent_tokens.setUndeletable(true);
    searchEvent_tokens.setMultiLingual(false);
    MetadataBuilder searchEvent_tokensHierarchy = searchEventSchema.create("tokensHierarchy").setType(MetadataValueType.STRING);
    searchEvent_tokensHierarchy.setMultivalue(true);
    searchEvent_tokensHierarchy.setSystemReserved(true);
    searchEvent_tokensHierarchy.setUndeletable(true);
    searchEvent_tokensHierarchy.setMultiLingual(false);
    MetadataBuilder searchEvent_username = searchEventSchema.create("username").setType(MetadataValueType.STRING);
    MetadataBuilder searchEvent_visibleInTrees = searchEventSchema.create("visibleInTrees").setType(MetadataValueType.BOOLEAN);
    searchEvent_visibleInTrees.setSystemReserved(true);
    searchEvent_visibleInTrees.setUndeletable(true);
    searchEvent_visibleInTrees.setMultiLingual(false);
  }

  private void createTemporaryRecordSchemaTypeMetadatas(MetadataSchemaTypesBuilder types, MetadataSchemaTypeBuilder temporaryRecordSchemaType, MetadataSchemaBuilder temporaryRecord_batchProcessReportSchema, MetadataSchemaBuilder temporaryRecord_exportAuditSchema, MetadataSchemaBuilder temporaryRecord_importAuditSchema, MetadataSchemaBuilder temporaryRecord_scriptReportSchema, MetadataSchemaBuilder temporaryRecordSchema) {
    MetadataBuilder temporaryRecord_batchProcessReport_errors = temporaryRecord_batchProcessReportSchema.create("errors").setType(MetadataValueType.TEXT);
    temporaryRecord_batchProcessReport_errors.setSystemReserved(true);
    temporaryRecord_batchProcessReport_errors.setUndeletable(true);
    MetadataBuilder temporaryRecord_batchProcessReport_linkedBatchProcess = temporaryRecord_batchProcessReportSchema.create("linkedBatchProcess").setType(MetadataValueType.STRING);
    temporaryRecord_batchProcessReport_linkedBatchProcess.setSystemReserved(true);
    temporaryRecord_batchProcessReport_linkedBatchProcess.setUndeletable(true);
    temporaryRecord_batchProcessReport_linkedBatchProcess.setUniqueValue(true);
    MetadataBuilder temporaryRecord_batchProcessReport_skippedRecords = temporaryRecord_batchProcessReportSchema.create("skippedRecords").setType(MetadataValueType.STRING);
    temporaryRecord_batchProcessReport_skippedRecords.setMultivalue(true);
    temporaryRecord_batchProcessReport_skippedRecords.setSystemReserved(true);
    temporaryRecord_batchProcessReport_skippedRecords.setUndeletable(true);
    MetadataBuilder temporaryRecord_exportAudit_endDate = temporaryRecord_exportAuditSchema.create("endDate").setType(MetadataValueType.DATE_TIME);
    temporaryRecord_exportAudit_endDate.setSystemReserved(true);
    temporaryRecord_exportAudit_endDate.setUndeletable(true);
    MetadataBuilder temporaryRecord_importAudit_endDate = temporaryRecord_importAuditSchema.create("endDate").setType(MetadataValueType.DATE_TIME);
    temporaryRecord_importAudit_endDate.setSystemReserved(true);
    temporaryRecord_importAudit_endDate.setUndeletable(true);
    MetadataBuilder temporaryRecord_importAudit_errors = temporaryRecord_importAuditSchema.create("errors").setType(MetadataValueType.TEXT);
    temporaryRecord_importAudit_errors.setSystemReserved(true);
    temporaryRecord_importAudit_errors.setUndeletable(true);
    MetadataBuilder temporaryRecord_allReferences = temporaryRecordSchema.create("allReferences").setType(MetadataValueType.STRING);
    temporaryRecord_allReferences.setMultivalue(true);
    temporaryRecord_allReferences.setSystemReserved(true);
    temporaryRecord_allReferences.setUndeletable(true);
    temporaryRecord_allReferences.setMultiLingual(false);
    MetadataBuilder temporaryRecord_allRemovedAuths = temporaryRecordSchema.create("allRemovedAuths").setType(MetadataValueType.STRING);
    temporaryRecord_allRemovedAuths.setMultivalue(true);
    temporaryRecord_allRemovedAuths.setSystemReserved(true);
    temporaryRecord_allRemovedAuths.setUndeletable(true);
    temporaryRecord_allRemovedAuths.setEssential(true);
    temporaryRecord_allRemovedAuths.setMultiLingual(false);
    MetadataBuilder temporaryRecord_attachedAncestors = temporaryRecordSchema.create("attachedAncestors").setType(MetadataValueType.STRING);
    temporaryRecord_attachedAncestors.setMultivalue(true);
    temporaryRecord_attachedAncestors.setSystemReserved(true);
    temporaryRecord_attachedAncestors.setUndeletable(true);
    temporaryRecord_attachedAncestors.setEssential(true);
    temporaryRecord_attachedAncestors.setMultiLingual(false);
    MetadataBuilder temporaryRecord_autocomplete = temporaryRecordSchema.create("autocomplete").setType(MetadataValueType.STRING);
    temporaryRecord_autocomplete.setMultivalue(true);
    temporaryRecord_autocomplete.setSystemReserved(true);
    temporaryRecord_autocomplete.setUndeletable(true);
    temporaryRecord_autocomplete.setEssential(true);
    temporaryRecord_autocomplete.setMultiLingual(true);
    MetadataBuilder temporaryRecord_caption = temporaryRecordSchema.create("caption").setType(MetadataValueType.STRING);
    temporaryRecord_caption.setSystemReserved(true);
    temporaryRecord_caption.setUndeletable(true);
    temporaryRecord_caption.setMultiLingual(false);
    temporaryRecord_caption.setSortable(true);
    MetadataBuilder temporaryRecord_content = temporaryRecordSchema.create("content").setType(MetadataValueType.CONTENT);
    temporaryRecord_content.setSystemReserved(true);
    temporaryRecord_content.setUndeletable(true);
    temporaryRecord_content.defineStructureFactory(ContentFactory.class);
    MetadataBuilder temporaryRecord_createdBy = temporaryRecordSchema.create("createdBy").setType(MetadataValueType.REFERENCE);
    temporaryRecord_createdBy.setSystemReserved(true);
    temporaryRecord_createdBy.setUndeletable(true);
    temporaryRecord_createdBy.setMultiLingual(false);
    temporaryRecord_createdBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder temporaryRecord_createdOn = temporaryRecordSchema.create("createdOn").setType(MetadataValueType.DATE_TIME);
    temporaryRecord_createdOn.setSystemReserved(true);
    temporaryRecord_createdOn.setUndeletable(true);
    temporaryRecord_createdOn.setMultiLingual(false);
    temporaryRecord_createdOn.setSortable(true);
    MetadataBuilder temporaryRecord_daysBeforeDestruction = temporaryRecordSchema.create("daysBeforeDestruction").setType(MetadataValueType.NUMBER);
    temporaryRecord_daysBeforeDestruction.setUndeletable(true);
    temporaryRecord_daysBeforeDestruction.setDefaultValue(7.0);
    temporaryRecord_daysBeforeDestruction.defineValidators().add(TemporaryRecordValidator.class);
    MetadataBuilder temporaryRecord_deleted = temporaryRecordSchema.create("deleted").setType(MetadataValueType.BOOLEAN);
    temporaryRecord_deleted.setSystemReserved(true);
    temporaryRecord_deleted.setUndeletable(true);
    temporaryRecord_deleted.setMultiLingual(false);
    MetadataBuilder temporaryRecord_denyTokens = temporaryRecordSchema.create("denyTokens").setType(MetadataValueType.STRING);
    temporaryRecord_denyTokens.setMultivalue(true);
    temporaryRecord_denyTokens.setSystemReserved(true);
    temporaryRecord_denyTokens.setUndeletable(true);
    temporaryRecord_denyTokens.setMultiLingual(false);
    temporaryRecord_denyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder temporaryRecord_destructionDate = temporaryRecordSchema.create("destructionDate").setType(MetadataValueType.DATE_TIME);
    temporaryRecord_destructionDate.setSystemReserved(true);
    temporaryRecord_destructionDate.setUndeletable(true);
    MetadataBuilder temporaryRecord_detachedauthorizations = temporaryRecordSchema.create("detachedauthorizations").setType(MetadataValueType.BOOLEAN);
    temporaryRecord_detachedauthorizations.setSystemReserved(true);
    temporaryRecord_detachedauthorizations.setUndeletable(true);
    temporaryRecord_detachedauthorizations.setMultiLingual(false);
    MetadataBuilder temporaryRecord_errorOnPhysicalDeletion = temporaryRecordSchema.create("errorOnPhysicalDeletion").setType(MetadataValueType.BOOLEAN);
    temporaryRecord_errorOnPhysicalDeletion.setSystemReserved(true);
    temporaryRecord_errorOnPhysicalDeletion.setUndeletable(true);
    temporaryRecord_errorOnPhysicalDeletion.setMultiLingual(false);
    MetadataBuilder temporaryRecord_estimatedSize = temporaryRecordSchema.create("estimatedSize").setType(MetadataValueType.INTEGER);
    temporaryRecord_estimatedSize.setSystemReserved(true);
    temporaryRecord_estimatedSize.setUndeletable(true);
    temporaryRecord_estimatedSize.setMultiLingual(false);
    MetadataBuilder temporaryRecord_hidden = temporaryRecordSchema.create("hidden").setType(MetadataValueType.BOOLEAN);
    temporaryRecord_hidden.setSystemReserved(true);
    temporaryRecord_hidden.setUndeletable(true);
    temporaryRecord_hidden.setMultiLingual(false);
    MetadataBuilder temporaryRecord_id = temporaryRecordSchema.create("id").setType(MetadataValueType.STRING);
    temporaryRecord_id.setDefaultRequirement(true);
    temporaryRecord_id.setSystemReserved(true);
    temporaryRecord_id.setUndeletable(true);
    temporaryRecord_id.setMultiLingual(false);
    temporaryRecord_id.setSearchable(true);
    temporaryRecord_id.setSortable(true);
    temporaryRecord_id.setUniqueValue(true);
    temporaryRecord_id.setUnmodifiable(true);
    MetadataBuilder temporaryRecord_legacyIdentifier = temporaryRecordSchema.create("legacyIdentifier").setType(MetadataValueType.STRING);
    temporaryRecord_legacyIdentifier.setDefaultRequirement(true);
    temporaryRecord_legacyIdentifier.setSystemReserved(true);
    temporaryRecord_legacyIdentifier.setUndeletable(true);
    temporaryRecord_legacyIdentifier.setMultiLingual(false);
    temporaryRecord_legacyIdentifier.setSearchable(true);
    temporaryRecord_legacyIdentifier.setUniqueValue(true);
    temporaryRecord_legacyIdentifier.setUnmodifiable(true);
    MetadataBuilder temporaryRecord_logicallyDeletedOn = temporaryRecordSchema.create("logicallyDeletedOn").setType(MetadataValueType.DATE_TIME);
    temporaryRecord_logicallyDeletedOn.setSystemReserved(true);
    temporaryRecord_logicallyDeletedOn.setUndeletable(true);
    temporaryRecord_logicallyDeletedOn.setMultiLingual(false);
    MetadataBuilder temporaryRecord_manualTokens = temporaryRecordSchema.create("manualTokens").setType(MetadataValueType.STRING);
    temporaryRecord_manualTokens.setMultivalue(true);
    temporaryRecord_manualTokens.setSystemReserved(true);
    temporaryRecord_manualTokens.setUndeletable(true);
    temporaryRecord_manualTokens.setMultiLingual(false);
    temporaryRecord_manualTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder temporaryRecord_markedForParsing = temporaryRecordSchema.create("markedForParsing").setType(MetadataValueType.BOOLEAN);
    temporaryRecord_markedForParsing.setSystemReserved(true);
    temporaryRecord_markedForParsing.setUndeletable(true);
    temporaryRecord_markedForParsing.setMultiLingual(false);
    MetadataBuilder temporaryRecord_markedForPreviewConversion = temporaryRecordSchema.create("markedForPreviewConversion").setType(MetadataValueType.BOOLEAN);
    temporaryRecord_markedForPreviewConversion.setSystemReserved(true);
    temporaryRecord_markedForPreviewConversion.setUndeletable(true);
    temporaryRecord_markedForPreviewConversion.setMultiLingual(false);
    MetadataBuilder temporaryRecord_markedForReindexing = temporaryRecordSchema.create("markedForReindexing").setType(MetadataValueType.BOOLEAN);
    temporaryRecord_markedForReindexing.setSystemReserved(true);
    temporaryRecord_markedForReindexing.setUndeletable(true);
    temporaryRecord_markedForReindexing.setMultiLingual(false);
    MetadataBuilder temporaryRecord_migrationDataVersion = temporaryRecordSchema.create("migrationDataVersion").setType(MetadataValueType.NUMBER);
    temporaryRecord_migrationDataVersion.setSystemReserved(true);
    temporaryRecord_migrationDataVersion.setUndeletable(true);
    temporaryRecord_migrationDataVersion.setMultiLingual(false);
    temporaryRecord_migrationDataVersion.setEssentialInSummary(true);
    MetadataBuilder temporaryRecord_modifiedBy = temporaryRecordSchema.create("modifiedBy").setType(MetadataValueType.REFERENCE);
    temporaryRecord_modifiedBy.setSystemReserved(true);
    temporaryRecord_modifiedBy.setUndeletable(true);
    temporaryRecord_modifiedBy.setMultiLingual(false);
    temporaryRecord_modifiedBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder temporaryRecord_modifiedOn = temporaryRecordSchema.create("modifiedOn").setType(MetadataValueType.DATE_TIME);
    temporaryRecord_modifiedOn.setSystemReserved(true);
    temporaryRecord_modifiedOn.setUndeletable(true);
    temporaryRecord_modifiedOn.setMultiLingual(false);
    temporaryRecord_modifiedOn.setSortable(true);
    MetadataBuilder temporaryRecord_path = temporaryRecordSchema.create("path").setType(MetadataValueType.STRING);
    temporaryRecord_path.setMultivalue(true);
    temporaryRecord_path.setSystemReserved(true);
    temporaryRecord_path.setUndeletable(true);
    temporaryRecord_path.setMultiLingual(false);
    MetadataBuilder temporaryRecord_pathParts = temporaryRecordSchema.create("pathParts").setType(MetadataValueType.STRING);
    temporaryRecord_pathParts.setMultivalue(true);
    temporaryRecord_pathParts.setSystemReserved(true);
    temporaryRecord_pathParts.setUndeletable(true);
    temporaryRecord_pathParts.setMultiLingual(false);
    MetadataBuilder temporaryRecord_principalpath = temporaryRecordSchema.create("principalpath").setType(MetadataValueType.STRING);
    temporaryRecord_principalpath.setSystemReserved(true);
    temporaryRecord_principalpath.setUndeletable(true);
    temporaryRecord_principalpath.setMultiLingual(false);
    MetadataBuilder temporaryRecord_removedauthorizations = temporaryRecordSchema.create("removedauthorizations").setType(MetadataValueType.STRING);
    temporaryRecord_removedauthorizations.setMultivalue(true);
    temporaryRecord_removedauthorizations.setSystemReserved(true);
    temporaryRecord_removedauthorizations.setUndeletable(true);
    temporaryRecord_removedauthorizations.setMultiLingual(false);
    MetadataBuilder temporaryRecord_schema = temporaryRecordSchema.create("schema").setType(MetadataValueType.STRING);
    temporaryRecord_schema.setDefaultRequirement(true);
    temporaryRecord_schema.setSystemReserved(true);
    temporaryRecord_schema.setUndeletable(true);
    temporaryRecord_schema.setMultiLingual(false);
    MetadataBuilder temporaryRecord_shareDenyTokens = temporaryRecordSchema.create("shareDenyTokens").setType(MetadataValueType.STRING);
    temporaryRecord_shareDenyTokens.setMultivalue(true);
    temporaryRecord_shareDenyTokens.setSystemReserved(true);
    temporaryRecord_shareDenyTokens.setUndeletable(true);
    temporaryRecord_shareDenyTokens.setMultiLingual(false);
    temporaryRecord_shareDenyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder temporaryRecord_shareTokens = temporaryRecordSchema.create("shareTokens").setType(MetadataValueType.STRING);
    temporaryRecord_shareTokens.setMultivalue(true);
    temporaryRecord_shareTokens.setSystemReserved(true);
    temporaryRecord_shareTokens.setUndeletable(true);
    temporaryRecord_shareTokens.setMultiLingual(false);
    temporaryRecord_shareTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder temporaryRecord_title = temporaryRecordSchema.create("title").setType(MetadataValueType.STRING);
    temporaryRecord_title.setUndeletable(true);
    temporaryRecord_title.setMultiLingual(false);
    temporaryRecord_title.setSchemaAutocomplete(true);
    temporaryRecord_title.setSearchable(true);
    MetadataBuilder temporaryRecord_tokens = temporaryRecordSchema.create("tokens").setType(MetadataValueType.STRING);
    temporaryRecord_tokens.setMultivalue(true);
    temporaryRecord_tokens.setSystemReserved(true);
    temporaryRecord_tokens.setUndeletable(true);
    temporaryRecord_tokens.setMultiLingual(false);
    MetadataBuilder temporaryRecord_tokensHierarchy = temporaryRecordSchema.create("tokensHierarchy").setType(MetadataValueType.STRING);
    temporaryRecord_tokensHierarchy.setMultivalue(true);
    temporaryRecord_tokensHierarchy.setSystemReserved(true);
    temporaryRecord_tokensHierarchy.setUndeletable(true);
    temporaryRecord_tokensHierarchy.setMultiLingual(false);
    MetadataBuilder temporaryRecord_visibleInTrees = temporaryRecordSchema.create("visibleInTrees").setType(MetadataValueType.BOOLEAN);
    temporaryRecord_visibleInTrees.setSystemReserved(true);
    temporaryRecord_visibleInTrees.setUndeletable(true);
    temporaryRecord_visibleInTrees.setMultiLingual(false);
    MetadataBuilder temporaryRecord_batchProcessReport_allReferences = temporaryRecord_batchProcessReportSchema.get("allReferences");
    MetadataBuilder temporaryRecord_batchProcessReport_allRemovedAuths = temporaryRecord_batchProcessReportSchema.get("allRemovedAuths");
    MetadataBuilder temporaryRecord_batchProcessReport_attachedAncestors = temporaryRecord_batchProcessReportSchema.get("attachedAncestors");
    MetadataBuilder temporaryRecord_batchProcessReport_autocomplete = temporaryRecord_batchProcessReportSchema.get("autocomplete");
    MetadataBuilder temporaryRecord_batchProcessReport_caption = temporaryRecord_batchProcessReportSchema.get("caption");
    MetadataBuilder temporaryRecord_batchProcessReport_content = temporaryRecord_batchProcessReportSchema.get("content");
    MetadataBuilder temporaryRecord_batchProcessReport_createdBy = temporaryRecord_batchProcessReportSchema.get("createdBy");
    MetadataBuilder temporaryRecord_batchProcessReport_createdOn = temporaryRecord_batchProcessReportSchema.get("createdOn");
    MetadataBuilder temporaryRecord_batchProcessReport_daysBeforeDestruction = temporaryRecord_batchProcessReportSchema.get("daysBeforeDestruction");
    MetadataBuilder temporaryRecord_batchProcessReport_deleted = temporaryRecord_batchProcessReportSchema.get("deleted");
    MetadataBuilder temporaryRecord_batchProcessReport_denyTokens = temporaryRecord_batchProcessReportSchema.get("denyTokens");
    MetadataBuilder temporaryRecord_batchProcessReport_destructionDate = temporaryRecord_batchProcessReportSchema.get("destructionDate");
    MetadataBuilder temporaryRecord_batchProcessReport_detachedauthorizations = temporaryRecord_batchProcessReportSchema.get("detachedauthorizations");
    MetadataBuilder temporaryRecord_batchProcessReport_errorOnPhysicalDeletion = temporaryRecord_batchProcessReportSchema.get("errorOnPhysicalDeletion");
    MetadataBuilder temporaryRecord_batchProcessReport_estimatedSize = temporaryRecord_batchProcessReportSchema.get("estimatedSize");
    MetadataBuilder temporaryRecord_batchProcessReport_hidden = temporaryRecord_batchProcessReportSchema.get("hidden");
    MetadataBuilder temporaryRecord_batchProcessReport_id = temporaryRecord_batchProcessReportSchema.get("id");
    MetadataBuilder temporaryRecord_batchProcessReport_legacyIdentifier = temporaryRecord_batchProcessReportSchema.get("legacyIdentifier");
    MetadataBuilder temporaryRecord_batchProcessReport_logicallyDeletedOn = temporaryRecord_batchProcessReportSchema.get("logicallyDeletedOn");
    MetadataBuilder temporaryRecord_batchProcessReport_manualTokens = temporaryRecord_batchProcessReportSchema.get("manualTokens");
    MetadataBuilder temporaryRecord_batchProcessReport_markedForParsing = temporaryRecord_batchProcessReportSchema.get("markedForParsing");
    MetadataBuilder temporaryRecord_batchProcessReport_markedForPreviewConversion = temporaryRecord_batchProcessReportSchema.get("markedForPreviewConversion");
    MetadataBuilder temporaryRecord_batchProcessReport_markedForReindexing = temporaryRecord_batchProcessReportSchema.get("markedForReindexing");
    MetadataBuilder temporaryRecord_batchProcessReport_migrationDataVersion = temporaryRecord_batchProcessReportSchema.get("migrationDataVersion");
    MetadataBuilder temporaryRecord_batchProcessReport_modifiedBy = temporaryRecord_batchProcessReportSchema.get("modifiedBy");
    MetadataBuilder temporaryRecord_batchProcessReport_modifiedOn = temporaryRecord_batchProcessReportSchema.get("modifiedOn");
    MetadataBuilder temporaryRecord_batchProcessReport_path = temporaryRecord_batchProcessReportSchema.get("path");
    MetadataBuilder temporaryRecord_batchProcessReport_pathParts = temporaryRecord_batchProcessReportSchema.get("pathParts");
    MetadataBuilder temporaryRecord_batchProcessReport_principalpath = temporaryRecord_batchProcessReportSchema.get("principalpath");
    MetadataBuilder temporaryRecord_batchProcessReport_removedauthorizations = temporaryRecord_batchProcessReportSchema.get("removedauthorizations");
    MetadataBuilder temporaryRecord_batchProcessReport_schema = temporaryRecord_batchProcessReportSchema.get("schema");
    MetadataBuilder temporaryRecord_batchProcessReport_shareDenyTokens = temporaryRecord_batchProcessReportSchema.get("shareDenyTokens");
    MetadataBuilder temporaryRecord_batchProcessReport_shareTokens = temporaryRecord_batchProcessReportSchema.get("shareTokens");
    MetadataBuilder temporaryRecord_batchProcessReport_title = temporaryRecord_batchProcessReportSchema.get("title");
    MetadataBuilder temporaryRecord_batchProcessReport_tokens = temporaryRecord_batchProcessReportSchema.get("tokens");
    MetadataBuilder temporaryRecord_batchProcessReport_tokensHierarchy = temporaryRecord_batchProcessReportSchema.get("tokensHierarchy");
    MetadataBuilder temporaryRecord_batchProcessReport_visibleInTrees = temporaryRecord_batchProcessReportSchema.get("visibleInTrees");
    MetadataBuilder temporaryRecord_exportAudit_allReferences = temporaryRecord_exportAuditSchema.get("allReferences");
    MetadataBuilder temporaryRecord_exportAudit_allRemovedAuths = temporaryRecord_exportAuditSchema.get("allRemovedAuths");
    MetadataBuilder temporaryRecord_exportAudit_attachedAncestors = temporaryRecord_exportAuditSchema.get("attachedAncestors");
    MetadataBuilder temporaryRecord_exportAudit_autocomplete = temporaryRecord_exportAuditSchema.get("autocomplete");
    MetadataBuilder temporaryRecord_exportAudit_caption = temporaryRecord_exportAuditSchema.get("caption");
    MetadataBuilder temporaryRecord_exportAudit_content = temporaryRecord_exportAuditSchema.get("content");
    MetadataBuilder temporaryRecord_exportAudit_createdBy = temporaryRecord_exportAuditSchema.get("createdBy");
    MetadataBuilder temporaryRecord_exportAudit_createdOn = temporaryRecord_exportAuditSchema.get("createdOn");
    MetadataBuilder temporaryRecord_exportAudit_daysBeforeDestruction = temporaryRecord_exportAuditSchema.get("daysBeforeDestruction");
    MetadataBuilder temporaryRecord_exportAudit_deleted = temporaryRecord_exportAuditSchema.get("deleted");
    MetadataBuilder temporaryRecord_exportAudit_denyTokens = temporaryRecord_exportAuditSchema.get("denyTokens");
    MetadataBuilder temporaryRecord_exportAudit_destructionDate = temporaryRecord_exportAuditSchema.get("destructionDate");
    MetadataBuilder temporaryRecord_exportAudit_detachedauthorizations = temporaryRecord_exportAuditSchema.get("detachedauthorizations");
    MetadataBuilder temporaryRecord_exportAudit_errorOnPhysicalDeletion = temporaryRecord_exportAuditSchema.get("errorOnPhysicalDeletion");
    MetadataBuilder temporaryRecord_exportAudit_estimatedSize = temporaryRecord_exportAuditSchema.get("estimatedSize");
    MetadataBuilder temporaryRecord_exportAudit_hidden = temporaryRecord_exportAuditSchema.get("hidden");
    MetadataBuilder temporaryRecord_exportAudit_id = temporaryRecord_exportAuditSchema.get("id");
    MetadataBuilder temporaryRecord_exportAudit_legacyIdentifier = temporaryRecord_exportAuditSchema.get("legacyIdentifier");
    MetadataBuilder temporaryRecord_exportAudit_logicallyDeletedOn = temporaryRecord_exportAuditSchema.get("logicallyDeletedOn");
    MetadataBuilder temporaryRecord_exportAudit_manualTokens = temporaryRecord_exportAuditSchema.get("manualTokens");
    MetadataBuilder temporaryRecord_exportAudit_markedForParsing = temporaryRecord_exportAuditSchema.get("markedForParsing");
    MetadataBuilder temporaryRecord_exportAudit_markedForPreviewConversion = temporaryRecord_exportAuditSchema.get("markedForPreviewConversion");
    MetadataBuilder temporaryRecord_exportAudit_markedForReindexing = temporaryRecord_exportAuditSchema.get("markedForReindexing");
    MetadataBuilder temporaryRecord_exportAudit_migrationDataVersion = temporaryRecord_exportAuditSchema.get("migrationDataVersion");
    MetadataBuilder temporaryRecord_exportAudit_modifiedBy = temporaryRecord_exportAuditSchema.get("modifiedBy");
    MetadataBuilder temporaryRecord_exportAudit_modifiedOn = temporaryRecord_exportAuditSchema.get("modifiedOn");
    MetadataBuilder temporaryRecord_exportAudit_path = temporaryRecord_exportAuditSchema.get("path");
    MetadataBuilder temporaryRecord_exportAudit_pathParts = temporaryRecord_exportAuditSchema.get("pathParts");
    MetadataBuilder temporaryRecord_exportAudit_principalpath = temporaryRecord_exportAuditSchema.get("principalpath");
    MetadataBuilder temporaryRecord_exportAudit_removedauthorizations = temporaryRecord_exportAuditSchema.get("removedauthorizations");
    MetadataBuilder temporaryRecord_exportAudit_schema = temporaryRecord_exportAuditSchema.get("schema");
    MetadataBuilder temporaryRecord_exportAudit_shareDenyTokens = temporaryRecord_exportAuditSchema.get("shareDenyTokens");
    MetadataBuilder temporaryRecord_exportAudit_shareTokens = temporaryRecord_exportAuditSchema.get("shareTokens");
    MetadataBuilder temporaryRecord_exportAudit_title = temporaryRecord_exportAuditSchema.get("title");
    MetadataBuilder temporaryRecord_exportAudit_tokens = temporaryRecord_exportAuditSchema.get("tokens");
    MetadataBuilder temporaryRecord_exportAudit_tokensHierarchy = temporaryRecord_exportAuditSchema.get("tokensHierarchy");
    MetadataBuilder temporaryRecord_exportAudit_visibleInTrees = temporaryRecord_exportAuditSchema.get("visibleInTrees");
    MetadataBuilder temporaryRecord_importAudit_allReferences = temporaryRecord_importAuditSchema.get("allReferences");
    MetadataBuilder temporaryRecord_importAudit_allRemovedAuths = temporaryRecord_importAuditSchema.get("allRemovedAuths");
    MetadataBuilder temporaryRecord_importAudit_attachedAncestors = temporaryRecord_importAuditSchema.get("attachedAncestors");
    MetadataBuilder temporaryRecord_importAudit_autocomplete = temporaryRecord_importAuditSchema.get("autocomplete");
    MetadataBuilder temporaryRecord_importAudit_caption = temporaryRecord_importAuditSchema.get("caption");
    MetadataBuilder temporaryRecord_importAudit_content = temporaryRecord_importAuditSchema.get("content");
    MetadataBuilder temporaryRecord_importAudit_createdBy = temporaryRecord_importAuditSchema.get("createdBy");
    MetadataBuilder temporaryRecord_importAudit_createdOn = temporaryRecord_importAuditSchema.get("createdOn");
    MetadataBuilder temporaryRecord_importAudit_daysBeforeDestruction = temporaryRecord_importAuditSchema.get("daysBeforeDestruction");
    MetadataBuilder temporaryRecord_importAudit_deleted = temporaryRecord_importAuditSchema.get("deleted");
    MetadataBuilder temporaryRecord_importAudit_denyTokens = temporaryRecord_importAuditSchema.get("denyTokens");
    MetadataBuilder temporaryRecord_importAudit_destructionDate = temporaryRecord_importAuditSchema.get("destructionDate");
    MetadataBuilder temporaryRecord_importAudit_detachedauthorizations = temporaryRecord_importAuditSchema.get("detachedauthorizations");
    MetadataBuilder temporaryRecord_importAudit_errorOnPhysicalDeletion = temporaryRecord_importAuditSchema.get("errorOnPhysicalDeletion");
    MetadataBuilder temporaryRecord_importAudit_estimatedSize = temporaryRecord_importAuditSchema.get("estimatedSize");
    MetadataBuilder temporaryRecord_importAudit_hidden = temporaryRecord_importAuditSchema.get("hidden");
    MetadataBuilder temporaryRecord_importAudit_id = temporaryRecord_importAuditSchema.get("id");
    MetadataBuilder temporaryRecord_importAudit_legacyIdentifier = temporaryRecord_importAuditSchema.get("legacyIdentifier");
    MetadataBuilder temporaryRecord_importAudit_logicallyDeletedOn = temporaryRecord_importAuditSchema.get("logicallyDeletedOn");
    MetadataBuilder temporaryRecord_importAudit_manualTokens = temporaryRecord_importAuditSchema.get("manualTokens");
    MetadataBuilder temporaryRecord_importAudit_markedForParsing = temporaryRecord_importAuditSchema.get("markedForParsing");
    MetadataBuilder temporaryRecord_importAudit_markedForPreviewConversion = temporaryRecord_importAuditSchema.get("markedForPreviewConversion");
    MetadataBuilder temporaryRecord_importAudit_markedForReindexing = temporaryRecord_importAuditSchema.get("markedForReindexing");
    MetadataBuilder temporaryRecord_importAudit_migrationDataVersion = temporaryRecord_importAuditSchema.get("migrationDataVersion");
    MetadataBuilder temporaryRecord_importAudit_modifiedBy = temporaryRecord_importAuditSchema.get("modifiedBy");
    MetadataBuilder temporaryRecord_importAudit_modifiedOn = temporaryRecord_importAuditSchema.get("modifiedOn");
    MetadataBuilder temporaryRecord_importAudit_path = temporaryRecord_importAuditSchema.get("path");
    MetadataBuilder temporaryRecord_importAudit_pathParts = temporaryRecord_importAuditSchema.get("pathParts");
    MetadataBuilder temporaryRecord_importAudit_principalpath = temporaryRecord_importAuditSchema.get("principalpath");
    MetadataBuilder temporaryRecord_importAudit_removedauthorizations = temporaryRecord_importAuditSchema.get("removedauthorizations");
    MetadataBuilder temporaryRecord_importAudit_schema = temporaryRecord_importAuditSchema.get("schema");
    MetadataBuilder temporaryRecord_importAudit_shareDenyTokens = temporaryRecord_importAuditSchema.get("shareDenyTokens");
    MetadataBuilder temporaryRecord_importAudit_shareTokens = temporaryRecord_importAuditSchema.get("shareTokens");
    MetadataBuilder temporaryRecord_importAudit_title = temporaryRecord_importAuditSchema.get("title");
    MetadataBuilder temporaryRecord_importAudit_tokens = temporaryRecord_importAuditSchema.get("tokens");
    MetadataBuilder temporaryRecord_importAudit_tokensHierarchy = temporaryRecord_importAuditSchema.get("tokensHierarchy");
    MetadataBuilder temporaryRecord_importAudit_visibleInTrees = temporaryRecord_importAuditSchema.get("visibleInTrees");
    MetadataBuilder temporaryRecord_scriptReport_allReferences = temporaryRecord_scriptReportSchema.get("allReferences");
    MetadataBuilder temporaryRecord_scriptReport_allRemovedAuths = temporaryRecord_scriptReportSchema.get("allRemovedAuths");
    MetadataBuilder temporaryRecord_scriptReport_attachedAncestors = temporaryRecord_scriptReportSchema.get("attachedAncestors");
    MetadataBuilder temporaryRecord_scriptReport_autocomplete = temporaryRecord_scriptReportSchema.get("autocomplete");
    MetadataBuilder temporaryRecord_scriptReport_caption = temporaryRecord_scriptReportSchema.get("caption");
    MetadataBuilder temporaryRecord_scriptReport_content = temporaryRecord_scriptReportSchema.get("content");
    MetadataBuilder temporaryRecord_scriptReport_createdBy = temporaryRecord_scriptReportSchema.get("createdBy");
    MetadataBuilder temporaryRecord_scriptReport_createdOn = temporaryRecord_scriptReportSchema.get("createdOn");
    MetadataBuilder temporaryRecord_scriptReport_daysBeforeDestruction = temporaryRecord_scriptReportSchema.get("daysBeforeDestruction");
    MetadataBuilder temporaryRecord_scriptReport_deleted = temporaryRecord_scriptReportSchema.get("deleted");
    MetadataBuilder temporaryRecord_scriptReport_denyTokens = temporaryRecord_scriptReportSchema.get("denyTokens");
    MetadataBuilder temporaryRecord_scriptReport_destructionDate = temporaryRecord_scriptReportSchema.get("destructionDate");
    MetadataBuilder temporaryRecord_scriptReport_detachedauthorizations = temporaryRecord_scriptReportSchema.get("detachedauthorizations");
    MetadataBuilder temporaryRecord_scriptReport_errorOnPhysicalDeletion = temporaryRecord_scriptReportSchema.get("errorOnPhysicalDeletion");
    MetadataBuilder temporaryRecord_scriptReport_estimatedSize = temporaryRecord_scriptReportSchema.get("estimatedSize");
    MetadataBuilder temporaryRecord_scriptReport_hidden = temporaryRecord_scriptReportSchema.get("hidden");
    MetadataBuilder temporaryRecord_scriptReport_id = temporaryRecord_scriptReportSchema.get("id");
    MetadataBuilder temporaryRecord_scriptReport_legacyIdentifier = temporaryRecord_scriptReportSchema.get("legacyIdentifier");
    MetadataBuilder temporaryRecord_scriptReport_logicallyDeletedOn = temporaryRecord_scriptReportSchema.get("logicallyDeletedOn");
    MetadataBuilder temporaryRecord_scriptReport_manualTokens = temporaryRecord_scriptReportSchema.get("manualTokens");
    MetadataBuilder temporaryRecord_scriptReport_markedForParsing = temporaryRecord_scriptReportSchema.get("markedForParsing");
    MetadataBuilder temporaryRecord_scriptReport_markedForPreviewConversion = temporaryRecord_scriptReportSchema.get("markedForPreviewConversion");
    MetadataBuilder temporaryRecord_scriptReport_markedForReindexing = temporaryRecord_scriptReportSchema.get("markedForReindexing");
    MetadataBuilder temporaryRecord_scriptReport_migrationDataVersion = temporaryRecord_scriptReportSchema.get("migrationDataVersion");
    MetadataBuilder temporaryRecord_scriptReport_modifiedBy = temporaryRecord_scriptReportSchema.get("modifiedBy");
    MetadataBuilder temporaryRecord_scriptReport_modifiedOn = temporaryRecord_scriptReportSchema.get("modifiedOn");
    MetadataBuilder temporaryRecord_scriptReport_path = temporaryRecord_scriptReportSchema.get("path");
    MetadataBuilder temporaryRecord_scriptReport_pathParts = temporaryRecord_scriptReportSchema.get("pathParts");
    MetadataBuilder temporaryRecord_scriptReport_principalpath = temporaryRecord_scriptReportSchema.get("principalpath");
    MetadataBuilder temporaryRecord_scriptReport_removedauthorizations = temporaryRecord_scriptReportSchema.get("removedauthorizations");
    MetadataBuilder temporaryRecord_scriptReport_schema = temporaryRecord_scriptReportSchema.get("schema");
    MetadataBuilder temporaryRecord_scriptReport_shareDenyTokens = temporaryRecord_scriptReportSchema.get("shareDenyTokens");
    MetadataBuilder temporaryRecord_scriptReport_shareTokens = temporaryRecord_scriptReportSchema.get("shareTokens");
    MetadataBuilder temporaryRecord_scriptReport_title = temporaryRecord_scriptReportSchema.get("title");
    MetadataBuilder temporaryRecord_scriptReport_tokens = temporaryRecord_scriptReportSchema.get("tokens");
    MetadataBuilder temporaryRecord_scriptReport_tokensHierarchy = temporaryRecord_scriptReportSchema.get("tokensHierarchy");
    MetadataBuilder temporaryRecord_scriptReport_visibleInTrees = temporaryRecord_scriptReportSchema.get("visibleInTrees");
  }

  private void createUserSchemaTypeMetadatas(MetadataSchemaTypesBuilder types, MetadataSchemaTypeBuilder userSchemaType, MetadataSchemaBuilder userSchema) {
    MetadataBuilder user_address = userSchema.create("address").setType(MetadataValueType.STRING);
    MetadataBuilder user_agentEnabled = userSchema.create("agentEnabled").setType(MetadataValueType.BOOLEAN);
    user_agentEnabled.setDefaultValue(true);
    MetadataBuilder user_allReferences = userSchema.create("allReferences").setType(MetadataValueType.STRING);
    user_allReferences.setMultivalue(true);
    user_allReferences.setSystemReserved(true);
    user_allReferences.setUndeletable(true);
    user_allReferences.setMultiLingual(false);
    MetadataBuilder user_allRemovedAuths = userSchema.create("allRemovedAuths").setType(MetadataValueType.STRING);
    user_allRemovedAuths.setMultivalue(true);
    user_allRemovedAuths.setSystemReserved(true);
    user_allRemovedAuths.setUndeletable(true);
    user_allRemovedAuths.setEssential(true);
    user_allRemovedAuths.setMultiLingual(false);
    MetadataBuilder user_allroles = userSchema.create("allroles").setType(MetadataValueType.STRING);
    user_allroles.setMultivalue(true);
    user_allroles.setUndeletable(true);
    MetadataBuilder user_attachedAncestors = userSchema.create("attachedAncestors").setType(MetadataValueType.STRING);
    user_attachedAncestors.setMultivalue(true);
    user_attachedAncestors.setSystemReserved(true);
    user_attachedAncestors.setUndeletable(true);
    user_attachedAncestors.setEssential(true);
    user_attachedAncestors.setMultiLingual(false);
    MetadataBuilder user_autocomplete = userSchema.create("autocomplete").setType(MetadataValueType.STRING);
    user_autocomplete.setMultivalue(true);
    user_autocomplete.setSystemReserved(true);
    user_autocomplete.setUndeletable(true);
    user_autocomplete.setEssential(true);
    user_autocomplete.setMultiLingual(true);
    MetadataBuilder user_caption = userSchema.create("caption").setType(MetadataValueType.STRING);
    user_caption.setSystemReserved(true);
    user_caption.setUndeletable(true);
    user_caption.setMultiLingual(false);
    user_caption.setSortable(true);
    MetadataBuilder user_collectionDeleteAccess = userSchema.create("collectionDeleteAccess").setType(MetadataValueType.BOOLEAN);
    user_collectionDeleteAccess.setUndeletable(true);
    MetadataBuilder user_collectionReadAccess = userSchema.create("collectionReadAccess").setType(MetadataValueType.BOOLEAN);
    user_collectionReadAccess.setUndeletable(true);
    MetadataBuilder user_collectionWriteAccess = userSchema.create("collectionWriteAccess").setType(MetadataValueType.BOOLEAN);
    user_collectionWriteAccess.setUndeletable(true);
    MetadataBuilder user_createdOn = userSchema.create("createdOn").setType(MetadataValueType.DATE_TIME);
    user_createdOn.setSystemReserved(true);
    user_createdOn.setUndeletable(true);
    user_createdOn.setMultiLingual(false);
    user_createdOn.setSortable(true);
    MetadataBuilder user_defaultPageLength = userSchema.create("defaultPageLength").setType(MetadataValueType.ENUM);
    user_defaultPageLength.setUndeletable(true);
    user_defaultPageLength.setDefaultValue(SearchPageLength.TEN);
    user_defaultPageLength.defineAsEnum(SearchPageLength.class);
    MetadataBuilder user_defaultTabInFolderDisplay = userSchema.create("defaultTabInFolderDisplay").setType(MetadataValueType.STRING);
    user_defaultTabInFolderDisplay.setUndeletable(true);
    MetadataBuilder user_defaultTaxonomy = userSchema.create("defaultTaxonomy").setType(MetadataValueType.STRING);
    user_defaultTaxonomy.setUndeletable(true);
    MetadataBuilder user_deleted = userSchema.create("deleted").setType(MetadataValueType.BOOLEAN);
    user_deleted.setSystemReserved(true);
    user_deleted.setUndeletable(true);
    user_deleted.setMultiLingual(false);
    MetadataBuilder user_denyTokens = userSchema.create("denyTokens").setType(MetadataValueType.STRING);
    user_denyTokens.setMultivalue(true);
    user_denyTokens.setSystemReserved(true);
    user_denyTokens.setUndeletable(true);
    user_denyTokens.setMultiLingual(false);
    user_denyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder user_detachedauthorizations = userSchema.create("detachedauthorizations").setType(MetadataValueType.BOOLEAN);
    user_detachedauthorizations.setSystemReserved(true);
    user_detachedauthorizations.setUndeletable(true);
    user_detachedauthorizations.setMultiLingual(false);
    MetadataBuilder user_doNotReceiveEmails = userSchema.create("doNotReceiveEmails").setType(MetadataValueType.BOOLEAN);
    user_doNotReceiveEmails.setUndeletable(true);
    MetadataBuilder user_email = userSchema.create("email").setType(MetadataValueType.STRING);
    user_email.setUndeletable(true);
    user_email.defineValidators().add(EmailValidator.class);
	  MetadataBuilder user_enableFacetsApplyButton = userSchema.create("enableFacetsApplyButton").setType(MetadataValueType.BOOLEAN);
	  user_enableFacetsApplyButton.setUndeletable(true);
	  user_enableFacetsApplyButton.setDefaultValue(false);
    MetadataBuilder user_errorOnPhysicalDeletion = userSchema.create("errorOnPhysicalDeletion").setType(MetadataValueType.BOOLEAN);
    user_errorOnPhysicalDeletion.setSystemReserved(true);
    user_errorOnPhysicalDeletion.setUndeletable(true);
    user_errorOnPhysicalDeletion.setMultiLingual(false);
    MetadataBuilder user_estimatedSize = userSchema.create("estimatedSize").setType(MetadataValueType.INTEGER);
    user_estimatedSize.setSystemReserved(true);
    user_estimatedSize.setUndeletable(true);
    user_estimatedSize.setMultiLingual(false);
    MetadataBuilder user_fax = userSchema.create("fax").setType(MetadataValueType.STRING);
    MetadataBuilder user_firstname = userSchema.create("firstname").setType(MetadataValueType.STRING);
    user_firstname.setUndeletable(true);
    MetadataBuilder user_groups = userSchema.create("groups").setType(MetadataValueType.REFERENCE);
    user_groups.setMultivalue(true);
    user_groups.setCacheIndex(true);
    user_groups.setUndeletable(true);
    user_groups.defineReferencesTo(types.getSchemaType("group"));
    MetadataBuilder user_hidden = userSchema.create("hidden").setType(MetadataValueType.BOOLEAN);
    user_hidden.setSystemReserved(true);
    user_hidden.setUndeletable(true);
    user_hidden.setMultiLingual(false);
    MetadataBuilder user_id = userSchema.create("id").setType(MetadataValueType.STRING);
    user_id.setDefaultRequirement(true);
    user_id.setSystemReserved(true);
    user_id.setUndeletable(true);
    user_id.setMultiLingual(false);
    user_id.setSearchable(true);
    user_id.setSortable(true);
    user_id.setUniqueValue(true);
    user_id.setUnmodifiable(true);
    MetadataBuilder user_jobTitle = userSchema.create("jobTitle").setType(MetadataValueType.STRING);
    user_jobTitle.setUndeletable(true);
    MetadataBuilder user_lastIPAddress = userSchema.create("lastIPAddress").setType(MetadataValueType.STRING);
    user_lastIPAddress.setSystemReserved(true);
    user_lastIPAddress.setUndeletable(true);
    MetadataBuilder user_lastLogin = userSchema.create("lastLogin").setType(MetadataValueType.DATE_TIME);
    user_lastLogin.setSystemReserved(true);
    user_lastLogin.setUndeletable(true);
    MetadataBuilder user_lastname = userSchema.create("lastname").setType(MetadataValueType.STRING);
    user_lastname.setUndeletable(true);
    MetadataBuilder user_legacyIdentifier = userSchema.create("legacyIdentifier").setType(MetadataValueType.STRING);
    user_legacyIdentifier.setDefaultRequirement(true);
    user_legacyIdentifier.setSystemReserved(true);
    user_legacyIdentifier.setUndeletable(true);
    user_legacyIdentifier.setMultiLingual(false);
    user_legacyIdentifier.setSearchable(true);
    user_legacyIdentifier.setUniqueValue(true);
    user_legacyIdentifier.setUnmodifiable(true);
    MetadataBuilder user_logicallyDeletedOn = userSchema.create("logicallyDeletedOn").setType(MetadataValueType.DATE_TIME);
    user_logicallyDeletedOn.setSystemReserved(true);
    user_logicallyDeletedOn.setUndeletable(true);
    user_logicallyDeletedOn.setMultiLingual(false);
    MetadataBuilder user_loginLanguageCode = userSchema.create("loginLanguageCode").setType(MetadataValueType.STRING);
    user_loginLanguageCode.setUndeletable(true);
    MetadataBuilder user_manualTokens = userSchema.create("manualTokens").setType(MetadataValueType.STRING);
    user_manualTokens.setMultivalue(true);
    user_manualTokens.setSystemReserved(true);
    user_manualTokens.setUndeletable(true);
    user_manualTokens.setMultiLingual(false);
    user_manualTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder user_markedForParsing = userSchema.create("markedForParsing").setType(MetadataValueType.BOOLEAN);
    user_markedForParsing.setSystemReserved(true);
    user_markedForParsing.setUndeletable(true);
    user_markedForParsing.setMultiLingual(false);
    MetadataBuilder user_markedForPreviewConversion = userSchema.create("markedForPreviewConversion").setType(MetadataValueType.BOOLEAN);
    user_markedForPreviewConversion.setSystemReserved(true);
    user_markedForPreviewConversion.setUndeletable(true);
    user_markedForPreviewConversion.setMultiLingual(false);
    MetadataBuilder user_markedForReindexing = userSchema.create("markedForReindexing").setType(MetadataValueType.BOOLEAN);
    user_markedForReindexing.setSystemReserved(true);
    user_markedForReindexing.setUndeletable(true);
    user_markedForReindexing.setMultiLingual(false);
    MetadataBuilder user_migrationDataVersion = userSchema.create("migrationDataVersion").setType(MetadataValueType.NUMBER);
    user_migrationDataVersion.setSystemReserved(true);
    user_migrationDataVersion.setUndeletable(true);
    user_migrationDataVersion.setMultiLingual(false);
    user_migrationDataVersion.setEssentialInSummary(true);
    MetadataBuilder user_modifiedOn = userSchema.create("modifiedOn").setType(MetadataValueType.DATE_TIME);
    user_modifiedOn.setSystemReserved(true);
    user_modifiedOn.setUndeletable(true);
    user_modifiedOn.setMultiLingual(false);
    user_modifiedOn.setSortable(true);
    MetadataBuilder user_path = userSchema.create("path").setType(MetadataValueType.STRING);
    user_path.setMultivalue(true);
    user_path.setSystemReserved(true);
    user_path.setUndeletable(true);
    user_path.setMultiLingual(false);
    MetadataBuilder user_pathParts = userSchema.create("pathParts").setType(MetadataValueType.STRING);
    user_pathParts.setMultivalue(true);
    user_pathParts.setSystemReserved(true);
    user_pathParts.setUndeletable(true);
    user_pathParts.setMultiLingual(false);
    MetadataBuilder user_personalEmails = userSchema.create("personalEmails").setType(MetadataValueType.STRING);
    user_personalEmails.setMultivalue(true);
    MetadataBuilder user_phone = userSchema.create("phone").setType(MetadataValueType.STRING);
    user_phone.setUndeletable(true);
    MetadataBuilder user_principalpath = userSchema.create("principalpath").setType(MetadataValueType.STRING);
    user_principalpath.setSystemReserved(true);
    user_principalpath.setUndeletable(true);
    user_principalpath.setMultiLingual(false);
    MetadataBuilder user_removedauthorizations = userSchema.create("removedauthorizations").setType(MetadataValueType.STRING);
    user_removedauthorizations.setMultivalue(true);
    user_removedauthorizations.setSystemReserved(true);
    user_removedauthorizations.setUndeletable(true);
    user_removedauthorizations.setMultiLingual(false);
    MetadataBuilder user_schema = userSchema.create("schema").setType(MetadataValueType.STRING);
    user_schema.setDefaultRequirement(true);
    user_schema.setSystemReserved(true);
    user_schema.setUndeletable(true);
    user_schema.setMultiLingual(false);
    MetadataBuilder user_shareDenyTokens = userSchema.create("shareDenyTokens").setType(MetadataValueType.STRING);
    user_shareDenyTokens.setMultivalue(true);
    user_shareDenyTokens.setSystemReserved(true);
    user_shareDenyTokens.setUndeletable(true);
    user_shareDenyTokens.setMultiLingual(false);
    user_shareDenyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder user_shareTokens = userSchema.create("shareTokens").setType(MetadataValueType.STRING);
    user_shareTokens.setMultivalue(true);
    user_shareTokens.setSystemReserved(true);
    user_shareTokens.setUndeletable(true);
    user_shareTokens.setMultiLingual(false);
    user_shareTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder user_signature = userSchema.create("signature").setType(MetadataValueType.TEXT);
    user_signature.setUndeletable(true);
    MetadataBuilder user_startTab = userSchema.create("startTab").setType(MetadataValueType.STRING);
    user_startTab.setUndeletable(true);
    MetadataBuilder user_status = userSchema.create("status").setType(MetadataValueType.ENUM);
    user_status.setUndeletable(true);
    user_status.defineAsEnum(UserCredentialStatus.class);
    MetadataBuilder user_systemAdmin = userSchema.create("systemAdmin").setType(MetadataValueType.BOOLEAN);
    user_systemAdmin.setUndeletable(true);
    MetadataBuilder user_taxonomyDisplayOrder = userSchema.create("taxonomyDisplayOrder").setType(MetadataValueType.STRING);
    user_taxonomyDisplayOrder.setMultivalue(true);
    user_taxonomyDisplayOrder.setUndeletable(true);
    MetadataBuilder user_title = userSchema.create("title").setType(MetadataValueType.STRING);
    user_title.setUndeletable(true);
    user_title.setMultiLingual(false);
    user_title.setSchemaAutocomplete(true);
    user_title.setSearchable(true);
    MetadataBuilder user_tokens = userSchema.create("tokens").setType(MetadataValueType.STRING);
    user_tokens.setMultivalue(true);
    user_tokens.setSystemReserved(true);
    user_tokens.setUndeletable(true);
    user_tokens.setMultiLingual(false);
    MetadataBuilder user_tokensHierarchy = userSchema.create("tokensHierarchy").setType(MetadataValueType.STRING);
    user_tokensHierarchy.setMultivalue(true);
    user_tokensHierarchy.setSystemReserved(true);
    user_tokensHierarchy.setUndeletable(true);
    user_tokensHierarchy.setMultiLingual(false);
    MetadataBuilder user_userDocumentSizeSum = userSchema.create("userDocumentSizeSum").setType(MetadataValueType.NUMBER);
    user_userDocumentSizeSum.setUndeletable(true);
    MetadataBuilder user_username = userSchema.create("username").setType(MetadataValueType.STRING);
    user_username.setCacheIndex(true);
    user_username.setUndeletable(true);
    user_username.setUniqueValue(true);
    user_username.setUnmodifiable(true);
    MetadataBuilder user_userroles = userSchema.create("userroles").setType(MetadataValueType.STRING);
    user_userroles.setMultivalue(true);
    user_userroles.setUndeletable(true);
    MetadataBuilder user_usertokens = userSchema.create("usertokens").setType(MetadataValueType.STRING);
    user_usertokens.setMultivalue(true);
    user_usertokens.setUndeletable(true);
    MetadataBuilder user_visibleInTrees = userSchema.create("visibleInTrees").setType(MetadataValueType.BOOLEAN);
    user_visibleInTrees.setSystemReserved(true);
    user_visibleInTrees.setUndeletable(true);
    user_visibleInTrees.setMultiLingual(false);
  }

  private void createFacetSchemaTypeMetadatas(MetadataSchemaTypesBuilder types, MetadataSchemaTypeBuilder facetSchemaType, MetadataSchemaBuilder facet_fieldSchema, MetadataSchemaBuilder facet_querySchema, MetadataSchemaBuilder facetSchema) {
    MetadataBuilder facet_field_fieldValuesLabel = facet_fieldSchema.create("fieldValuesLabel").setType(MetadataValueType.STRUCTURE);
    facet_field_fieldValuesLabel.setUndeletable(true);
    facet_field_fieldValuesLabel.defineStructureFactory(MapStringStringStructureFactory.class);
    MetadataBuilder facet_query_listQueries = facet_querySchema.create("listQueries").setType(MetadataValueType.STRUCTURE);
    facet_query_listQueries.setUndeletable(true);
    facet_query_listQueries.defineStructureFactory(MapStringStringStructureFactory.class);
    MetadataBuilder facet_active = facetSchema.create("active").setType(MetadataValueType.BOOLEAN);
    facet_active.setUndeletable(true);
    facet_active.setDefaultValue(true);
    MetadataBuilder facet_allReferences = facetSchema.create("allReferences").setType(MetadataValueType.STRING);
    facet_allReferences.setMultivalue(true);
    facet_allReferences.setSystemReserved(true);
    facet_allReferences.setUndeletable(true);
    facet_allReferences.setMultiLingual(false);
    MetadataBuilder facet_allRemovedAuths = facetSchema.create("allRemovedAuths").setType(MetadataValueType.STRING);
    facet_allRemovedAuths.setMultivalue(true);
    facet_allRemovedAuths.setSystemReserved(true);
    facet_allRemovedAuths.setUndeletable(true);
    facet_allRemovedAuths.setEssential(true);
    facet_allRemovedAuths.setMultiLingual(false);
    MetadataBuilder facet_attachedAncestors = facetSchema.create("attachedAncestors").setType(MetadataValueType.STRING);
    facet_attachedAncestors.setMultivalue(true);
    facet_attachedAncestors.setSystemReserved(true);
    facet_attachedAncestors.setUndeletable(true);
    facet_attachedAncestors.setEssential(true);
    facet_attachedAncestors.setMultiLingual(false);
    MetadataBuilder facet_autocomplete = facetSchema.create("autocomplete").setType(MetadataValueType.STRING);
    facet_autocomplete.setMultivalue(true);
    facet_autocomplete.setSystemReserved(true);
    facet_autocomplete.setUndeletable(true);
    facet_autocomplete.setEssential(true);
    facet_autocomplete.setMultiLingual(true);
    MetadataBuilder facet_caption = facetSchema.create("caption").setType(MetadataValueType.STRING);
    facet_caption.setSystemReserved(true);
    facet_caption.setUndeletable(true);
    facet_caption.setMultiLingual(false);
    facet_caption.setSortable(true);
    MetadataBuilder facet_createdBy = facetSchema.create("createdBy").setType(MetadataValueType.REFERENCE);
    facet_createdBy.setSystemReserved(true);
    facet_createdBy.setUndeletable(true);
    facet_createdBy.setMultiLingual(false);
    facet_createdBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder facet_createdOn = facetSchema.create("createdOn").setType(MetadataValueType.DATE_TIME);
    facet_createdOn.setSystemReserved(true);
    facet_createdOn.setUndeletable(true);
    facet_createdOn.setMultiLingual(false);
    facet_createdOn.setSortable(true);
    MetadataBuilder facet_deleted = facetSchema.create("deleted").setType(MetadataValueType.BOOLEAN);
    facet_deleted.setSystemReserved(true);
    facet_deleted.setUndeletable(true);
    facet_deleted.setMultiLingual(false);
    MetadataBuilder facet_denyTokens = facetSchema.create("denyTokens").setType(MetadataValueType.STRING);
    facet_denyTokens.setMultivalue(true);
    facet_denyTokens.setSystemReserved(true);
    facet_denyTokens.setUndeletable(true);
    facet_denyTokens.setMultiLingual(false);
    facet_denyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder facet_detachedauthorizations = facetSchema.create("detachedauthorizations").setType(MetadataValueType.BOOLEAN);
    facet_detachedauthorizations.setSystemReserved(true);
    facet_detachedauthorizations.setUndeletable(true);
    facet_detachedauthorizations.setMultiLingual(false);
    MetadataBuilder facet_elementPerPage = facetSchema.create("elementPerPage").setType(MetadataValueType.NUMBER);
    facet_elementPerPage.setDefaultRequirement(true);
    facet_elementPerPage.setUndeletable(true);
    facet_elementPerPage.setDefaultValue(5);
    MetadataBuilder facet_errorOnPhysicalDeletion = facetSchema.create("errorOnPhysicalDeletion").setType(MetadataValueType.BOOLEAN);
    facet_errorOnPhysicalDeletion.setSystemReserved(true);
    facet_errorOnPhysicalDeletion.setUndeletable(true);
    facet_errorOnPhysicalDeletion.setMultiLingual(false);
    MetadataBuilder facet_estimatedSize = facetSchema.create("estimatedSize").setType(MetadataValueType.INTEGER);
    facet_estimatedSize.setSystemReserved(true);
    facet_estimatedSize.setUndeletable(true);
    facet_estimatedSize.setMultiLingual(false);
    MetadataBuilder facet_facetType = facetSchema.create("facetType").setType(MetadataValueType.ENUM);
    facet_facetType.setDefaultRequirement(true);
    facet_facetType.setUndeletable(true);
    facet_facetType.defineAsEnum(FacetType.class);
    MetadataBuilder facet_fieldDatastoreCode = facetSchema.create("fieldDatastoreCode").setType(MetadataValueType.STRING);
    facet_fieldDatastoreCode.setUndeletable(true);
    facet_fieldDatastoreCode.setEssential(true);
    MetadataBuilder facet_hidden = facetSchema.create("hidden").setType(MetadataValueType.BOOLEAN);
    facet_hidden.setSystemReserved(true);
    facet_hidden.setUndeletable(true);
    facet_hidden.setMultiLingual(false);
    MetadataBuilder facet_id = facetSchema.create("id").setType(MetadataValueType.STRING);
    facet_id.setDefaultRequirement(true);
    facet_id.setSystemReserved(true);
    facet_id.setUndeletable(true);
    facet_id.setMultiLingual(false);
    facet_id.setSearchable(true);
    facet_id.setSortable(true);
    facet_id.setUniqueValue(true);
    facet_id.setUnmodifiable(true);
    MetadataBuilder facet_legacyIdentifier = facetSchema.create("legacyIdentifier").setType(MetadataValueType.STRING);
    facet_legacyIdentifier.setDefaultRequirement(true);
    facet_legacyIdentifier.setSystemReserved(true);
    facet_legacyIdentifier.setUndeletable(true);
    facet_legacyIdentifier.setMultiLingual(false);
    facet_legacyIdentifier.setSearchable(true);
    facet_legacyIdentifier.setUniqueValue(true);
    facet_legacyIdentifier.setUnmodifiable(true);
    MetadataBuilder facet_logicallyDeletedOn = facetSchema.create("logicallyDeletedOn").setType(MetadataValueType.DATE_TIME);
    facet_logicallyDeletedOn.setSystemReserved(true);
    facet_logicallyDeletedOn.setUndeletable(true);
    facet_logicallyDeletedOn.setMultiLingual(false);
    MetadataBuilder facet_manualTokens = facetSchema.create("manualTokens").setType(MetadataValueType.STRING);
    facet_manualTokens.setMultivalue(true);
    facet_manualTokens.setSystemReserved(true);
    facet_manualTokens.setUndeletable(true);
    facet_manualTokens.setMultiLingual(false);
    facet_manualTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder facet_markedForParsing = facetSchema.create("markedForParsing").setType(MetadataValueType.BOOLEAN);
    facet_markedForParsing.setSystemReserved(true);
    facet_markedForParsing.setUndeletable(true);
    facet_markedForParsing.setMultiLingual(false);
    MetadataBuilder facet_markedForPreviewConversion = facetSchema.create("markedForPreviewConversion").setType(MetadataValueType.BOOLEAN);
    facet_markedForPreviewConversion.setSystemReserved(true);
    facet_markedForPreviewConversion.setUndeletable(true);
    facet_markedForPreviewConversion.setMultiLingual(false);
    MetadataBuilder facet_markedForReindexing = facetSchema.create("markedForReindexing").setType(MetadataValueType.BOOLEAN);
    facet_markedForReindexing.setSystemReserved(true);
    facet_markedForReindexing.setUndeletable(true);
    facet_markedForReindexing.setMultiLingual(false);
    MetadataBuilder facet_migrationDataVersion = facetSchema.create("migrationDataVersion").setType(MetadataValueType.NUMBER);
    facet_migrationDataVersion.setSystemReserved(true);
    facet_migrationDataVersion.setUndeletable(true);
    facet_migrationDataVersion.setMultiLingual(false);
    facet_migrationDataVersion.setEssentialInSummary(true);
    MetadataBuilder facet_modifiedBy = facetSchema.create("modifiedBy").setType(MetadataValueType.REFERENCE);
    facet_modifiedBy.setSystemReserved(true);
    facet_modifiedBy.setUndeletable(true);
    facet_modifiedBy.setMultiLingual(false);
    facet_modifiedBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder facet_modifiedOn = facetSchema.create("modifiedOn").setType(MetadataValueType.DATE_TIME);
    facet_modifiedOn.setSystemReserved(true);
    facet_modifiedOn.setUndeletable(true);
    facet_modifiedOn.setMultiLingual(false);
    facet_modifiedOn.setSortable(true);
    MetadataBuilder facet_openByDefault = facetSchema.create("openByDefault").setType(MetadataValueType.BOOLEAN);
    facet_openByDefault.setUndeletable(true);
    facet_openByDefault.setDefaultValue(true);
    MetadataBuilder facet_order = facetSchema.create("order").setType(MetadataValueType.NUMBER);
    facet_order.setUndeletable(true);
    MetadataBuilder facet_orderResult = facetSchema.create("orderResult").setType(MetadataValueType.ENUM);
    facet_orderResult.setDefaultRequirement(true);
    facet_orderResult.setUndeletable(true);
    facet_orderResult.setDefaultValue(FacetOrderType.RELEVANCE);
    facet_orderResult.defineAsEnum(FacetOrderType.class);
    MetadataBuilder facet_pages = facetSchema.create("pages").setType(MetadataValueType.NUMBER);
    facet_pages.setUndeletable(true);
    facet_pages.setDefaultValue(1);
    MetadataBuilder facet_path = facetSchema.create("path").setType(MetadataValueType.STRING);
    facet_path.setMultivalue(true);
    facet_path.setSystemReserved(true);
    facet_path.setUndeletable(true);
    facet_path.setMultiLingual(false);
    MetadataBuilder facet_pathParts = facetSchema.create("pathParts").setType(MetadataValueType.STRING);
    facet_pathParts.setMultivalue(true);
    facet_pathParts.setSystemReserved(true);
    facet_pathParts.setUndeletable(true);
    facet_pathParts.setMultiLingual(false);
    MetadataBuilder facet_principalpath = facetSchema.create("principalpath").setType(MetadataValueType.STRING);
    facet_principalpath.setSystemReserved(true);
    facet_principalpath.setUndeletable(true);
    facet_principalpath.setMultiLingual(false);
    MetadataBuilder facet_removedauthorizations = facetSchema.create("removedauthorizations").setType(MetadataValueType.STRING);
    facet_removedauthorizations.setMultivalue(true);
    facet_removedauthorizations.setSystemReserved(true);
    facet_removedauthorizations.setUndeletable(true);
    facet_removedauthorizations.setMultiLingual(false);
    MetadataBuilder facet_schema = facetSchema.create("schema").setType(MetadataValueType.STRING);
    facet_schema.setDefaultRequirement(true);
    facet_schema.setSystemReserved(true);
    facet_schema.setUndeletable(true);
    facet_schema.setMultiLingual(false);
    MetadataBuilder facet_shareDenyTokens = facetSchema.create("shareDenyTokens").setType(MetadataValueType.STRING);
    facet_shareDenyTokens.setMultivalue(true);
    facet_shareDenyTokens.setSystemReserved(true);
    facet_shareDenyTokens.setUndeletable(true);
    facet_shareDenyTokens.setMultiLingual(false);
    facet_shareDenyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder facet_shareTokens = facetSchema.create("shareTokens").setType(MetadataValueType.STRING);
    facet_shareTokens.setMultivalue(true);
    facet_shareTokens.setSystemReserved(true);
    facet_shareTokens.setUndeletable(true);
    facet_shareTokens.setMultiLingual(false);
    facet_shareTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder facet_title = facetSchema.create("title").setType(MetadataValueType.STRING);
    facet_title.setDefaultRequirement(true);
    facet_title.setUndeletable(true);
    facet_title.setMultiLingual(true);
    facet_title.setSchemaAutocomplete(true);
    facet_title.setSearchable(true);
    MetadataBuilder facet_tokens = facetSchema.create("tokens").setType(MetadataValueType.STRING);
    facet_tokens.setMultivalue(true);
    facet_tokens.setSystemReserved(true);
    facet_tokens.setUndeletable(true);
    facet_tokens.setMultiLingual(false);
    MetadataBuilder facet_tokensHierarchy = facetSchema.create("tokensHierarchy").setType(MetadataValueType.STRING);
    facet_tokensHierarchy.setMultivalue(true);
    facet_tokensHierarchy.setSystemReserved(true);
    facet_tokensHierarchy.setUndeletable(true);
    facet_tokensHierarchy.setMultiLingual(false);
    MetadataBuilder facet_usedByModule = facetSchema.create("usedByModule").setType(MetadataValueType.STRING);
    facet_usedByModule.setSystemReserved(true);
    facet_usedByModule.setUndeletable(true);
    MetadataBuilder facet_visibleInTrees = facetSchema.create("visibleInTrees").setType(MetadataValueType.BOOLEAN);
    facet_visibleInTrees.setSystemReserved(true);
    facet_visibleInTrees.setUndeletable(true);
    facet_visibleInTrees.setMultiLingual(false);
    MetadataBuilder facet_field_active = facet_fieldSchema.get("active");
    MetadataBuilder facet_field_allReferences = facet_fieldSchema.get("allReferences");
    MetadataBuilder facet_field_allRemovedAuths = facet_fieldSchema.get("allRemovedAuths");
    MetadataBuilder facet_field_attachedAncestors = facet_fieldSchema.get("attachedAncestors");
    MetadataBuilder facet_field_autocomplete = facet_fieldSchema.get("autocomplete");
    MetadataBuilder facet_field_caption = facet_fieldSchema.get("caption");
    MetadataBuilder facet_field_createdBy = facet_fieldSchema.get("createdBy");
    MetadataBuilder facet_field_createdOn = facet_fieldSchema.get("createdOn");
    MetadataBuilder facet_field_deleted = facet_fieldSchema.get("deleted");
    MetadataBuilder facet_field_denyTokens = facet_fieldSchema.get("denyTokens");
    MetadataBuilder facet_field_detachedauthorizations = facet_fieldSchema.get("detachedauthorizations");
    MetadataBuilder facet_field_elementPerPage = facet_fieldSchema.get("elementPerPage");
    MetadataBuilder facet_field_errorOnPhysicalDeletion = facet_fieldSchema.get("errorOnPhysicalDeletion");
    MetadataBuilder facet_field_estimatedSize = facet_fieldSchema.get("estimatedSize");
    MetadataBuilder facet_field_facetType = facet_fieldSchema.get("facetType");
    MetadataBuilder facet_field_fieldDatastoreCode = facet_fieldSchema.get("fieldDatastoreCode");
    MetadataBuilder facet_field_hidden = facet_fieldSchema.get("hidden");
    MetadataBuilder facet_field_id = facet_fieldSchema.get("id");
    MetadataBuilder facet_field_legacyIdentifier = facet_fieldSchema.get("legacyIdentifier");
    MetadataBuilder facet_field_logicallyDeletedOn = facet_fieldSchema.get("logicallyDeletedOn");
    MetadataBuilder facet_field_manualTokens = facet_fieldSchema.get("manualTokens");
    MetadataBuilder facet_field_markedForParsing = facet_fieldSchema.get("markedForParsing");
    MetadataBuilder facet_field_markedForPreviewConversion = facet_fieldSchema.get("markedForPreviewConversion");
    MetadataBuilder facet_field_markedForReindexing = facet_fieldSchema.get("markedForReindexing");
    MetadataBuilder facet_field_migrationDataVersion = facet_fieldSchema.get("migrationDataVersion");
    MetadataBuilder facet_field_modifiedBy = facet_fieldSchema.get("modifiedBy");
    MetadataBuilder facet_field_modifiedOn = facet_fieldSchema.get("modifiedOn");
    MetadataBuilder facet_field_openByDefault = facet_fieldSchema.get("openByDefault");
    MetadataBuilder facet_field_order = facet_fieldSchema.get("order");
    MetadataBuilder facet_field_orderResult = facet_fieldSchema.get("orderResult");
    MetadataBuilder facet_field_pages = facet_fieldSchema.get("pages");
    MetadataBuilder facet_field_path = facet_fieldSchema.get("path");
    MetadataBuilder facet_field_pathParts = facet_fieldSchema.get("pathParts");
    MetadataBuilder facet_field_principalpath = facet_fieldSchema.get("principalpath");
    MetadataBuilder facet_field_removedauthorizations = facet_fieldSchema.get("removedauthorizations");
    MetadataBuilder facet_field_schema = facet_fieldSchema.get("schema");
    MetadataBuilder facet_field_shareDenyTokens = facet_fieldSchema.get("shareDenyTokens");
    MetadataBuilder facet_field_shareTokens = facet_fieldSchema.get("shareTokens");
    MetadataBuilder facet_field_title = facet_fieldSchema.get("title");
    MetadataBuilder facet_field_tokens = facet_fieldSchema.get("tokens");
    MetadataBuilder facet_field_tokensHierarchy = facet_fieldSchema.get("tokensHierarchy");
    MetadataBuilder facet_field_usedByModule = facet_fieldSchema.get("usedByModule");
    MetadataBuilder facet_field_visibleInTrees = facet_fieldSchema.get("visibleInTrees");
    MetadataBuilder facet_query_active = facet_querySchema.get("active");
    MetadataBuilder facet_query_allReferences = facet_querySchema.get("allReferences");
    MetadataBuilder facet_query_allRemovedAuths = facet_querySchema.get("allRemovedAuths");
    MetadataBuilder facet_query_attachedAncestors = facet_querySchema.get("attachedAncestors");
    MetadataBuilder facet_query_autocomplete = facet_querySchema.get("autocomplete");
    MetadataBuilder facet_query_caption = facet_querySchema.get("caption");
    MetadataBuilder facet_query_createdBy = facet_querySchema.get("createdBy");
    MetadataBuilder facet_query_createdOn = facet_querySchema.get("createdOn");
    MetadataBuilder facet_query_deleted = facet_querySchema.get("deleted");
    MetadataBuilder facet_query_denyTokens = facet_querySchema.get("denyTokens");
    MetadataBuilder facet_query_detachedauthorizations = facet_querySchema.get("detachedauthorizations");
    MetadataBuilder facet_query_elementPerPage = facet_querySchema.get("elementPerPage");
    MetadataBuilder facet_query_errorOnPhysicalDeletion = facet_querySchema.get("errorOnPhysicalDeletion");
    MetadataBuilder facet_query_estimatedSize = facet_querySchema.get("estimatedSize");
    MetadataBuilder facet_query_facetType = facet_querySchema.get("facetType");
    MetadataBuilder facet_query_fieldDatastoreCode = facet_querySchema.get("fieldDatastoreCode");
    MetadataBuilder facet_query_hidden = facet_querySchema.get("hidden");
    MetadataBuilder facet_query_id = facet_querySchema.get("id");
    MetadataBuilder facet_query_legacyIdentifier = facet_querySchema.get("legacyIdentifier");
    MetadataBuilder facet_query_logicallyDeletedOn = facet_querySchema.get("logicallyDeletedOn");
    MetadataBuilder facet_query_manualTokens = facet_querySchema.get("manualTokens");
    MetadataBuilder facet_query_markedForParsing = facet_querySchema.get("markedForParsing");
    MetadataBuilder facet_query_markedForPreviewConversion = facet_querySchema.get("markedForPreviewConversion");
    MetadataBuilder facet_query_markedForReindexing = facet_querySchema.get("markedForReindexing");
    MetadataBuilder facet_query_migrationDataVersion = facet_querySchema.get("migrationDataVersion");
    MetadataBuilder facet_query_modifiedBy = facet_querySchema.get("modifiedBy");
    MetadataBuilder facet_query_modifiedOn = facet_querySchema.get("modifiedOn");
    MetadataBuilder facet_query_openByDefault = facet_querySchema.get("openByDefault");
    MetadataBuilder facet_query_order = facet_querySchema.get("order");
    MetadataBuilder facet_query_orderResult = facet_querySchema.get("orderResult");
    MetadataBuilder facet_query_pages = facet_querySchema.get("pages");
    MetadataBuilder facet_query_path = facet_querySchema.get("path");
    MetadataBuilder facet_query_pathParts = facet_querySchema.get("pathParts");
    MetadataBuilder facet_query_principalpath = facet_querySchema.get("principalpath");
    MetadataBuilder facet_query_removedauthorizations = facet_querySchema.get("removedauthorizations");
    MetadataBuilder facet_query_schema = facet_querySchema.get("schema");
    MetadataBuilder facet_query_shareDenyTokens = facet_querySchema.get("shareDenyTokens");
    MetadataBuilder facet_query_shareTokens = facet_querySchema.get("shareTokens");
    MetadataBuilder facet_query_title = facet_querySchema.get("title");
    MetadataBuilder facet_query_tokens = facet_querySchema.get("tokens");
    MetadataBuilder facet_query_tokensHierarchy = facet_querySchema.get("tokensHierarchy");
    MetadataBuilder facet_query_usedByModule = facet_querySchema.get("usedByModule");
    MetadataBuilder facet_query_visibleInTrees = facet_querySchema.get("visibleInTrees");
  }

  private void createUserCredentialSchemaTypeMetadatas(MetadataSchemaTypesBuilder types, MetadataSchemaTypeBuilder userCredentialSchemaType, MetadataSchemaBuilder userCredentialSchema) {
    MetadataBuilder userCredential_address = userCredentialSchema.create("address").setType(MetadataValueType.STRING);
    MetadataBuilder userCredential_agentStatus = userCredentialSchema.create("agentStatus").setType(MetadataValueType.ENUM);
    userCredential_agentStatus.defineAsEnum(AgentStatus.class);
    MetadataBuilder userCredential_allReferences = userCredentialSchema.create("allReferences").setType(MetadataValueType.STRING);
    userCredential_allReferences.setMultivalue(true);
    userCredential_allReferences.setSystemReserved(true);
    userCredential_allReferences.setUndeletable(true);
    userCredential_allReferences.setMultiLingual(false);
    MetadataBuilder userCredential_allRemovedAuths = userCredentialSchema.create("allRemovedAuths").setType(MetadataValueType.STRING);
    userCredential_allRemovedAuths.setMultivalue(true);
    userCredential_allRemovedAuths.setSystemReserved(true);
    userCredential_allRemovedAuths.setUndeletable(true);
    userCredential_allRemovedAuths.setEssential(true);
    userCredential_allRemovedAuths.setMultiLingual(false);
    MetadataBuilder userCredential_attachedAncestors = userCredentialSchema.create("attachedAncestors").setType(MetadataValueType.STRING);
    userCredential_attachedAncestors.setMultivalue(true);
    userCredential_attachedAncestors.setSystemReserved(true);
    userCredential_attachedAncestors.setUndeletable(true);
    userCredential_attachedAncestors.setEssential(true);
    userCredential_attachedAncestors.setMultiLingual(false);
    MetadataBuilder userCredential_autocomplete = userCredentialSchema.create("autocomplete").setType(MetadataValueType.STRING);
    userCredential_autocomplete.setMultivalue(true);
    userCredential_autocomplete.setSystemReserved(true);
    userCredential_autocomplete.setUndeletable(true);
    userCredential_autocomplete.setEssential(true);
    userCredential_autocomplete.setMultiLingual(true);
    MetadataBuilder userCredential_caption = userCredentialSchema.create("caption").setType(MetadataValueType.STRING);
    userCredential_caption.setSystemReserved(true);
    userCredential_caption.setUndeletable(true);
    userCredential_caption.setMultiLingual(false);
    userCredential_caption.setSortable(true);
    MetadataBuilder userCredential_collections = userCredentialSchema.create("collections").setType(MetadataValueType.STRING);
    userCredential_collections.setMultivalue(true);
    userCredential_collections.setUndeletable(true);
    MetadataBuilder userCredential_createdBy = userCredentialSchema.create("createdBy").setType(MetadataValueType.REFERENCE);
    userCredential_createdBy.setSystemReserved(true);
    userCredential_createdBy.setUndeletable(true);
    userCredential_createdBy.setMultiLingual(false);
    userCredential_createdBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder userCredential_createdOn = userCredentialSchema.create("createdOn").setType(MetadataValueType.DATE_TIME);
    userCredential_createdOn.setSystemReserved(true);
    userCredential_createdOn.setUndeletable(true);
    userCredential_createdOn.setMultiLingual(false);
    userCredential_createdOn.setSortable(true);
    MetadataBuilder userCredential_deleted = userCredentialSchema.create("deleted").setType(MetadataValueType.BOOLEAN);
    userCredential_deleted.setSystemReserved(true);
    userCredential_deleted.setUndeletable(true);
    userCredential_deleted.setMultiLingual(false);
    MetadataBuilder userCredential_denyTokens = userCredentialSchema.create("denyTokens").setType(MetadataValueType.STRING);
    userCredential_denyTokens.setMultivalue(true);
    userCredential_denyTokens.setSystemReserved(true);
    userCredential_denyTokens.setUndeletable(true);
    userCredential_denyTokens.setMultiLingual(false);
    userCredential_denyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder userCredential_detachedauthorizations = userCredentialSchema.create("detachedauthorizations").setType(MetadataValueType.BOOLEAN);
    userCredential_detachedauthorizations.setSystemReserved(true);
    userCredential_detachedauthorizations.setUndeletable(true);
    userCredential_detachedauthorizations.setMultiLingual(false);
    MetadataBuilder userCredential_dn = userCredentialSchema.create("dn").setType(MetadataValueType.STRING);
    userCredential_dn.setUndeletable(true);
    userCredential_dn.setUniqueValue(true);
    MetadataBuilder userCredential_doNotReceiveEmails = userCredentialSchema.create("doNotReceiveEmails").setType(MetadataValueType.BOOLEAN);
    userCredential_doNotReceiveEmails.setUndeletable(true);
    MetadataBuilder userCredential_domain = userCredentialSchema.create("domain").setType(MetadataValueType.STRING);
    userCredential_domain.setUndeletable(true);
    MetadataBuilder userCredential_email = userCredentialSchema.create("email").setType(MetadataValueType.STRING);
    userCredential_email.setUndeletable(true);
    userCredential_email.defineValidators().add(EmailValidator.class);
    MetadataBuilder userCredential_errorOnPhysicalDeletion = userCredentialSchema.create("errorOnPhysicalDeletion").setType(MetadataValueType.BOOLEAN);
    userCredential_errorOnPhysicalDeletion.setSystemReserved(true);
    userCredential_errorOnPhysicalDeletion.setUndeletable(true);
    userCredential_errorOnPhysicalDeletion.setMultiLingual(false);
    MetadataBuilder userCredential_estimatedSize = userCredentialSchema.create("estimatedSize").setType(MetadataValueType.INTEGER);
    userCredential_estimatedSize.setSystemReserved(true);
    userCredential_estimatedSize.setUndeletable(true);
    userCredential_estimatedSize.setMultiLingual(false);
    MetadataBuilder userCredential_fax = userCredentialSchema.create("fax").setType(MetadataValueType.STRING);
    MetadataBuilder userCredential_firstname = userCredentialSchema.create("firstname").setType(MetadataValueType.STRING);
    userCredential_firstname.setUndeletable(true);
    MetadataBuilder userCredential_globalGroups = userCredentialSchema.create("globalGroups").setType(MetadataValueType.STRING);
    userCredential_globalGroups.setMultivalue(true);
    userCredential_globalGroups.setCacheIndex(true);
    userCredential_globalGroups.setUndeletable(true);
    MetadataBuilder userCredential_hasAgreedToPrivacyPolicy = userCredentialSchema.create("hasAgreedToPrivacyPolicy").setType(MetadataValueType.BOOLEAN);
    userCredential_hasAgreedToPrivacyPolicy.setUndeletable(true);
    MetadataBuilder userCredential_hasReadLastAlert = userCredentialSchema.create("hasReadLastAlert").setType(MetadataValueType.BOOLEAN);
    userCredential_hasReadLastAlert.setUndeletable(true);
    MetadataBuilder userCredential_hidden = userCredentialSchema.create("hidden").setType(MetadataValueType.BOOLEAN);
    userCredential_hidden.setSystemReserved(true);
    userCredential_hidden.setUndeletable(true);
    userCredential_hidden.setMultiLingual(false);
    MetadataBuilder userCredential_id = userCredentialSchema.create("id").setType(MetadataValueType.STRING);
    userCredential_id.setDefaultRequirement(true);
    userCredential_id.setSystemReserved(true);
    userCredential_id.setUndeletable(true);
    userCredential_id.setMultiLingual(false);
    userCredential_id.setSearchable(true);
    userCredential_id.setSortable(true);
    userCredential_id.setUniqueValue(true);
    userCredential_id.setUnmodifiable(true);
    MetadataBuilder userCredential_jobTitle = userCredentialSchema.create("jobTitle").setType(MetadataValueType.STRING);
    MetadataBuilder userCredential_lastname = userCredentialSchema.create("lastname").setType(MetadataValueType.STRING);
    userCredential_lastname.setUndeletable(true);
    MetadataBuilder userCredential_legacyIdentifier = userCredentialSchema.create("legacyIdentifier").setType(MetadataValueType.STRING);
    userCredential_legacyIdentifier.setDefaultRequirement(true);
    userCredential_legacyIdentifier.setSystemReserved(true);
    userCredential_legacyIdentifier.setUndeletable(true);
    userCredential_legacyIdentifier.setMultiLingual(false);
    userCredential_legacyIdentifier.setSearchable(true);
    userCredential_legacyIdentifier.setUniqueValue(true);
    userCredential_legacyIdentifier.setUnmodifiable(true);
    MetadataBuilder userCredential_logicallyDeletedOn = userCredentialSchema.create("logicallyDeletedOn").setType(MetadataValueType.DATE_TIME);
    userCredential_logicallyDeletedOn.setSystemReserved(true);
    userCredential_logicallyDeletedOn.setUndeletable(true);
    userCredential_logicallyDeletedOn.setMultiLingual(false);
    MetadataBuilder userCredential_manualTokens = userCredentialSchema.create("manualTokens").setType(MetadataValueType.STRING);
    userCredential_manualTokens.setMultivalue(true);
    userCredential_manualTokens.setSystemReserved(true);
    userCredential_manualTokens.setUndeletable(true);
    userCredential_manualTokens.setMultiLingual(false);
    userCredential_manualTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder userCredential_markedForParsing = userCredentialSchema.create("markedForParsing").setType(MetadataValueType.BOOLEAN);
    userCredential_markedForParsing.setSystemReserved(true);
    userCredential_markedForParsing.setUndeletable(true);
    userCredential_markedForParsing.setMultiLingual(false);
    MetadataBuilder userCredential_markedForPreviewConversion = userCredentialSchema.create("markedForPreviewConversion").setType(MetadataValueType.BOOLEAN);
    userCredential_markedForPreviewConversion.setSystemReserved(true);
    userCredential_markedForPreviewConversion.setUndeletable(true);
    userCredential_markedForPreviewConversion.setMultiLingual(false);
    MetadataBuilder userCredential_markedForReindexing = userCredentialSchema.create("markedForReindexing").setType(MetadataValueType.BOOLEAN);
    userCredential_markedForReindexing.setSystemReserved(true);
    userCredential_markedForReindexing.setUndeletable(true);
    userCredential_markedForReindexing.setMultiLingual(false);
    MetadataBuilder userCredential_migrationDataVersion = userCredentialSchema.create("migrationDataVersion").setType(MetadataValueType.NUMBER);
    userCredential_migrationDataVersion.setSystemReserved(true);
    userCredential_migrationDataVersion.setUndeletable(true);
    userCredential_migrationDataVersion.setMultiLingual(false);
    userCredential_migrationDataVersion.setEssentialInSummary(true);
    MetadataBuilder userCredential_modifiedBy = userCredentialSchema.create("modifiedBy").setType(MetadataValueType.REFERENCE);
    userCredential_modifiedBy.setSystemReserved(true);
    userCredential_modifiedBy.setUndeletable(true);
    userCredential_modifiedBy.setMultiLingual(false);
    userCredential_modifiedBy.defineReferencesTo(types.getSchemaType("user"));
    MetadataBuilder userCredential_modifiedOn = userCredentialSchema.create("modifiedOn").setType(MetadataValueType.DATE_TIME);
    userCredential_modifiedOn.setSystemReserved(true);
    userCredential_modifiedOn.setUndeletable(true);
    userCredential_modifiedOn.setMultiLingual(false);
    userCredential_modifiedOn.setSortable(true);
    MetadataBuilder userCredential_msExchangeDelegateList = userCredentialSchema.create("msExchangeDelegateList").setType(MetadataValueType.STRING);
    userCredential_msExchangeDelegateList.setMultivalue(true);
    userCredential_msExchangeDelegateList.setUndeletable(true);
    MetadataBuilder userCredential_path = userCredentialSchema.create("path").setType(MetadataValueType.STRING);
    userCredential_path.setMultivalue(true);
    userCredential_path.setSystemReserved(true);
    userCredential_path.setUndeletable(true);
    userCredential_path.setMultiLingual(false);
    MetadataBuilder userCredential_pathParts = userCredentialSchema.create("pathParts").setType(MetadataValueType.STRING);
    userCredential_pathParts.setMultivalue(true);
    userCredential_pathParts.setSystemReserved(true);
    userCredential_pathParts.setUndeletable(true);
    userCredential_pathParts.setMultiLingual(false);
    MetadataBuilder userCredential_personalEmails = userCredentialSchema.create("personalEmails").setType(MetadataValueType.STRING);
    userCredential_personalEmails.setMultivalue(true);
    userCredential_personalEmails.setUndeletable(true);
    MetadataBuilder userCredential_phone = userCredentialSchema.create("phone").setType(MetadataValueType.STRING);
    MetadataBuilder userCredential_principalpath = userCredentialSchema.create("principalpath").setType(MetadataValueType.STRING);
    userCredential_principalpath.setSystemReserved(true);
    userCredential_principalpath.setUndeletable(true);
    userCredential_principalpath.setMultiLingual(false);
    MetadataBuilder userCredential_removedauthorizations = userCredentialSchema.create("removedauthorizations").setType(MetadataValueType.STRING);
    userCredential_removedauthorizations.setMultivalue(true);
    userCredential_removedauthorizations.setSystemReserved(true);
    userCredential_removedauthorizations.setUndeletable(true);
    userCredential_removedauthorizations.setMultiLingual(false);
    MetadataBuilder userCredential_schema = userCredentialSchema.create("schema").setType(MetadataValueType.STRING);
    userCredential_schema.setDefaultRequirement(true);
    userCredential_schema.setSystemReserved(true);
    userCredential_schema.setUndeletable(true);
    userCredential_schema.setMultiLingual(false);
    MetadataBuilder userCredential_serviceKey = userCredentialSchema.create("serviceKey").setType(MetadataValueType.STRING);
    userCredential_serviceKey.setCacheIndex(true);
    userCredential_serviceKey.setUndeletable(true);
    userCredential_serviceKey.setEncrypted(true);
    userCredential_serviceKey.setUniqueValue(true);
    MetadataBuilder userCredential_shareDenyTokens = userCredentialSchema.create("shareDenyTokens").setType(MetadataValueType.STRING);
    userCredential_shareDenyTokens.setMultivalue(true);
    userCredential_shareDenyTokens.setSystemReserved(true);
    userCredential_shareDenyTokens.setUndeletable(true);
    userCredential_shareDenyTokens.setMultiLingual(false);
    userCredential_shareDenyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder userCredential_shareTokens = userCredentialSchema.create("shareTokens").setType(MetadataValueType.STRING);
    userCredential_shareTokens.setMultivalue(true);
    userCredential_shareTokens.setSystemReserved(true);
    userCredential_shareTokens.setUndeletable(true);
    userCredential_shareTokens.setMultiLingual(false);
    userCredential_shareTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder userCredential_status = userCredentialSchema.create("status").setType(MetadataValueType.ENUM);
    userCredential_status.setDefaultRequirement(true);
    userCredential_status.setUndeletable(true);
    userCredential_status.defineAsEnum(UserCredentialStatus.class);
    MetadataBuilder userCredential_systemAdmin = userCredentialSchema.create("systemAdmin").setType(MetadataValueType.BOOLEAN);
    userCredential_systemAdmin.setDefaultRequirement(true);
    userCredential_systemAdmin.setUndeletable(true);
    userCredential_systemAdmin.setDefaultValue(false);
    MetadataBuilder userCredential_title = userCredentialSchema.create("title").setType(MetadataValueType.STRING);
    userCredential_title.setUndeletable(true);
    userCredential_title.setMultiLingual(false);
    userCredential_title.setSchemaAutocomplete(true);
    userCredential_title.setSearchable(true);
    MetadataBuilder userCredential_tokenExpirations = userCredentialSchema.create("tokenExpirations").setType(MetadataValueType.DATE_TIME);
    userCredential_tokenExpirations.setMultivalue(true);
    userCredential_tokenExpirations.setUndeletable(true);
    MetadataBuilder userCredential_tokenKeys = userCredentialSchema.create("tokenKeys").setType(MetadataValueType.STRING);
    userCredential_tokenKeys.setMultivalue(true);
    userCredential_tokenKeys.setUndeletable(true);
    userCredential_tokenKeys.setEncrypted(true);
    MetadataBuilder userCredential_tokens = userCredentialSchema.create("tokens").setType(MetadataValueType.STRING);
    userCredential_tokens.setMultivalue(true);
    userCredential_tokens.setSystemReserved(true);
    userCredential_tokens.setUndeletable(true);
    userCredential_tokens.setMultiLingual(false);
    MetadataBuilder userCredential_tokensHierarchy = userCredentialSchema.create("tokensHierarchy").setType(MetadataValueType.STRING);
    userCredential_tokensHierarchy.setMultivalue(true);
    userCredential_tokensHierarchy.setSystemReserved(true);
    userCredential_tokensHierarchy.setUndeletable(true);
    userCredential_tokensHierarchy.setMultiLingual(false);
    MetadataBuilder userCredential_username = userCredentialSchema.create("username").setType(MetadataValueType.STRING);
    userCredential_username.setCacheIndex(true);
    userCredential_username.setDefaultRequirement(true);
    userCredential_username.setUndeletable(true);
    userCredential_username.setUniqueValue(true);
    userCredential_username.setUnmodifiable(true);
    MetadataBuilder userCredential_visibleInTrees = userCredentialSchema.create("visibleInTrees").setType(MetadataValueType.BOOLEAN);
    userCredential_visibleInTrees.setSystemReserved(true);
    userCredential_visibleInTrees.setUndeletable(true);
    userCredential_visibleInTrees.setMultiLingual(false);
  }

  private void createGroupSchemaTypeMetadatas(MetadataSchemaTypesBuilder types, MetadataSchemaTypeBuilder groupSchemaType, MetadataSchemaBuilder groupSchema) {
    MetadataBuilder group_allReferences = groupSchema.create("allReferences").setType(MetadataValueType.STRING);
    group_allReferences.setMultivalue(true);
    group_allReferences.setSystemReserved(true);
    group_allReferences.setUndeletable(true);
    group_allReferences.setMultiLingual(false);
    MetadataBuilder group_allRemovedAuths = groupSchema.create("allRemovedAuths").setType(MetadataValueType.STRING);
    group_allRemovedAuths.setMultivalue(true);
    group_allRemovedAuths.setSystemReserved(true);
    group_allRemovedAuths.setUndeletable(true);
    group_allRemovedAuths.setEssential(true);
    group_allRemovedAuths.setMultiLingual(false);
    MetadataBuilder group_ancestors = groupSchema.create("ancestors").setType(MetadataValueType.STRING);
    group_ancestors.setMultivalue(true);
    MetadataBuilder group_attachedAncestors = groupSchema.create("attachedAncestors").setType(MetadataValueType.STRING);
    group_attachedAncestors.setMultivalue(true);
    group_attachedAncestors.setSystemReserved(true);
    group_attachedAncestors.setUndeletable(true);
    group_attachedAncestors.setEssential(true);
    group_attachedAncestors.setMultiLingual(false);
    MetadataBuilder group_autocomplete = groupSchema.create("autocomplete").setType(MetadataValueType.STRING);
    group_autocomplete.setMultivalue(true);
    group_autocomplete.setSystemReserved(true);
    group_autocomplete.setUndeletable(true);
    group_autocomplete.setEssential(true);
    group_autocomplete.setMultiLingual(true);
    MetadataBuilder group_caption = groupSchema.create("caption").setType(MetadataValueType.STRING);
    group_caption.setSystemReserved(true);
    group_caption.setUndeletable(true);
    group_caption.setMultiLingual(false);
    group_caption.setSortable(true);
    MetadataBuilder group_code = groupSchema.create("code").setType(MetadataValueType.STRING);
    group_code.setCacheIndex(true);
    group_code.setUndeletable(true);
    group_code.setSchemaAutocomplete(true);
    group_code.setUniqueValue(true);
    MetadataBuilder group_createdOn = groupSchema.create("createdOn").setType(MetadataValueType.DATE_TIME);
    group_createdOn.setSystemReserved(true);
    group_createdOn.setUndeletable(true);
    group_createdOn.setMultiLingual(false);
    group_createdOn.setSortable(true);
    MetadataBuilder group_deleted = groupSchema.create("deleted").setType(MetadataValueType.BOOLEAN);
    group_deleted.setSystemReserved(true);
    group_deleted.setUndeletable(true);
    group_deleted.setMultiLingual(false);
    MetadataBuilder group_denyTokens = groupSchema.create("denyTokens").setType(MetadataValueType.STRING);
    group_denyTokens.setMultivalue(true);
    group_denyTokens.setSystemReserved(true);
    group_denyTokens.setUndeletable(true);
    group_denyTokens.setMultiLingual(false);
    group_denyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder group_detachedauthorizations = groupSchema.create("detachedauthorizations").setType(MetadataValueType.BOOLEAN);
    group_detachedauthorizations.setSystemReserved(true);
    group_detachedauthorizations.setUndeletable(true);
    group_detachedauthorizations.setMultiLingual(false);
    MetadataBuilder group_errorOnPhysicalDeletion = groupSchema.create("errorOnPhysicalDeletion").setType(MetadataValueType.BOOLEAN);
    group_errorOnPhysicalDeletion.setSystemReserved(true);
    group_errorOnPhysicalDeletion.setUndeletable(true);
    group_errorOnPhysicalDeletion.setMultiLingual(false);
    MetadataBuilder group_estimatedSize = groupSchema.create("estimatedSize").setType(MetadataValueType.INTEGER);
    group_estimatedSize.setSystemReserved(true);
    group_estimatedSize.setUndeletable(true);
    group_estimatedSize.setMultiLingual(false);
    MetadataBuilder group_hidden = groupSchema.create("hidden").setType(MetadataValueType.BOOLEAN);
    group_hidden.setSystemReserved(true);
    group_hidden.setUndeletable(true);
    group_hidden.setMultiLingual(false);
    MetadataBuilder group_id = groupSchema.create("id").setType(MetadataValueType.STRING);
    group_id.setDefaultRequirement(true);
    group_id.setSystemReserved(true);
    group_id.setUndeletable(true);
    group_id.setMultiLingual(false);
    group_id.setSearchable(true);
    group_id.setSortable(true);
    group_id.setUniqueValue(true);
    group_id.setUnmodifiable(true);
    MetadataBuilder group_isGlobal = groupSchema.create("isGlobal").setType(MetadataValueType.BOOLEAN);
    group_isGlobal.setUndeletable(true);
    MetadataBuilder group_legacyIdentifier = groupSchema.create("legacyIdentifier").setType(MetadataValueType.STRING);
    group_legacyIdentifier.setDefaultRequirement(true);
    group_legacyIdentifier.setSystemReserved(true);
    group_legacyIdentifier.setUndeletable(true);
    group_legacyIdentifier.setMultiLingual(false);
    group_legacyIdentifier.setSearchable(true);
    group_legacyIdentifier.setUniqueValue(true);
    group_legacyIdentifier.setUnmodifiable(true);
    MetadataBuilder group_logicallyDeletedOn = groupSchema.create("logicallyDeletedOn").setType(MetadataValueType.DATE_TIME);
    group_logicallyDeletedOn.setSystemReserved(true);
    group_logicallyDeletedOn.setUndeletable(true);
    group_logicallyDeletedOn.setMultiLingual(false);
    MetadataBuilder group_manualTokens = groupSchema.create("manualTokens").setType(MetadataValueType.STRING);
    group_manualTokens.setMultivalue(true);
    group_manualTokens.setSystemReserved(true);
    group_manualTokens.setUndeletable(true);
    group_manualTokens.setMultiLingual(false);
    group_manualTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder group_markedForParsing = groupSchema.create("markedForParsing").setType(MetadataValueType.BOOLEAN);
    group_markedForParsing.setSystemReserved(true);
    group_markedForParsing.setUndeletable(true);
    group_markedForParsing.setMultiLingual(false);
    MetadataBuilder group_markedForPreviewConversion = groupSchema.create("markedForPreviewConversion").setType(MetadataValueType.BOOLEAN);
    group_markedForPreviewConversion.setSystemReserved(true);
    group_markedForPreviewConversion.setUndeletable(true);
    group_markedForPreviewConversion.setMultiLingual(false);
    MetadataBuilder group_markedForReindexing = groupSchema.create("markedForReindexing").setType(MetadataValueType.BOOLEAN);
    group_markedForReindexing.setSystemReserved(true);
    group_markedForReindexing.setUndeletable(true);
    group_markedForReindexing.setMultiLingual(false);
    MetadataBuilder group_migrationDataVersion = groupSchema.create("migrationDataVersion").setType(MetadataValueType.NUMBER);
    group_migrationDataVersion.setSystemReserved(true);
    group_migrationDataVersion.setUndeletable(true);
    group_migrationDataVersion.setMultiLingual(false);
    group_migrationDataVersion.setEssentialInSummary(true);
    MetadataBuilder group_modifiedOn = groupSchema.create("modifiedOn").setType(MetadataValueType.DATE_TIME);
    group_modifiedOn.setSystemReserved(true);
    group_modifiedOn.setUndeletable(true);
    group_modifiedOn.setMultiLingual(false);
    group_modifiedOn.setSortable(true);
    MetadataBuilder group_parent = groupSchema.create("parent").setType(MetadataValueType.REFERENCE);
    group_parent.setCacheIndex(true);
    group_parent.setUndeletable(true);
    group_parent.defineReferencesTo(asList(types.getSchema("group_default")));
    MetadataBuilder group_path = groupSchema.create("path").setType(MetadataValueType.STRING);
    group_path.setMultivalue(true);
    group_path.setSystemReserved(true);
    group_path.setUndeletable(true);
    group_path.setMultiLingual(false);
    MetadataBuilder group_pathParts = groupSchema.create("pathParts").setType(MetadataValueType.STRING);
    group_pathParts.setMultivalue(true);
    group_pathParts.setSystemReserved(true);
    group_pathParts.setUndeletable(true);
    group_pathParts.setMultiLingual(false);
    MetadataBuilder group_principalpath = groupSchema.create("principalpath").setType(MetadataValueType.STRING);
    group_principalpath.setSystemReserved(true);
    group_principalpath.setUndeletable(true);
    group_principalpath.setMultiLingual(false);
    MetadataBuilder group_removedauthorizations = groupSchema.create("removedauthorizations").setType(MetadataValueType.STRING);
    group_removedauthorizations.setMultivalue(true);
    group_removedauthorizations.setSystemReserved(true);
    group_removedauthorizations.setUndeletable(true);
    group_removedauthorizations.setMultiLingual(false);
    MetadataBuilder group_roles = groupSchema.create("roles").setType(MetadataValueType.STRING);
    group_roles.setMultivalue(true);
    group_roles.setUndeletable(true);
    MetadataBuilder group_schema = groupSchema.create("schema").setType(MetadataValueType.STRING);
    group_schema.setDefaultRequirement(true);
    group_schema.setSystemReserved(true);
    group_schema.setUndeletable(true);
    group_schema.setMultiLingual(false);
    MetadataBuilder group_shareDenyTokens = groupSchema.create("shareDenyTokens").setType(MetadataValueType.STRING);
    group_shareDenyTokens.setMultivalue(true);
    group_shareDenyTokens.setSystemReserved(true);
    group_shareDenyTokens.setUndeletable(true);
    group_shareDenyTokens.setMultiLingual(false);
    group_shareDenyTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder group_shareTokens = groupSchema.create("shareTokens").setType(MetadataValueType.STRING);
    group_shareTokens.setMultivalue(true);
    group_shareTokens.setSystemReserved(true);
    group_shareTokens.setUndeletable(true);
    group_shareTokens.setMultiLingual(false);
    group_shareTokens.defineValidators().add(ManualTokenValidator.class);
    MetadataBuilder group_title = groupSchema.create("title").setType(MetadataValueType.STRING);
    group_title.setUndeletable(true);
    group_title.setMultiLingual(false);
    group_title.setSchemaAutocomplete(true);
    group_title.setSearchable(true);
    MetadataBuilder group_tokens = groupSchema.create("tokens").setType(MetadataValueType.STRING);
    group_tokens.setMultivalue(true);
    group_tokens.setSystemReserved(true);
    group_tokens.setUndeletable(true);
    group_tokens.setMultiLingual(false);
    MetadataBuilder group_tokensHierarchy = groupSchema.create("tokensHierarchy").setType(MetadataValueType.STRING);
    group_tokensHierarchy.setMultivalue(true);
    group_tokensHierarchy.setSystemReserved(true);
    group_tokensHierarchy.setUndeletable(true);
    group_tokensHierarchy.setMultiLingual(false);
    MetadataBuilder group_visibleInTrees = groupSchema.create("visibleInTrees").setType(MetadataValueType.BOOLEAN);
    group_visibleInTrees.setSystemReserved(true);
    group_visibleInTrees.setUndeletable(true);
    group_visibleInTrees.setMultiLingual(false);
  }

  public void applySchemasDisplay(SchemasDisplayManager manager) {
    SchemaTypesDisplayTransactionBuilder transaction = manager.newTransactionBuilderFor(collection);
    SchemaTypesDisplayConfig typesConfig = manager.getTypes(collection);
    transaction.add(manager.getMetadata(collection, "authorizationDetails_default_path").withMetadataGroup("").withInputType(MetadataInputType.FIELD).withHighlightStatus(false).withVisibleInAdvancedSearchStatus(true));
    transaction.add(manager.getMetadata(collection, "capsule_default_html").withMetadataGroup("").withInputType(MetadataInputType.RICHTEXT).withHighlightStatus(false).withVisibleInAdvancedSearchStatus(false));
    transaction.add(manager.getMetadata(collection, "collection_default_path").withMetadataGroup("").withInputType(MetadataInputType.FIELD).withHighlightStatus(false).withVisibleInAdvancedSearchStatus(true));
    transaction.add(manager.getMetadata(collection, "emailToSend_default_path").withMetadataGroup("").withInputType(MetadataInputType.FIELD).withHighlightStatus(false).withVisibleInAdvancedSearchStatus(true));
    transaction.add(manager.getMetadata(collection, "event_default_path").withMetadataGroup("").withInputType(MetadataInputType.FIELD).withHighlightStatus(false).withVisibleInAdvancedSearchStatus(true));
    transaction.add(manager.getType(collection, "facet").withSimpleSearchStatus(false).withAdvancedSearchStatus(false).withManageableStatus(false).withMetadataGroup(resourcesProvider.getLanguageMap(asList("default:init.facetConfiguration.configuration", "init.facetConfiguration.query", "init.facetConfiguration.values"))));
    transaction.add(manager.getSchema(collection, "facet_field").withFormMetadataCodes(asList("facet_field_title", "facet_field_elementPerPage", "facet_field_facetType", "facet_field_fieldDatastoreCode", "facet_field_order", "facet_field_orderResult", "facet_field_pages", "facet_field_active", "facet_field_openByDefault", "facet_field_fieldValuesLabel")).withDisplayMetadataCodes(asList("facet_field_title", "facet_field_createdBy", "facet_field_createdOn", "facet_field_modifiedBy", "facet_field_modifiedOn", "facet_field_active", "facet_field_elementPerPage", "facet_field_facetType", "facet_field_fieldDatastoreCode", "facet_field_openByDefault", "facet_field_order", "facet_field_orderResult", "facet_field_pages", "facet_field_fieldValuesLabel")).withSearchResultsMetadataCodes(asList("facet_field_title", "facet_field_modifiedOn")).withTableMetadataCodes(new ArrayList<String>()));
    transaction.add(manager.getMetadata(collection, "facet_field_fieldValuesLabel").withMetadataGroup("init.facetConfiguration.values").withInputType(MetadataInputType.FIELD).withHighlightStatus(false).withVisibleInAdvancedSearchStatus(false));
    transaction.add(manager.getMetadata(collection, "facet_field_path").withMetadataGroup("").withInputType(MetadataInputType.FIELD).withHighlightStatus(false).withVisibleInAdvancedSearchStatus(true));
    transaction.add(manager.getSchema(collection, "facet_query").withFormMetadataCodes(asList("facet_query_title", "facet_query_elementPerPage", "facet_query_facetType", "facet_query_fieldDatastoreCode", "facet_query_order", "facet_query_orderResult", "facet_query_pages", "facet_query_active", "facet_query_openByDefault", "facet_query_listQueries")).withDisplayMetadataCodes(asList("facet_query_title", "facet_query_createdBy", "facet_query_createdOn", "facet_query_modifiedBy", "facet_query_modifiedOn", "facet_query_active", "facet_query_elementPerPage", "facet_query_facetType", "facet_query_fieldDatastoreCode", "facet_query_openByDefault", "facet_query_order", "facet_query_orderResult", "facet_query_pages", "facet_query_listQueries")).withSearchResultsMetadataCodes(asList("facet_query_title", "facet_query_modifiedOn")).withTableMetadataCodes(new ArrayList<String>()));
    transaction.add(manager.getMetadata(collection, "facet_query_listQueries").withMetadataGroup("init.facetConfiguration.query").withInputType(MetadataInputType.FIELD).withHighlightStatus(false).withVisibleInAdvancedSearchStatus(false));
    transaction.add(manager.getMetadata(collection, "facet_query_path").withMetadataGroup("").withInputType(MetadataInputType.FIELD).withHighlightStatus(false).withVisibleInAdvancedSearchStatus(true));
    transaction.add(manager.getMetadata(collection, "facet_default_path").withMetadataGroup("").withInputType(MetadataInputType.FIELD).withHighlightStatus(false).withVisibleInAdvancedSearchStatus(true));
    transaction.add(manager.getMetadata(collection, "group_default_path").withMetadataGroup("").withInputType(MetadataInputType.FIELD).withHighlightStatus(false).withVisibleInAdvancedSearchStatus(true));
    transaction.add(manager.getMetadata(collection, "printable_default_path").withMetadataGroup("").withInputType(MetadataInputType.FIELD).withHighlightStatus(false).withVisibleInAdvancedSearchStatus(true));
    transaction.add(manager.getMetadata(collection, "report_default_path").withMetadataGroup("").withInputType(MetadataInputType.FIELD).withHighlightStatus(false).withVisibleInAdvancedSearchStatus(true));
    transaction.add(manager.getSchema(collection, "task_approval").withFormMetadataCodes(asList("task_approval_title", "task_approval_assignCandidates", "task_approval_assignedTo", "task_approval_finishedBy", "task_approval_workflowIdentifier", "task_approval_workflowRecordIdentifiers", "task_approval_assignedOn", "task_approval_dueDate", "task_approval_finishedOn", "task_approval_decision")).withDisplayMetadataCodes(asList("task_approval_title", "task_approval_createdBy", "task_approval_createdOn", "task_approval_modifiedBy", "task_approval_modifiedOn", "task_approval_assignCandidates", "task_approval_assignedOn", "task_approval_assignedTo", "task_approval_dueDate", "task_approval_finishedBy", "task_approval_finishedOn", "task_approval_workflowIdentifier", "task_approval_workflowRecordIdentifiers", "task_approval_decision")).withSearchResultsMetadataCodes(asList("task_approval_title", "task_approval_modifiedOn")).withTableMetadataCodes(new ArrayList<String>()));
    transaction.add(manager.getMetadata(collection, "task_approval_path").withMetadataGroup("").withInputType(MetadataInputType.FIELD).withHighlightStatus(false).withVisibleInAdvancedSearchStatus(true));
    transaction.add(manager.getMetadata(collection, "task_default_path").withMetadataGroup("").withInputType(MetadataInputType.FIELD).withHighlightStatus(false).withVisibleInAdvancedSearchStatus(true));
    transaction.add(manager.getSchema(collection, "temporaryRecord_batchProcessReport").withFormMetadataCodes(asList("temporaryRecord_batchProcessReport_title", "temporaryRecord_batchProcessReport_daysBeforeDestruction")).withDisplayMetadataCodes(asList("temporaryRecord_batchProcessReport_createdBy", "temporaryRecord_batchProcessReport_createdOn", "temporaryRecord_batchProcessReport_modifiedBy", "temporaryRecord_batchProcessReport_modifiedOn", "temporaryRecord_batchProcessReport_daysBeforeDestruction", "temporaryRecord_batchProcessReport_errors", "temporaryRecord_batchProcessReport_linkedBatchProcess", "temporaryRecord_batchProcessReport_skippedRecords", "temporaryRecord_batchProcessReport_content")).withSearchResultsMetadataCodes(asList("temporaryRecord_batchProcessReport_title", "temporaryRecord_batchProcessReport_modifiedOn")).withTableMetadataCodes(asList("temporaryRecord_batchProcessReport_createdBy", "temporaryRecord_batchProcessReport_createdOn", "temporaryRecord_batchProcessReport_destructionDate", "temporaryRecord_batchProcessReport_content")));
    transaction.add(manager.getSchema(collection, "temporaryRecord_exportAudit").withFormMetadataCodes(asList("temporaryRecord_exportAudit_title", "temporaryRecord_exportAudit_daysBeforeDestruction")).withDisplayMetadataCodes(asList("temporaryRecord_exportAudit_title", "temporaryRecord_exportAudit_createdBy", "temporaryRecord_exportAudit_createdOn", "temporaryRecord_exportAudit_modifiedBy", "temporaryRecord_exportAudit_modifiedOn", "temporaryRecord_exportAudit_daysBeforeDestruction", "temporaryRecord_exportAudit_endDate")).withSearchResultsMetadataCodes(asList("temporaryRecord_exportAudit_title", "temporaryRecord_exportAudit_modifiedOn")).withTableMetadataCodes(asList("temporaryRecord_exportAudit_createdBy", "temporaryRecord_exportAudit_createdOn", "temporaryRecord_exportAudit_destructionDate", "temporaryRecord_exportAudit_content")));
    transaction.add(manager.getSchema(collection, "temporaryRecord_importAudit").withFormMetadataCodes(asList("temporaryRecord_importAudit_title", "temporaryRecord_importAudit_daysBeforeDestruction")).withDisplayMetadataCodes(asList("temporaryRecord_importAudit_title", "temporaryRecord_importAudit_createdBy", "temporaryRecord_importAudit_createdOn", "temporaryRecord_importAudit_modifiedBy", "temporaryRecord_importAudit_modifiedOn", "temporaryRecord_importAudit_daysBeforeDestruction", "temporaryRecord_importAudit_endDate", "temporaryRecord_importAudit_errors")).withSearchResultsMetadataCodes(asList("temporaryRecord_importAudit_title", "temporaryRecord_importAudit_modifiedOn")).withTableMetadataCodes(asList("temporaryRecord_importAudit_createdBy", "temporaryRecord_importAudit_createdOn", "temporaryRecord_importAudit_destructionDate", "temporaryRecord_importAudit_content")));
    transaction.add(manager.getSchema(collection, "temporaryRecord_default").withFormMetadataCodes(asList("temporaryRecord_default_title", "temporaryRecord_default_daysBeforeDestruction")).withDisplayMetadataCodes(asList("temporaryRecord_default_title", "temporaryRecord_default_createdBy", "temporaryRecord_default_createdOn", "temporaryRecord_default_modifiedBy", "temporaryRecord_default_modifiedOn", "temporaryRecord_default_daysBeforeDestruction")).withSearchResultsMetadataCodes(asList("temporaryRecord_default_title", "temporaryRecord_default_modifiedOn")).withTableMetadataCodes(asList("temporaryRecord_default_createdBy", "temporaryRecord_default_createdOn", "temporaryRecord_default_destructionDate", "temporaryRecord_default_content")));
    transaction.add(manager.getSchema(collection, "user_default").withFormMetadataCodes(asList("user_default_defaultTabInFolderDisplay", "user_default_defaultTaxonomy", "user_default_email", "user_default_firstname", "user_default_groups", "user_default_jobTitle", "user_default_lastname", "user_default_loginLanguageCode", "user_default_phone", "user_default_startTab", "user_default_status", "user_default_username", "user_default_userroles", "user_default_collectionDeleteAccess", "user_default_collectionReadAccess", "user_default_collectionWriteAccess", "user_default_systemAdmin", "user_default_signature")).withDisplayMetadataCodes(asList("user_default_username", "user_default_firstname", "user_default_lastname", "user_default_title", "user_default_email", "user_default_groups", "user_default_jobTitle", "user_default_phone", "user_default_status", "user_default_createdOn", "user_default_modifiedOn", "user_default_allroles", "user_default_defaultPageLength")).withSearchResultsMetadataCodes(asList("user_default_title", "user_default_modifiedOn")).withTableMetadataCodes(asList("user_default_title", "user_default_modifiedOn")));
    transaction.add(manager.getMetadata(collection, "user_default_path").withMetadataGroup("").withInputType(MetadataInputType.FIELD).withHighlightStatus(false).withVisibleInAdvancedSearchStatus(true));
    transaction.add(manager.getMetadata(collection, "user_default_personalEmails").withMetadataGroup("").withInputType(MetadataInputType.TEXTAREA).withHighlightStatus(false).withVisibleInAdvancedSearchStatus(false));
    transaction.add(manager.getMetadata(collection, "userDocument_default_path").withMetadataGroup("").withInputType(MetadataInputType.FIELD).withHighlightStatus(false).withVisibleInAdvancedSearchStatus(true));
    transaction.add(manager.getMetadata(collection, "userFolder_default_path").withMetadataGroup("").withInputType(MetadataInputType.FIELD).withHighlightStatus(false).withVisibleInAdvancedSearchStatus(true));
    manager.execute(transaction.build());
  }

  public void applyGeneratedRoles() {
    RolesManager rolesManager = appLayerFactory.getModelLayerFactory().getRolesManager();;
	  rolesManager.addRole(new Role(collection, "ADM", "Administrateur", asList("core.accessDeleteAllTemporaryRecords", "core.batchProcess", "core.deleteContentVersion", "core.deletePublicSavedSearch", "core.ldapConfigurationManagement", "core.manageConnectors", "core.manageEmailServer", "core.manageExcelReport", "core.manageFacets", "core.manageGlobalLinks", "core.manageLabels", "core.manageMetadataExtractor", "core.manageMetadataSchemas", "core.managePrintableReport", "core.manageSearchBoost", "core.manageSecurity", "core.manageSystemCollections", "core.manageSystemConfiguration", "core.manageSystemDataImports", "core.manageSystemGroups", "core.manageSystemGroupsActivation", "core.manageSystemUpdates", "core.manageSystemUsers", "core.manageTaxonomies", "core.manageTrash", "core.manageValueList", "core.managerTemporaryRecords", "core.modifyPublicSavedSearch", "core.seeAllTemporaryRecords", "core.unlimitedBatchProcess", "core.useExternalAPIS", "core.viewEvents", "core.viewLoginNotificationAlert", "core.viewSystemBatchProcesses", "core.viewSystemState")));
  }
}