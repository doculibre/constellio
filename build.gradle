plugins {
    id "fi.jasoft.plugin.vaadin" version '1.1.11' apply false
    id "org.sonarqube" version "2.2" apply false
    id "org.ajoberstar.grgit" version "2.3.0"
}

apply plugin: 'war'
apply plugin: 'application'

defaultTasks 'clean', 'compileJava'

subprojects {
    ext {
        version_mime = "0.7.2"
    }

    configurations.all {
        resolutionStrategy {
            force "org.apache.james:apache-mime4j:${version_mime}"
        }
    }

    dependencies {
        testCompile 'nl.jqno.equalsverifier:equalsverifier:1.4.1'
        testCompile 'org.jacoco:org.jacoco.agent:0.7.5+'
        testCompile 'org.jacoco:org.jacoco.ant:0.7.5+'

        compile "com.cybozu.labs:langdetect:1.1-20120112"
        compile "com.eaio.uuid:uuid:3.2"
        compile "org.jdom:jdom:2.0.2"
        compile "org.apache.poi:poi-ooxml:3.17"
        compile "org.apache.poi:poi:3.17"
        compile "org.eclipse.jetty.aggregate:jetty-all-server:8.1.19.v20160209"
        compile "org.slf4j:slf4j-log4j12:1.7.7"
        compile "org.slf4j:slf4j-api:1.7.7"
        compile "jspf:jspf.core:1.0.0"
        compile "commons-io:commons-io:2.4"
        compile "org.apache.solr:solr-solrj:6.5.0"
        compile "org.apache.solr:solr-core:6.5.0"
        compile "org.apache.commons:commons-lang3:3.4"
        compile "org.jboss.spec.javax.servlet:jboss-servlet-api_3.0_spec:1.0.2.Final"
        compile "commons-logging:commons-logging:1.1.3"
        compile "org.apache.tika:tika-core:1.20"
        compile "org.apache.tika:tika-parsers:1.20"
        compile "org.databene:contiperf:2.2.0"
        compile "commons-httpclient:commons-httpclient:3.1"
        compile "org.seleniumhq.selenium.fluent:fluent-selenium:1.14.5"
        compile "org.apache.curator:curator-framework:2.7.0"
        compile "org.apache.curator:curator-recipes:2.7.0"
        compile "org.apache.curator:curator-client:2.7.0"
        compile "org.apache.curator:curator-test:2.7.0"
        compile "commons-beanutils:commons-beanutils:1.9.2"
        compile "javax.servlet.jsp:jsp-api:2.2"
        compile "com.auxilii.msgparser:msgparser-1.12"
        compile "com.sun.messaging.mq:jaxm-api:4.4.1"
        compile "org.apache.ignite:ignite-core:2.0.0"
        compile "org.apache.ignite:ignite-indexing:2.0.0"
        compile "org.apache.ignite:ignite-zookeeper:2.0.0"
        compile "org.apache.kafka:kafka-clients:0.11.0.0"
        compile "com.google.code.gson:gson:2.8.1"
        compile group: 'jaxen', name: 'jaxen', version: '1.1.6'
        compile group: 'jdom', name: 'jdom', version: '1.0'
        compile "org.apache.pdfbox:pdfbox:2.0.8"
        compile "org.apache.pdfbox:pdfbox-debugger:2.0.8"
        compile "org.apache.pdfbox:pdfbox-tools:2.0.8"
        compile "org.apache.solr:solr-ltr:6.5.0"

        compile group: 'org.camunda.bpm.model', name: 'camunda-bpmn-model', version: '7.7.0'
        compile group: 'org.apache.tomcat', name: 'tomcat-el-api', version: '9.0.7'
        compile group: 'org.apache.tomcat', name: 'tomcat-jasper-el', version: '9.0.7'
        compile name: 'mets-api'

        compile "org.glassfish.jersey.inject:jersey-hk2:2.26"
        compile "org.glassfish.jersey.ext:jersey-bean-validation:2.26"
        compile "org.glassfish.jersey.media:jersey-media-multipart:2.26"
        compile "com.fasterxml.jackson.datatype:jackson-datatype-joda:2.9.5"

        compile "io.swagger.core.v3:swagger-jaxrs2:2.0.1"

        compileOnly "org.projectlombok:lombok:1.16.18"

		compile "com.j256.ormlite:ormlite-core:5.1"
		compile "com.j256.ormlite:ormlite-jdbc:5.1"
		compile "mysql:mysql-connector-java:5.1.20"
    }

    configurations {
        compile.exclude module: "asm-debug-all"
        compile.exclude module: "org.objectweb.asm"
        compile.exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
        compile.exclude group: 'org.apache.cxf', module:'cxf-rt-rs-client'
        compile.exclude group: 'asm', module: 'asm'
    }

    jar {
        version = project.VERSION
    }
}

ext {
    // Open the 2 Git repository
    gitConstellio = org.ajoberstar.grgit.Grgit.open(dir: project(":constellio").projectDir)
    revisionConstellio = gitConstellio.head().abbreviatedId
    branchConstellio = gitConstellio.branch.current().fullName

    if (findProject(":constellio-plugins") != null) {
        gitPlugins = org.ajoberstar.grgit.Grgit.open(dir: project(":constellio-plugins").projectDir)
        branchPlugins = gitPlugins.branch.current().fullName
        revisionPlugins = gitConstellio.head().abbreviatedId
    } else {
        branchPlugins = ""
        revisionPlugins = ""
    }
}

war {
    doFirst {
        manifest {
            attributes("Implementation-Title": project.name,
                    "Implementation-Version": project.VERSION,
                    "Implementation-Timestamp": new Date(),
                    "Implementation-Revision-Constellio": revisionConstellio,
                    "Implementation-Revision-Plugins": revisionPlugins,
                    "Implementation-Branch-Constellio": branchConstellio,
                    "Implementation-Branch-Plugins": branchPlugins)
        }
    }

    webInf {
        from("resources_i18n/") {
            into("resources_i18n")
        }
        from("reportsRecource/") {
            into("resources/reports")
        }
        from("libs/jcifs_novell.jar.disabled") {
            into("lib")
        }
    }

    if (findProject(":constellio-plugins") != null) {
        def updatePlugins = [":constellio-plugins:plugin001", ":constellio-plugins:plugin002", ":constellio-plugins:plugin003", ":constellio-plugins:plugin004",
                             ":constellio-plugins:plugin005", ":constellio-plugins:plugin006", ":constellio-plugins:plugin007", ":constellio-plugins:plugin008",
                             ":constellio-plugins:plugin009", ":constellio-plugins:plugin010", ":constellio-plugins:plugin012", ":constellio-plugins:plugin015",
                             ":constellio-plugins:plugin016", ":constellio-plugins:plugin017", ":constellio-plugins:plugin018", ":constellio-plugins:plugin019",
                             ":constellio-plugins:plugin020", ":constellio-plugins:plugin027", ":constellio-plugins:plugin028", ":constellio-plugins:plugin030",
                             ":constellio-plugins:plugin032", ":constellio-plugins:plugin033", ":constellio-plugins:plugin034", ":constellio-plugins:plugin035",
                             ":constellio-plugins:plugin036", ":constellio-plugins:plugin038", ":constellio-plugins:plugin039", ":constellio-plugins:plugin040",
                             ":constellio-plugins:plugin042"]
        def installPlugins = [":constellio-plugins:plugin023", ":constellio-plugins:plugin025"]

        from(files(updatePlugins.collect { project(it).jar.outputs.files })) {
            into "plugins-to-update"
        }

        from(files(installPlugins.collect { project(it).jar.outputs.files })) {
            into "plugins-to-install"
        }
    }

    // gwt-dev-2.7.0.vaadin4.jar
    rootSpec.exclude("**/gwt-*.vaadin4.jar")

    webAppDirName = "app/WebContent"
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile project(":constellio:data")
    compile project(":constellio:model")
    compile project(":constellio:app")
}

eclipse {
    project {
        name = 'Constellio'
        buildCommand 'compileJava'
    }
}

mainClassName = 'com.constellio.app.start.MainConstellio'
