allprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    //apply plugin: 'jacoco'

    repositories {
        mavenCentral()
        maven {
            url "http://maven.restlet.org"
        }
        maven {
            name "vaadin-addons"
            url "http://maven.vaadin.com/vaadin-addons"
        }
        maven {
            name "sonatype vaadin"
            url "https://oss.sonatype.org/content/repositories/vaadin/"
        }
        maven {
            url 'http://jaspersoft.artifactoryonline.com/jaspersoft/third-party-ce-artifacts/'
        }
        maven {
            url 'http://jasperreports.sourceforge.net/maven2'
        }

        flatDir(dirs: file(project(":constellio").projectDir.getAbsolutePath() + '/libs/'))
    }

    sourceCompatibility = 8
    targetCompatibility = 8

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.fork = false
        options.incremental = true
    }

    tasks.withType(Javadoc) {
        task ->
            enabled = false;
            options.encoding = 'UTF-8'
    }

    /*
    jacocoTestReport {
        group = "reporting"
        reports {
            xml.enabled false
            html.enabled true
            csv.enabled false
        }
    }

    test {
        jacoco {
            destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        }
    }
*/

    dependencies {
    	String gwtVersion = '2.7.0' // 2.7.0 or 2.8.2
        implementation('org.apache.hadoop:hadoop-common:3.0.3') {
            force = true
        }
        implementation('org.apache.httpcomponents:httpcore:4.4.9') {
            force = true
        }
        implementation('com.google.gwt:gwt-elemental:' + gwtVersion) {
            force = true
        }
        implementation('com.google.gwt:gwt-dev:' + gwtVersion) {
            force = true
        }
        implementation('com.google.gwt:gwt-user:' + gwtVersion) {
            force = true
        }
    }

    configurations.all {
        exclude group: 'com.google.gwt', module: 'gwt-dev'
        exclude group: 'com.google.gwt', module: 'gwt-user'
        exclude group: 'com.vaadin.external.gwt', module: 'gwt-elemental'
        exclude group: 'com.vaadin.external.gwt', module: 'gwt-dev'

        resolutionStrategy {
            force 'org.apache.hadoop:hadoop-common:3.0.3'
            force 'org.apache.httpcomponents:httpcore:4.4.9'
        }
    }

    configurations {
        runtimeClasspath {
            resolutionStrategy.force 'org.apache.hadoop:hadoop-common:3.0.3'
            resolutionStrategy.force 'org.apache.httpcomponents:httpcore:4.4.9'
        }
    }

    String projectVersion = "4.2.42"
    if (new File("./version").exists()) {
        projectVersion = new File("./version").text.trim()
    }

    project.ext.set("VERSION", projectVersion)

    eclipse {
        classpath {
            file {
                //closure executed after .classpath content is loaded from existing file
                //and after gradle build information is merged
                whenMerged { classpath ->
                    classpath.entries.sort { new File(it.path).exists() ? new File(it.path).getName() : it.path }
                }
            }
        }
    }
}
